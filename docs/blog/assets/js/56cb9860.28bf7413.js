"use strict";(self.webpackChunksea_ql_blog=self.webpackChunksea_ql_blog||[]).push([[3708],{5680:(e,a,n)=>{n.d(a,{xA:()=>o,yg:()=>c});var t=n(6540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function l(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?l(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function p(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=t.createContext({}),s=function(e){var a=t.useContext(u),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},o=function(e){var a=s(e.components);return t.createElement(u.Provider,{value:a},e.children)},g="mdxType",y={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),g=s(n),m=r,c=g["".concat(u,".").concat(m)]||g[m]||y[m]||l;return n?t.createElement(c,i(i({ref:a},o),{},{components:n})):t.createElement(c,i({ref:a},o))}));function c(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var p={};for(var u in a)hasOwnProperty.call(a,u)&&(p[u]=a[u]);p.originalType=e,p[g]="string"==typeof e?e:r,i[1]=p;for(var s=2;s<l;s++)i[s]=n[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3814:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>u,contentTitle:()=>i,default:()=>y,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var t=n(8168),r=(n(6540),n(5680));const l={slug:"2022-12-30-whats-new-in-seaquery-0.28.0",title:"SeaQuery 0.28.0 \u65b0\u7279\u6027",author:"SeaQL Team",author_title:"Ivan Krivosheev",author_url:"https://github.com/SeaQL",author_image_url:"https://www.sea-ql.org/SeaORM/img/SeaQL.png",tags:["news"]},i=void 0,p={permalink:"/blog/2022-12-30-whats-new-in-seaquery-0.28.0",editUrl:"https://github.com/SeaQL/seaql.github.io/edit/master/Blog/blog/2022-12-30-whats-new-in-seaquery-0.28.0.md",source:"@site/blog/2022-12-30-whats-new-in-seaquery-0.28.0.md",title:"SeaQuery 0.28.0 \u65b0\u7279\u6027",description:"\ud83c\udf89 \u6211\u4eec\u5f88\u9ad8\u5174\u5730\u53d1\u5e03 SeaQuery 0.28.0! \u4e0b\u9762\u662f\u4e00\u4e9b\u7279\u6027\u4eae\u70b9 \ud83c\udf1f:",date:"2022-12-30T00:00:00.000Z",formattedDate:"December 30, 2022",tags:[{label:"news",permalink:"/blog/tags/news"}],readingTime:4.99,hasTruncateMarker:!1,authors:[{name:"SeaQL Team",title:"Ivan Krivosheev",url:"https://github.com/SeaQL",imageURL:"https://www.sea-ql.org/SeaORM/img/SeaQL.png"}],frontMatter:{slug:"2022-12-30-whats-new-in-seaquery-0.28.0",title:"SeaQuery 0.28.0 \u65b0\u7279\u6027",author:"SeaQL Team",author_title:"Ivan Krivosheev",author_url:"https://github.com/SeaQL",author_image_url:"https://www.sea-ql.org/SeaORM/img/SeaQL.png",tags:["news"]},prevItem:{title:"\u5bfb\u6c42\u8d21\u732e\u8005\u548c\u5ba1\u9605\u8005 \ud83d\udce2",permalink:"/blog/2023-01-01-call-for-contributors-n-reviewers"},nextItem:{title:"Seaography 0.3.0 \u7684\u65b0\u7279\u6027",permalink:"/blog/2022-12-02-whats-new-in-seaography-0.3.0"}},u={authorsImageUrls:[void 0]},s=[{value:"\u65b0\u7684 <code>IdenStatic</code> \u7279\u6027\u7528\u4e8e\u9759\u6001\u6807\u8bc6\u7b26",id:"\u65b0\u7684-idenstatic-\u7279\u6027\u7528\u4e8e\u9759\u6001\u6807\u8bc6\u7b26",level:2},{value:"\u65b0\u7684 <code>PgExpr</code> \u548c <code>SqliteExpr</code> \u7279\u6027\u7528\u4e8e\u540e\u7aef\u7279\u5b9a\u8868\u8fbe\u5f0f",id:"\u65b0\u7684-pgexpr-\u548c-sqliteexpr-\u7279\u6027\u7528\u4e8e\u540e\u7aef\u7279\u5b9a\u8868\u8fbe\u5f0f",level:2},{value:"\u9519\u8bef\u4fee\u590d",id:"\u9519\u8bef\u4fee\u590d",level:2},{value:"\u91cd\u5927\u53d8\u66f4",id:"\u91cd\u5927\u53d8\u66f4",level:2},{value:"API \u6dfb\u52a0",id:"api-\u6dfb\u52a0",level:2},{value:"\u5176\u4ed6\u589e\u5f3a",id:"\u5176\u4ed6\u589e\u5f3a",level:2},{value:"\u96c6\u6210\u793a\u4f8b",id:"\u96c6\u6210\u793a\u4f8b",level:2},{value:"\u793e\u533a",id:"\u793e\u533a",level:2}],o={toc:s},g="wrapper";function y(e){let{components:a,...n}=e;return(0,r.yg)(g,(0,t.A)({},o,n,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"\ud83c\udf89 \u6211\u4eec\u5f88\u9ad8\u5174\u5730\u53d1\u5e03 SeaQuery ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query/releases/tag/0.28.0"},(0,r.yg)("inlineCode",{parentName:"a"},"0.28.0")),"! \u4e0b\u9762\u662f\u4e00\u4e9b\u7279\u6027\u4eae\u70b9 \ud83c\udf1f:"),(0,r.yg)("h2",{id:"\u65b0\u7684-idenstatic-\u7279\u6027\u7528\u4e8e\u9759\u6001\u6807\u8bc6\u7b26"},"\u65b0\u7684 ",(0,r.yg)("inlineCode",{parentName:"h2"},"IdenStatic")," \u7279\u6027\u7528\u4e8e\u9759\u6001\u6807\u8bc6\u7b26"),(0,r.yg)("p",null,"[",(0,r.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query/pull/508"},"#508"),"] \u8868\u793a\u4e00\u4e2a\u5e26\u6709 ",(0,r.yg)("inlineCode",{parentName:"p"},"&'static str")," \u7684\u6807\u8bc6\u7b26\u3002",(0,r.yg)("inlineCode",{parentName:"p"},"IdenStatic")," \u7279\u6027\u770b\u8d77\u6765\u50cf\u8fd9\u6837:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"pub trait IdenStatic: Iden + Copy + 'static {\n    fn as_str(&self) -> &'static str;\n}\n")),(0,r.yg)("p",null,"\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4e3a\u73b0\u6709\u7684 ",(0,r.yg)("inlineCode",{parentName:"p"},"Iden")," \u6d3e\u751f\u5b83\u3002\u53ea\u9700\u5c06 ",(0,r.yg)("inlineCode",{parentName:"p"},"#[derive(Iden)]")," \u66f4\u6539\u4e3a ",(0,r.yg)("inlineCode",{parentName:"p"},"#[derive(IdenStatic)]"),"\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'#[derive(IdenStatic)]\nenum User {\n    Table,\n    Id,\n    FirstName,\n    LastName,\n    #[iden = "_email"]\n    Email,\n}\n\nassert_eq!(User::Email.as_str(), "_email");\n')),(0,r.yg)("h2",{id:"\u65b0\u7684-pgexpr-\u548c-sqliteexpr-\u7279\u6027\u7528\u4e8e\u540e\u7aef\u7279\u5b9a\u8868\u8fbe\u5f0f"},"\u65b0\u7684 ",(0,r.yg)("inlineCode",{parentName:"h2"},"PgExpr")," \u548c ",(0,r.yg)("inlineCode",{parentName:"h2"},"SqliteExpr")," \u7279\u6027\u7528\u4e8e\u540e\u7aef\u7279\u5b9a\u8868\u8fbe\u5f0f"),(0,r.yg)("p",null,"[",(0,r.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query/pull/519"},"#519"),"] Postgres \u7279\u5b9a\u548c SQLite \u7279\u5b9a\u7684\u8868\u8fbe\u5f0f\u88ab\u79fb\u52a8\u5230\u76f8\u5e94\u7684\u7279\u6027\u4e2d\u3002\u5728\u4f7f\u7528\u8fd9\u4e9b\u540e\u7aef\u7279\u5b9a\u65b9\u6cd5\u6784\u5efa\u8868\u8fbe\u5f0f\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u5c06\u7279\u6027\u5bfc\u5165\u4f5c\u7528\u57df\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'// \u5728\u6784\u5efa Postgres \u8868\u8fbe\u5f0f\u4e4b\u524d\u5bfc\u5165 `PgExpr` \u7279\u6027\nuse sea_query::{extension::postgres::PgExpr, tests_cfg::*, *};\n\nlet query = Query::select()\n    .columns([Font::Name, Font::Variant, Font::Language])\n    .from(Font::Table)\n    .and_where(Expr::val("a").concatenate("b").concat("c").concat("d"))\n    .to_owned();\n\nassert_eq!(\n    query.to_string(PostgresQueryBuilder),\n    r#"SELECT "name", "variant", "language" FROM "font" WHERE \'a\' || \'b\' || \'c\' || \'d\'"#\n);\n')),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'// \u5728\u6784\u5efa SQLite \u8868\u8fbe\u5f0f\u4e4b\u524d\u5bfc\u5165 `SqliteExpr` \u7279\u6027\n use sea_query::{extension::sqlite::SqliteExpr, tests_cfg::*, * };\n\n let query = Query::select()\n    .column(Font::Name)\n    .from(Font::Table)\n    .and_where(Expr::col(Font::Name).matches("a"))\n    .to_owned();\n\n assert_eq!(\n    query.to_string(SqliteQueryBuilder),\n    r#"SELECT "name" FROM "font" WHERE "name" MATCH \'a\'"#\n );\n')),(0,r.yg)("h2",{id:"\u9519\u8bef\u4fee\u590d"},"\u9519\u8bef\u4fee\u590d"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"\u5c06\u8054\u5408\u62ec\u5165\u62ec\u53f7 ",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/498"},"https://github.com/SeaQL/sea-query/pull/498")),(0,r.yg)("li",{parentName:"ul"},"\u7a7a\u6761\u4ef6\u7684\u8bed\u6cd5\u9519\u8bef ",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/505"},"https://github.com/SeaQL/sea-query/pull/505"))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'// \u7ed9\u5b9a\nlet (statement, values) = sea_query::Query::select()\n    .column(Glyph::Id)\n    .from(Glyph::Table)\n    .cond_where(Cond::any()\n        .add(Cond::all()) // \u7a7a\u7684 all() => TRUE\n        .add(Cond::any()) // \u7a7a\u7684 any() => FALSE\n    )\n    .build(sea_query::MysqlQueryBuilder);\n\n// \u65e7\u884c\u4e3a\nassert_eq!(statement, r#"SELECT `id` FROM `glyph`"#);\n\n// \u65b0\u884c\u4e3a\nassert_eq!(\n    statement,\n    r#"SELECT `id` FROM `glyph` WHERE (TRUE) OR (FALSE)"#\n);\n\n// \u4e00\u4e2a\u590d\u6742\u7684\u793a\u4f8b\nlet (statement, values) = Query::select()\n    .column(Glyph::Id)\n    .from(Glyph::Table)\n    .cond_where(\n        Cond::all()\n            .add(Cond::all().not())\n            .add(Cond::any().not())\n            .not(),\n    )\n    .build(MysqlQueryBuilder);\n\nassert_eq!(\n    statement,\n    r#"SELECT `id` FROM `glyph` WHERE NOT ((NOT TRUE) AND (NOT FALSE))"#\n);\n')),(0,r.yg)("h2",{id:"\u91cd\u5927\u53d8\u66f4"},"\u91cd\u5927\u53d8\u66f4"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/535"},"#535"),"] MSRV \u5347\u7ea7\u81f3 1.62")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"# \u786e\u4fdd\u4f60\u6b63\u5728\u4f7f\u7528 Rust 1.62+ \u8fd0\u884c SeaQuery \ud83e\udd80\n$ rustup update\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/492"},"#492"),"] ",(0,r.yg)("inlineCode",{parentName:"li"},"ColumnType::Array")," \u7684\u5b9a\u4e49\u4ece ",(0,r.yg)("inlineCode",{parentName:"li"},"Array(SeaRc<Box<ColumnType>>)")," \u66f4\u6539\u4e3a ",(0,r.yg)("inlineCode",{parentName:"li"},"Array(SeaRc<ColumnType>)")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/475"},"#475"),"] ",(0,r.yg)("inlineCode",{parentName:"li"},"Func::*")," \u73b0\u5728\u8fd4\u56de ",(0,r.yg)("inlineCode",{parentName:"li"},"FunctionCall")," \u800c\u4e0d\u662f ",(0,r.yg)("inlineCode",{parentName:"li"},"SimpleExpr")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/475"},"#475"),"] ",(0,r.yg)("inlineCode",{parentName:"li"},"Func::coalesce")," \u73b0\u5728\u63a5\u53d7 ",(0,r.yg)("inlineCode",{parentName:"li"},"IntoIterator<Item = SimpleExpr>")," \u800c\u4e0d\u662f ",(0,r.yg)("inlineCode",{parentName:"li"},"IntoIterator<Item = Into<SimpleExpr>")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/475"},"#475"),"] \u5220\u9664\u4e86 ",(0,r.yg)("inlineCode",{parentName:"li"},"Expr::arg")," \u548c ",(0,r.yg)("inlineCode",{parentName:"li"},"Expr::args")," - \u8fd9\u4e9b\u51fd\u6570\u4e0d\u518d\u9700\u8981"),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/507"},"#507"),"] \u6240\u6709 Postgres \u7279\u5b9a\u7684\u64cd\u4f5c\u7b26\u79fb\u52a8\u81f3 ",(0,r.yg)("inlineCode",{parentName:"li"},"PgBinOper")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/476"},"#476"),"] ",(0,r.yg)("inlineCode",{parentName:"li"},"Expr")," \u65b9\u6cd5\u539f\u5148\u63a5\u53d7 ",(0,r.yg)("inlineCode",{parentName:"li"},"Into<Value>")," \u73b0\u5728\u63a5\u53d7 ",(0,r.yg)("inlineCode",{parentName:"li"},"Into<SimpleExpr>")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/476"},"#476"),"] ",(0,r.yg)("inlineCode",{parentName:"li"},"Expr::is_in"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"Expr::is_not_in")," \u73b0\u5728\u63a5\u53d7 ",(0,r.yg)("inlineCode",{parentName:"li"},"Into<SimpleExpr>")," \u800c\u4e0d\u662f ",(0,r.yg)("inlineCode",{parentName:"li"},"Into<Value>")," \u5e76\u5c06\u5176\u8f6c\u6362\u4e3a ",(0,r.yg)("inlineCode",{parentName:"li"},"SimpleExpr::Tuple")," \u800c\u4e0d\u662f ",(0,r.yg)("inlineCode",{parentName:"li"},"SimpleExpr::Values")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/475"},"#475"),"] ",(0,r.yg)("inlineCode",{parentName:"li"},"Expr::expr")," \u73b0\u5728\u63a5\u53d7 ",(0,r.yg)("inlineCode",{parentName:"li"},"Into<SimpleExpr>")," \u800c\u4e0d\u662f ",(0,r.yg)("inlineCode",{parentName:"li"},"SimpleExpr")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/519"},"#519"),"] \u5c06 Postgres \u7279\u5b9a\u7684 ",(0,r.yg)("inlineCode",{parentName:"li"},"Expr")," \u65b9\u6cd5\u79fb\u52a8\u81f3\u65b0\u7684\u7279\u6027 ",(0,r.yg)("inlineCode",{parentName:"li"},"PgExpr")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/528"},"#528"),"] ",(0,r.yg)("inlineCode",{parentName:"li"},"Expr::equals")," \u73b0\u5728\u63a5\u53d7 ",(0,r.yg)("inlineCode",{parentName:"li"},"C: IntoColumnRef")," \u800c\u4e0d\u662f ",(0,r.yg)("inlineCode",{parentName:"li"},"T: IntoIden, C: IntoIden"))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-diff"},'use sea_query::{*, tests_cfg::*};\n\nlet query = Query::select()\n    .columns([Char::Character, Char::SizeW, Char::SizeH])\n    .from(Char::Table)\n    .and_where(\n        Expr::col((Char::Table, Char::FontId))\n-           .equals(Font::Table, Font::Id)\n+           .equals((Font::Table, Font::Id))\n    )\n    .to_owned();\n\nassert_eq!(\n    query.to_string(MysqlQueryBuilder),\n    r#"SELECT `character`, `size_w`, `size_h` FROM `character` WHERE `character`.`font_id` = `font`.`id`"#\n);\n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/525"},"#525"),"] \u5220\u9664\u6574\u578b\u548c\u65e5\u671f\u65f6\u95f4\u5217\u7c7b\u578b\u7684\u663e\u793a\u957f\u5ea6/\u7cbe\u5ea6\u9009\u9879")),(0,r.yg)("h2",{id:"api-\u6dfb\u52a0"},"API \u6dfb\u52a0"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/475"},"#475"),"] \u6dfb\u52a0 ",(0,r.yg)("inlineCode",{parentName:"li"},"SelectStatement::from_function"))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'use sea_query::{tests_cfg::*, *};\n\nlet query = Query::select()\n    .column(ColumnRef::Asterisk)\n    .from_function(Func::random(), Alias::new("func"))\n    .to_owned();\n\nassert_eq!(\n    query.to_string(MysqlQueryBuilder),\n    r#"SELECT * FROM RAND() AS `func`"#\n);\n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/486"},"#486"),"] \u6dfb\u52a0 Postgres ",(0,r.yg)("inlineCode",{parentName:"li"},"pg_trgm")," \u6269\u5c55\u4e2d\u7684\u4e8c\u5143\u64cd\u4f5c\u7b26")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'use sea_query::extension::postgres::PgBinOper;\n\nassert_eq!(\n    Query::select()\n        .expr(Expr::col(Font::Name).binary(PgBinOper::WordSimilarity, Expr::value("serif")))\n        .from(Font::Table)\n        .to_string(PostgresQueryBuilder),\n    r#"SELECT "name" <% \'serif\' FROM "font""#\n);\n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/473"},"#473"),"] \u6dfb\u52a0 ",(0,r.yg)("inlineCode",{parentName:"li"},"ILIKE")," \u548c ",(0,r.yg)("inlineCode",{parentName:"li"},"NOT ILIKE")," \u64cd\u4f5c\u7b26"),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/510"},"#510"),"] \u4e3a ",(0,r.yg)("inlineCode",{parentName:"li"},"SimpleExpr")," \u6dfb\u52a0 ",(0,r.yg)("inlineCode",{parentName:"li"},"mul")," \u548c ",(0,r.yg)("inlineCode",{parentName:"li"},"div")," \u65b9\u6cd5"),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/513"},"#513"),"] \u4e3a SQLite \u6dfb\u52a0 ",(0,r.yg)("inlineCode",{parentName:"li"},"MATCH"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"->")," \u548c ",(0,r.yg)("inlineCode",{parentName:"li"},"->>")," \u64cd\u4f5c\u7b26")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'use sea_query::extension::sqlite::SqliteBinOper;\n\nassert_eq!(\n    Query::select()\n        .column(Char::Character)\n        .from(Char::Table)\n        .and_where(Expr::col(Char::Character).binary(SqliteBinOper::Match, Expr::val("test")))\n        .build(SqliteQueryBuilder),\n    (\n        r#"SELECT "character" FROM "character" WHERE "character" MATCH ?"#.to_owned(),\n        Values(vec!["test".into()])\n    )\n);\n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/497"},"#497"),"] \u6dfb\u52a0 ",(0,r.yg)("inlineCode",{parentName:"li"},"FULL OUTER JOIN")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/530"},"#530"),"] \u6dfb\u52a0 ",(0,r.yg)("inlineCode",{parentName:"li"},"PgFunc::get_random_uuid")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/528"},"#528"),"] \u6dfb\u52a0 ",(0,r.yg)("inlineCode",{parentName:"li"},"SimpleExpr::eq"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"SimpleExpr::ne"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"Expr::not_equals")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/529"},"#529"),"] \u6dfb\u52a0 ",(0,r.yg)("inlineCode",{parentName:"li"},"PgFunc::starts_with")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/535"},"#535"),"] \u6dfb\u52a0 ",(0,r.yg)("inlineCode",{parentName:"li"},"Expr::custom_keyword")," \u548c ",(0,r.yg)("inlineCode",{parentName:"li"},"SimpleExpr::not"))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'use sea_query::*;\n\nlet query = Query::select()\n    .expr(Expr::custom_keyword(Alias::new("test")))\n    .to_owned();\n\nassert_eq!(query.to_string(MysqlQueryBuilder), r#"SELECT test"#);\nassert_eq!(query.to_string(PostgresQueryBuilder), r#"SELECT test"#);\nassert_eq!(query.to_string(SqliteQueryBuilder), r#"SELECT test"#);\n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/539"},"#539"),"] \u6dfb\u52a0 ",(0,r.yg)("inlineCode",{parentName:"li"},"SimpleExpr::like"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"SimpleExpr::not_like")," \u548c ",(0,r.yg)("inlineCode",{parentName:"li"},"Expr::cast_as")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/532"},"#532"),"] \u4e3a Postgres \u6dfb\u52a0\u5bf9 ",(0,r.yg)("inlineCode",{parentName:"li"},"NULLS NOT DISTINCT")," \u5b50\u53e5\u7684\u652f\u6301"),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/531"},"#531"),"] \u6dfb\u52a0 ",(0,r.yg)("inlineCode",{parentName:"li"},"Expr::cust_with_expr")," \u548c ",(0,r.yg)("inlineCode",{parentName:"li"},"Expr::cust_with_exprs"))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'use sea_query::{tests_cfg::*, *};\n\nlet query = Query::select()\n    .expr(Expr::cust_with_expr("data @? ($1::JSONPATH)", "hello"))\n    .to_owned();\n\nassert_eq!(\n    query.to_string(PostgresQueryBuilder),\n    r#"SELECT data @? (\'hello\'::JSONPATH)"#\n);\n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/538"},"#538"),"] \u6dfb\u52a0\u5bf9\u5c06 ",(0,r.yg)("inlineCode",{parentName:"li"},"&String")," \u8f6c\u6362\u4e3a Value \u7684\u652f\u6301")),(0,r.yg)("h2",{id:"\u5176\u4ed6\u589e\u5f3a"},"\u5176\u4ed6\u589e\u5f3a"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/475"},"#475"),"] \u65b0\u7ed3\u6784 ",(0,r.yg)("inlineCode",{parentName:"li"},"FunctionCall")," \u7528\u4e8e\u4fdd\u5b58\u51fd\u6570\u548c\u53c2\u6570"),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/503"},"#503"),"] \u4e3a ",(0,r.yg)("inlineCode",{parentName:"li"},"sea-query-postgres")," \u652f\u6301 ",(0,r.yg)("inlineCode",{parentName:"li"},"BigDecimal"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"IpNetwork")," \u548c ",(0,r.yg)("inlineCode",{parentName:"li"},"MacAddress")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/511"},"#511"),"] \u4f7f ",(0,r.yg)("inlineCode",{parentName:"li"},"value::with_array")," \u6a21\u5757\u516c\u5f00\uff0c\u4ece\u800c\u4f7f ",(0,r.yg)("inlineCode",{parentName:"li"},"NotU8")," \u7279\u6027\u516c\u5f00"),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/524"},"#524"),"] \u79fb\u9664 ",(0,r.yg)("inlineCode",{parentName:"li"},"SchemaBuilders")," \u5b9e\u73b0\u8005\u7684 ",(0,r.yg)("inlineCode",{parentName:"li"},"Sized")," \u8981\u6c42")),(0,r.yg)("h2",{id:"\u96c6\u6210\u793a\u4f8b"},"\u96c6\u6210\u793a\u4f8b"),(0,r.yg)("p",null,"SeaQuery \u4e0e Rust \u751f\u6001\u7cfb\u7edf\u4e2d\u7684\u5176\u4ed6 crate \u914d\u5408\u826f\u597d\u3002"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/tree/master/examples/postgres"},"Postgres \u793a\u4f8b")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/tree/master/examples/rusqlite"},"Rusqlite \u793a\u4f8b")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/tree/master/examples/sqlx_any"},"SQLx Any \u793a\u4f8b")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/tree/master/examples/sqlx_postgres"},"SQLx Postgres \u793a\u4f8b")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/tree/master/examples/sqlx_mysql"},"SQLx MySql \u793a\u4f8b")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/tree/master/examples/sqlx_sqlite"},"SQLx Sqlite \u793a\u4f8b"))),(0,r.yg)("h2",{id:"\u793e\u533a"},"\u793e\u533a"),(0,r.yg)("p",null,"SeaQL \u662f\u4e00\u4e2a\u793e\u533a\u9a71\u52a8\u7684\u9879\u76ee\u3002\u6211\u4eec\u6b22\u8fce\u4f60\u53c2\u4e0e\u3001\u8d21\u732e\uff0c\u5171\u540c\u4e3a Rust \u7684\u672a\u6765\u800c\u52aa\u529b\u3002"))}y.isMDXComponent=!0}}]);