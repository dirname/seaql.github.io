"use strict";(self.webpackChunksea_ql_blog=self.webpackChunksea_ql_blog||[]).push([[8849],{5680:(e,n,t)=>{t.d(n,{xA:()=>o,yg:()=>d});var a=t(6540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),g=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},o=function(e){var n=g(e.components);return a.createElement(p.Provider,{value:n},e.children)},y="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),y=g(t),m=r,d=y["".concat(p,".").concat(m)]||y[m]||u[m]||l;return t?a.createElement(d,s(s({ref:n},o),{},{components:t})):a.createElement(d,s({ref:n},o))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,s=new Array(l);s[0]=m;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[y]="string"==typeof e?e:r,s[1]=i;for(var g=2;g<l;g++)s[g]=t[g];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6715:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>g});var a=t(8168),r=(t(6540),t(5680));const l={slug:"2024-05-20-async-rainbow-bridge",title:"\u540c\u6b65\u4e0e\u5f02\u6b65 Rust \u4e4b\u95f4\u7684\u5f69\u8679\u6865",author:"Chris Tsang",author_title:"SeaQL \u56e2\u961f",author_url:"https://github.com/tyt2y3",author_image_url:"https://avatars.githubusercontent.com/u/1782664?v=4",image:"https://www.sea-ql.org/blog/img/async-rainbow-bridge.png",tags:["news"]},s=void 0,i={permalink:"/blog/2024-05-20-async-rainbow-bridge",editUrl:"https://github.com/SeaQL/seaql.github.io/edit/master/Blog/blog/2024-05-20-async-rainbow-bridge.md",source:"@site/blog/2024-05-20-async-rainbow-bridge.md",title:"\u540c\u6b65\u4e0e\u5f02\u6b65 Rust \u4e4b\u95f4\u7684\u5f69\u8679\u6865",description:"\u8fd9\u4e2a\u6545\u4e8b\u6e90\u4e8e\u201c\u4f60\u7684\u51fd\u6570\u662f\u4ec0\u4e48\u989c\u8272\uff1f\u201d\u7684\u8bf4\u6cd5\uff0c\u4f5c\u4e3a\u5bf9\u5e38\u89c1\u7f16\u7a0b\u8bed\u8a00\u5f02\u6b65\u5b9e\u73b0\u7684\u6279\u8bc4\u3002\u55ef\uff0cRust \u4e5f\u5c5e\u4e8e\u201c\u6709\u989c\u8272\u7684\u51fd\u6570\u201d\u3002\u56e0\u6b64\uff0c\u5728\u8fd9\u7bc7\u535a\u5ba2\u4e2d\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u8bbe\u8ba1\u7cfb\u7edf\u4ee5\u6709\u6548\u5730\u7ed3\u5408\u540c\u6b65\u548c\u5f02\u6b65\u4ee3\u7801\u3002",date:"2024-05-20T00:00:00.000Z",formattedDate:"May 20, 2024",tags:[{label:"news",permalink:"/blog/tags/news"}],readingTime:10.575,hasTruncateMarker:!1,authors:[{name:"Chris Tsang",title:"SeaQL \u56e2\u961f",url:"https://github.com/tyt2y3",imageURL:"https://avatars.githubusercontent.com/u/1782664?v=4"}],frontMatter:{slug:"2024-05-20-async-rainbow-bridge",title:"\u540c\u6b65\u4e0e\u5f02\u6b65 Rust \u4e4b\u95f4\u7684\u5f69\u8679\u6865",author:"Chris Tsang",author_title:"SeaQL \u56e2\u961f",author_url:"https://github.com/tyt2y3",author_image_url:"https://avatars.githubusercontent.com/u/1782664?v=4",image:"https://www.sea-ql.org/blog/img/async-rainbow-bridge.png",tags:["news"]},prevItem:{title:"getting-started-with-loco-seaorm",permalink:"/blog/2024/05/28/getting-started-with-loco-seaorm"},nextItem:{title:"\u6784\u5efa Redis / Kafka \u6570\u636e\u63a5\u6536\u5668",permalink:"/blog/2024-05-05-redis-kafka-data-sink"}},p={authorsImageUrls:[void 0]},g=[{value:"\u80cc\u666f",id:"\u80cc\u666f",level:2},{value:"Sync -&gt; Sync",id:"sync---sync",level:2},{value:"Async -&gt; Async",id:"async---async",level:2},{value:"Flume mpmc",id:"flume-mpmc",level:3},{value:"mpmc - \u591a\u751f\u4ea7\u8005\uff0c\u591a\u6d88\u8d39\u8005",id:"mpmc---\u591a\u751f\u4ea7\u8005\u591a\u6d88\u8d39\u8005",level:4},{value:"Sync -&gt; Async",id:"sync---async",level:2},{value:"\u4f18\u96c5\u5730\u5173\u95ed",id:"\u4f18\u96c5\u5730\u5173\u95ed",level:3},{value:"Async -&gt; Sync",id:"async---sync",level:2},{value:"\u7ed3\u8bba",id:"\u7ed3\u8bba",level:2},{value:"Rustacean \u8d34\u7eb8\u5305 \ud83e\udd80",id:"rustacean-\u8d34\u7eb8\u5305-",level:2}],o={toc:g},y="wrapper";function u(e){let{components:n,...t}=e;return(0,r.yg)(y,(0,a.A)({},o,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("img",{src:"/blog/img/async-rainbow-bridge.png"}),(0,r.yg)("p",null,"\u8fd9\u4e2a\u6545\u4e8b\u6e90\u4e8e\u201c\u4f60\u7684\u51fd\u6570\u662f\u4ec0\u4e48\u989c\u8272\uff1f\u201d\u7684\u8bf4\u6cd5\uff0c\u4f5c\u4e3a\u5bf9\u5e38\u89c1\u7f16\u7a0b\u8bed\u8a00\u5f02\u6b65\u5b9e\u73b0\u7684\u6279\u8bc4\u3002\u55ef\uff0cRust \u4e5f\u5c5e\u4e8e\u201c\u6709\u989c\u8272\u7684\u51fd\u6570\u201d\u3002\u56e0\u6b64\uff0c\u5728\u8fd9\u7bc7\u535a\u5ba2\u4e2d\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u8bbe\u8ba1\u7cfb\u7edf\u4ee5\u6709\u6548\u5730\u7ed3\u5408\u540c\u6b65\u548c\u5f02\u6b65\u4ee3\u7801\u3002"),(0,r.yg)("p",null,"\u5f69\u8679\u6865\u5f15\u7528\u4e86\u300a\u96f7\u795e\u300b\u4e2d\u4f20\u9001\u4f60\u5230\u4e0d\u540c\u9886\u57df\u7684\u6865\u2014\u2014\u4e00\u4e2a\u5b8c\u7f8e\u7684\u7c7b\u6bd4\uff01"),(0,r.yg)("h2",{id:"\u80cc\u666f"},"\u80cc\u666f"),(0,r.yg)("p",null,"\u540c\u6b65\u4ee3\u7801\u53ef\u4ee5\u662f\u963b\u585eIO\u6216\u6602\u8d35\u7684\u8ba1\u7b97\u3002\u5f02\u6b65\u4ee3\u7801\u901a\u5e38\u662f\u7f51\u7edcIO\uff0c\u4f60\u4f1a\u7b49\u5f85\u7ed3\u679c\u3002"),(0,r.yg)("p",null,"\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u90fd\u5e0c\u671b\u6700\u5927\u5316\u5e76\u53d1\uff0c\u4ee5\u4fbf\u7a0b\u5e8f\u80fd\u591f\u5145\u5206\u5229\u7528 CPU\uff0c\u800c\u4e0d\u662f\u95f2\u7f6e\u3002\u4e00\u4e2a\u5e38\u89c1\u7684\u65b9\u6cd5\u662f\u6d88\u606f\u4f20\u9012\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u6253\u5305\u4efb\u52a1\u5e76\u5c06\u5b83\u4eec\u53d1\u9001\u5230\u4e0d\u540c\u7684\u5de5\u4f5c\u7ebf\u7a0b\u6267\u884c\u3002"),(0,r.yg)("h2",{id:"sync---sync"},"Sync -> Sync"),(0,r.yg)("p",null,"\u9996\u5148\uff0c\u4ece\u7ecf\u5178\u7684\u793a\u4f8b\u5f00\u59cb\uff0c\u7eaf\u540c\u6b65\u4ee3\u7801\u3002\u6807\u51c6\u5e93\u4e2d\u5b58\u5728 ",(0,r.yg)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/sync/mpsc/index.html"},"std::sync::mpsc"),"\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'use std::sync::mpsc::channel;\n\n// \u521b\u5efa\u4e00\u4e2a\u65e0\u754c\u901a\u9053\nlet (sender, receiver) = channel();\n\n// \u4e0d\u4f1a\u963b\u585e\nsender.send("Hello".to_string()).unwrap();\n\nlet handle = std::thread::spawn(move|| {\n    // \u7b49\u5f85\u76f4\u5230\u6709\u6d88\u606f\n    let message = receiver.recv().unwrap();\n    println!("{message}");\n});\n\nhandle.join().unwrap();\nprintln!("Bye");\n')),(0,r.yg)("p",null,"\u8f93\u51fa (",(0,r.yg)("a",{parentName:"p",href:"https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=4eecb3216b6b10477849f5648bb026f4"},"Playground"),")\uff1a"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-log"},"Hello\nBye\n")),(0,r.yg)("p",null,"\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u505a\u4e00\u4e2a\u66f4\u8be6\u7ec6\u7684\u793a\u4f8b\uff1a\u4e00\u4e2a\u7a0b\u5e8f\u751f\u6210\u591a\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\u6765\u6267\u884c\u4e00\u4e9b\u201c\u6602\u8d35\u201d\u7684\u8ba1\u7b97\u3002\u4e3b\u7ebf\u7a0b\u4f1a\u5c06\u4efb\u52a1\u5206\u53d1\u5230\u90a3\u4e9b\u7ebf\u7a0b\uff0c\u7136\u540e\u901a\u8fc7\u53e6\u4e00\u4e2a\u901a\u9053\u6536\u96c6\u7ed3\u679c\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u4efb\u52a1    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u7ed3\u679c\n\u2502             \u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561 worker thread 1 \u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \n\u2502 main thread \u2502             \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524             \u2560\u2550\u2550\u2550\u2550\u2561 main thread \u2502 \n\u2502             \u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561 worker thread 2 \u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518             \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518              \n")),(0,r.yg)("p",null,"\u9996\u5148\uff0c\u8bbe\u7f6e\u901a\u9053\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"let (result, collector) = channel(); // \u7ed3\u679c\nlet mut senders = Vec::new();\nfor _ in 0..THREADS {\n    let (sender, receiver) = channel(); // \u4efb\u52a1\n    senders.push(sender);\n    let result = result.clone();\n    std::thread::spawn(move || worker(receiver, result));\n}\n")),(0,r.yg)("p",null,"\u5de5\u4f5c\u7ebf\u7a0b\u770b\u8d77\u6765\u50cf\uff1a"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"fn worker(receiver: Receiver<Task>, sender: Sender<Done>) {\n    while let Ok(task) = receiver.recv() {\n        let result = process(task);\n        sender.send(result).unwrap();\n    }\n}\n")),(0,r.yg)("p",null,"\u7136\u540e\uff0c\u5206\u53d1\u4efb\u52a1\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"for c in 0..TASKS {\n    let task = some_random_task();\n    senders[c % THREADS].send(task).unwrap();\n}\n")),(0,r.yg)("p",null,"\u6700\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u6536\u96c6\u7ed3\u679c\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'for _ in 0..TASKS {\n    let result = collector.recv().unwrap();\n    println!("{result:?}");\n}\n')),(0,r.yg)("p",null,"\u5b8c\u6574\u6e90\u4ee3\u7801\u53ef\u4ee5\u5728 ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/FireDBG.Rust.Testbench/tree/main/multi-thread-matrix"},"\u8fd9\u91cc"),"\u627e\u5230\u3002"),(0,r.yg)("h2",{id:"async---async"},"Async -> Async"),(0,r.yg)("p",null,"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u8fc1\u79fb\u5230\u5f02\u6b65\u9886\u57df\u3002\u4f7f\u7528 ",(0,r.yg)("a",{parentName:"p",href:"https://docs.rs/tokio/latest/tokio/sync/mpsc/index.html"},"tokio::sync::mpsc"),"\uff0c\u5b83\u4e0e\u4e0a\u9762\u7684\u793a\u4f8b\u975e\u5e38\u76f8\u4f3c\uff0c\u53ea\u662f\u6bcf\u4e2a\u64cd\u4f5c\u90fd\u662f ",(0,r.yg)("inlineCode",{parentName:"p"},"async"),"\uff0c\u6240\u4ee5\u5bf9\u751f\u547d\u5468\u671f\u65bd\u52a0\u4e86\u989d\u5916\u7684\u9650\u5236\u3002\uff08\u5173\u952e\u662f\uff0c\u53ea\u9700\u79fb\u52a8/\u514b\u9686\u3002\u4e0d\u8981\u501f\u7528\uff09"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"tokio")," \u7684 ",(0,r.yg)("inlineCode",{parentName:"p"},"unbounded_channel")," \u76f8\u5f53\u4e8e ",(0,r.yg)("inlineCode",{parentName:"p"},"std")," \u7684 ",(0,r.yg)("inlineCode",{parentName:"p"},"channel"),"\u3002\u5426\u5219\u5b83\u662f\u975e\u5e38\u76f8\u4f3c\u7684\u3002",(0,r.yg)("inlineCode",{parentName:"p"},"spawn")," \u65b9\u6cd5\u63a5\u6536\u4e00\u4e2a ",(0,r.yg)("inlineCode",{parentName:"p"},"Future"),"\uff1b\u7531\u4e8e\u5de5\u4f5c\u7ebf\u7a0b\u9700\u8981\u63a5\u6536\u901a\u9053\uff0c\u56e0\u6b64\u6211\u4eec\u7528 ",(0,r.yg)("inlineCode",{parentName:"p"},"async move {}")," \u6784\u9020\u4e00\u4e2a\u5f02\u6b65\u95ed\u5305\u3002"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"std"),(0,r.yg)("th",{parentName:"tr",align:null},"tokio"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"(unbounded) ",(0,r.yg)("a",{parentName:"td",href:"https://doc.rust-lang.org/std/sync/mpsc/fn.channel.html"},(0,r.yg)("inlineCode",{parentName:"a"},"channel"))),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://docs.rs/tokio/latest/tokio/sync/mpsc/fn.unbounded_channel.html"},(0,r.yg)("inlineCode",{parentName:"a"},"unbounded_channel")))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://doc.rust-lang.org/std/sync/mpsc/fn.sync_channel.html"},(0,r.yg)("inlineCode",{parentName:"a"},"sync_channel"))),(0,r.yg)("td",{parentName:"tr",align:null},"(bounded) ",(0,r.yg)("a",{parentName:"td",href:"https://docs.rs/tokio/latest/tokio/sync/mpsc/fn.channel.html"},(0,r.yg)("inlineCode",{parentName:"a"},"channel")))))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"let (result, mut collector) = unbounded_channel();\nlet mut senders = Vec::new();\nfor _ in 0..WORKERS {\n    let (sender, mut receiver) = unbounded_channel();\n    senders.push(sender);\n    let result = result.clone();\n    tokio::task::spawn(async move {\n        while let Some(task) = receiver.recv().await {\n            result.send(process(task).await).unwrap();\n        }\n    });\n}\nstd::mem::drop(result); // <-- ?\n")),(0,r.yg)("p",null,"\u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981\u4e22\u5f03 ",(0,r.yg)("inlineCode",{parentName:"p"},"result")," \u53d1\u9001\u8005\uff1f\u8fd9\u662f\u4e00\u4e2a\u811a\u8dbe\u67aa\uff1a",(0,r.yg)("inlineCode",{parentName:"p"},"tokio")," \u4f1a\u541e\u6389\u4efb\u52a1\u5185\u90e8\u4ea7\u751f\u7684 panic\uff0c\u56e0\u6b64\u5982\u679c\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u7a0b\u5e8f\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u9000\u51fa\u3002\u901a\u8fc7\u4e22\u5f03\u4f5c\u7528\u57df\u5185\u7684\u6700\u540e\u4e00\u4e2a ",(0,r.yg)("inlineCode",{parentName:"p"},"result")," \u526f\u672c\uff0c\u901a\u9053\u5c06\u5728\u6240\u6709\u4efb\u52a1\u9000\u51fa\u540e\u81ea\u52a8\u5173\u95ed\uff0c\u8fd9\u53cd\u8fc7\u6765\u4f1a\u89e6\u53d1\u6211\u4eec\u7684 ",(0,r.yg)("inlineCode",{parentName:"p"},"collector"),"\u3002"),(0,r.yg)("p",null,"\u5176\u4f59\u90e8\u5206\u51e0\u4e4e\u662f\u76f8\u540c\u7684\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'for (i, task) in tasks.iter().enumerate() {\n    senders[i % WORKERS].send(task.clone()).unwrap();\n}\nstd::mem::drop(senders);\n\nfor _ in 0..tasks.len() {\n    let result = collector.recv().await.unwrap();\n    println!("{result:?}");\n}\n')),(0,r.yg)("p",null,"\u5b8c\u6574\u6e90\u4ee3\u7801\u53ef\u4ee5\u5728 ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/FireDBG.Rust.Testbench/tree/main/tokio-mpsc"},"\u8fd9\u91cc"),"\u627e\u5230\u3002"),(0,r.yg)("h3",{id:"flume-mpmc"},"Flume mpmc"),(0,r.yg)("h4",{id:"mpmc---\u591a\u751f\u4ea7\u8005\u591a\u6d88\u8d39\u8005"},"mpmc - \u591a\u751f\u4ea7\u8005\uff0c\u591a\u6d88\u8d39\u8005"),(0,r.yg)("p",null,"\u524d\u9762\u7684\u793a\u4f8b\u5b58\u5728\u4e00\u4e2a\u7f3a\u9677\uff1a\u6211\u4eec\u5fc5\u987b\u751f\u6210\u591a\u4e2a ",(0,r.yg)("inlineCode",{parentName:"p"},"mpsc")," \u901a\u9053\u6765\u53d1\u9001\u4efb\u52a1\uff0c\u8fd9\u6837\u5c31\uff1a"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"\u7e41\u7410\u3002\u6211\u4eec\u9700\u8981\u4fdd\u6301\u4e00\u4efd ",(0,r.yg)("inlineCode",{parentName:"li"},"senders")," \u5217\u8868"),(0,r.yg)("li",{parentName:"ol"},"\u6548\u7387\u4e0d\u662f\u6700\u9ad8\u7684\u3002\u8f6e\u8be2\u662f\u5206\u53d1\u4efb\u52a1\u7684\u6700\u4f73\u65b9\u5f0f\u5417\uff1f\u67d0\u4e9b\u5de5\u4f5c\u7ebf\u7a0b\u53ef\u80fd\u4f1a\u4fdd\u6301\u7a7a\u95f2")),(0,r.yg)("p",null,"\u7406\u60f3\u7684\u8bbe\u7f6e\u5982\u4e0b\uff1a"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"                      \u4efb\u52a1   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u7ed3\u679c\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561 worker thread 1 \u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \n\u2502 main thread \u255e\u2550\u2550\u2550\u2563           \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524            \u2560\u2550\u2550\u2550\u2561 main thread \u2502 \n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561 worker thread 2 \u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \n                              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518              \n")),(0,r.yg)("p",null,"\u8ba9\u6211\u4eec\u4f7f\u7528 ",(0,r.yg)("a",{parentName:"p",href:"https://docs.rs/flume/latest/flume/"},"Flume")," \u91cd\u5199\u6211\u4eec\u7684\u793a\u4f8b\u3002\u4f46\u9996\u5148\uff0c\u4e86\u89e3 ",(0,r.yg)("inlineCode",{parentName:"p"},"tokio")," \u548c ",(0,r.yg)("inlineCode",{parentName:"p"},"flume")," \u4e4b\u95f4\u7684\u6620\u5c04\uff1a"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Tokio"),(0,r.yg)("th",{parentName:"tr",align:null},"Flume"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://docs.rs/tokio/latest/tokio/sync/mpsc/fn.unbounded_channel.html"},(0,r.yg)("inlineCode",{parentName:"a"},"unbounded_channel"))),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://docs.rs/flume/latest/flume/fn.unbounded.html"},(0,r.yg)("inlineCode",{parentName:"a"},"unbounded"))," (\u901a\u9053)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"(bounded) ",(0,r.yg)("a",{parentName:"td",href:"https://docs.rs/tokio/latest/tokio/sync/mpsc/fn.channel.html"},(0,r.yg)("inlineCode",{parentName:"a"},"channel"))),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://docs.rs/flume/latest/flume/fn.bounded.html"},"bounded")," (\u901a\u9053)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"send")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"send"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"recv")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"recv_async"))))),(0,r.yg)("p",null,"\u5728 ",(0,r.yg)("inlineCode",{parentName:"p"},"tokio")," \u4e2d\uff0c\u8be5\u65b9\u6cd5\u662f\u72ec\u5360\u7684\uff1a",(0,r.yg)("inlineCode",{parentName:"p"},"async fn recv(&mut self)"),"\uff1b\u5728 ",(0,r.yg)("inlineCode",{parentName:"p"},"flume")," \u4e2d\uff0c\u8be5\u65b9\u6cd5\u662f ",(0,r.yg)("inlineCode",{parentName:"p"},"fn recv_async(&self) -> RecvFut"),"\u3002\u7c7b\u578b\u7b7e\u540d\u5df2\u7ecf\u544a\u8bc9\u4f60 ",(0,r.yg)("inlineCode",{parentName:"p"},"mpsc")," \u4e0e ",(0,r.yg)("inlineCode",{parentName:"p"},"mpmc")," \u4e4b\u95f4\u7684\u533a\u522b\uff01\u5728\u5f02\u6b65\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528\u963b\u585e\u7684 ",(0,r.yg)("inlineCode",{parentName:"p"},"recv")," \u65b9\u6cd5\u662f\u9519\u8bef\u7684\uff0c\u4f46\u53ef\u60b2\u7684\u662f\uff0c\u7f16\u8bd1\u5668\u5e76\u4e0d\u4f1a\u8b66\u544a\u4f60\u3002"),(0,r.yg)("p",null,"\u901a\u9053\u7684\u8bbe\u7f6e\u73b0\u5728\u7a0d\u5fae\u7b80\u5355\u4e00\u4e9b\uff1a"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"let (sender, receiver) = unbounded(); // \u4efb\u52a1\nlet (result, collector) = unbounded(); // \u7ed3\u679c\n\nfor _ in 0..WORKERS {\n    let receiver = receiver.clone();\n    let result = result.clone();\n    tokio::task::spawn(async move {\n        while let Ok(task) = receiver.recv_async().await {\n            result.send(process(task).await).unwrap();\n        }\n    });\n}\n")),(0,r.yg)("p",null,"\u6211\u4eec\u4e0d\u518d\u9700\u8981\u81ea\u5df1\u5206\u53d1\u4efb\u52a1\u3002\u6240\u6709\u5de5\u4f5c\u7ebf\u7a0b\u5171\u4eab\u540c\u4e00\u4e2a\u4efb\u52a1\u961f\u5217\uff0c\u56e0\u6b64\u5de5\u4f5c\u7ebf\u7a0b\u5728\u5b8c\u6210\u524d\u4e00\u4e2a\u4efb\u52a1\u540e\u4f1a\u7acb\u5373\u83b7\u53d6\u4e0b\u4e00\u4e2a\u4efb\u52a1\u2014\u2014\u6709\u6548\u5730\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\uff01"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'for task in &tasks {\n    sender.send(task.clone()).unwrap();\n}\n\nfor _ in 0..tasks.len() {\n    let result = collector.recv_async().await.unwrap();\n    println!("{result:?}");\n}\n')),(0,r.yg)("p",null,"\u5b8c\u6574\u6e90\u4ee3\u7801\u53ef\u4ee5\u5728 ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/FireDBG.Rust.Testbench/tree/main/flume-mpmc"},"\u8fd9\u91cc"),"\u627e\u5230\u3002"),(0,r.yg)("h2",{id:"sync---async"},"Sync -> Async"),(0,r.yg)("p",null,"\u5728\u6700\u540e\u4e00\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5927\u90e8\u5206\u662f\u540c\u6b65\u7684\u7a0b\u5e8f\uff0c\u4f46\u6709\u4e00\u4e9b\u6211\u4eec\u5e0c\u671b\u5728\u540e\u53f0\u7ebf\u7a0b\u4e2d\u5904\u7406\u7684\u5f02\u6b65\u64cd\u4f5c\u3002"),(0,r.yg)("p",null,"\u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u7684\u963b\u585e\u64cd\u4f5c\u662f\u4ece\u4e3b\u7ebf\u7a0b\u201c\u8bfb\u53d6\u6807\u51c6\u8f93\u5165\u201d\u3002\u6211\u4eec\u5c06\u8fd9\u4e9b\u884c\u53d1\u9001\u5230\u5355\u72ec\u7684\u5f02\u6b65\u7ebf\u7a0b\u8fdb\u884c\u5904\u7406\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510           \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 main thread \u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561 async thread \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518           \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.yg)("p",null,"\u5b83\u9075\u5faa\u901a\u5e38\u7684 3 \u4e2a\u6b65\u9aa4\uff1a"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"\u521b\u5efa\u4e00\u4e2a flume \u901a\u9053"),(0,r.yg)("li",{parentName:"ol"},"\u5c06\u63a5\u6536\u7aef\u4f20\u9012\u7ed9\u5de5\u4f5c\u7ebf\u7a0b"),(0,r.yg)("li",{parentName:"ol"},"\u901a\u8fc7\u901a\u9053\u53d1\u9001\u4efb\u52a1")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'fn main() -> Result<()> {\n    let (sender, receiver) = unbounded(); // flume \u901a\u9053\n\n    std::thread::spawn(move || {\n        // \u8fd9\u4e2a\u8fd0\u884c\u65f6\u662f\u5355\u7ebf\u7a0b\u7684\n        let rt = tokio::runtime::Builder::new_current_thread().enable_all().build().unwrap();\n        rt.block_on(handler(receiver))\n    });\n\n    loop {\n        let mut line = String::new();\n        // \u8fd9\u4f1a\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\uff0c\u76f4\u5230\u6709\u65b0\u884c\u8f93\u5165\n        match std::io::stdin().read_line(&mut line) {\n            Ok(0) => break, // \u8fd9\u610f\u5473\u7740\u6807\u51c6\u8f93\u5165\u88ab\u5173\u95ed\n            Ok(_) => (),\n            Err(e) => panic!("{e:?}"),\n        }\n        sender.send(line)?;\n    }\n\n    Ok(())\n}\n')),(0,r.yg)("p",null,"\u8fd9\u662f\u5904\u7406\u7a0b\u5e8f\uff1a"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"async fn handler(receiver: Receiver<String>) -> Result<()> {\n    while let Ok(line) = receiver.recv_async().await {\n        process(line).await?;\n    }\n    Ok(())\n}\n")),(0,r.yg)("p",null,"\u770b\u8d77\u6765\u4e0e ",(0,r.yg)("inlineCode",{parentName:"p"},"async -> async")," \u793a\u4f8b\u6ca1\u4ec0\u4e48\u4e0d\u540c\uff0c\u552f\u4e00\u7684\u533a\u522b\u662f\u5176\u4e2d\u4e00\u4fa7\u662f\u540c\u6b65\u7684\uff01\u5b8c\u6574\u6e90\u4ee3\u7801\u53ef\u5728 ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-streamer/blob/main/sea-streamer-file/src/bin/stdin-to-file.rs"},"\u8fd9\u91cc"),"\u627e\u5230\u3002"),(0,r.yg)("h3",{id:"\u4f18\u96c5\u5730\u5173\u95ed"},"\u4f18\u96c5\u5730\u5173\u95ed"),(0,r.yg)("p",null,"\u4e0a\u8ff0\u4ee3\u7801\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u6211\u4eec\u4e0d\u77e5\u9053\u884c\u662f\u5426\u5df2\u88ab\u5904\u7406\u3002\u5982\u679c\u7a0b\u5e8f\u6709\u4e00\u4e2a\u4ece\u5904\u7406 ",(0,r.yg)("inlineCode",{parentName:"p"},"sigint")," \u7684\u9000\u51fa\u673a\u5236\uff0c\u5c31\u6709\u53ef\u80fd\u5728\u6240\u6709\u884c\u90fd\u5904\u7406\u4e4b\u524d\u5c31\u9000\u51fa\u3002"),(0,r.yg)("p",null,"\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u6b63\u786e\u5730\u5173\u95ed\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"let handle = std::thread::spawn(..);\n\n// running \u662f\u4e00\u4e2a AtomicBool\nwhile running.load(Ordering::Acquire) {\n    let line = read_line_from_stdin();\n    sender.send(line)?;\n}\n\nstd::mem::drop(sender);\nhandle.join().unwrap().unwrap();\n")),(0,r.yg)("p",null,"\u5173\u95ed\u5e8f\u5217\u6709 3 \u4e2a\u6b65\u9aa4\uff1a"),(0,r.yg)("ol",{start:0},(0,r.yg)("li",{parentName:"ol"},"\u6211\u4eec\u9996\u5148\u83b7\u5f97\u5bf9\u7ebf\u7a0b\u7684 ",(0,r.yg)("inlineCode",{parentName:"li"},"JoinHandle")),(0,r.yg)("li",{parentName:"ol"},"\u6211\u4eec\u4e22\u5f03\u6240\u6709 ",(0,r.yg)("inlineCode",{parentName:"li"},"sender")," \u7684\u526f\u672c\uff0c\u4ece\u800c\u6709\u6548\u5730\u5173\u95ed\u901a\u9053"),(0,r.yg)("li",{parentName:"ol"},"\u5728\u5de5\u4f5c\u7ebf\u7a0b\u4e2d\uff0c",(0,r.yg)("inlineCode",{parentName:"li"},"receiver.recv_async()")," \u5c06\u4f1a\u8fd4\u56de\u9519\u8bef\uff0c\u5982 ",(0,r.yg)("a",{parentName:"li",href:"https://docs.rs/flume/latest/flume/struct.Receiver.html#method.recv_async"},"\u6587\u6863")," \u6240\u8ff0",(0,r.yg)("blockquote",{parentName:"li"},(0,r.yg)("p",{parentName:"blockquote"},"\u5f02\u6b65\u63a5\u6536\u901a\u9053\u4e2d\u7684\u503c\uff0c\u5982\u679c\u6240\u6709\u53d1\u9001\u8005\u90fd\u5df2\u4e22\u5f03\uff0c\u5219\u8fd4\u56de\u9519\u8bef\u3002"))),(0,r.yg)("li",{parentName:"ol"},"\u5de5\u4f5c\u7ebf\u7a0b\u5b8c\u6210\uff0c\u4e0e\u4e3b\u7ebf\u7a0b\u8fde\u63a5")),(0,r.yg)("h2",{id:"async---sync"},"Async -> Sync"),(0,r.yg)("p",null,"\u53cd\u5411\u64cd\u4f5c\u4e5f\u662f\u540c\u6837\u7b80\u5355\uff0c\u5982 ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-streamer/blob/main/examples/src/bin/blocking.rs"},"SeaStreamer \u7684\u793a\u4f8b")," \u6240\u793a\u3002"),(0,r.yg)("h2",{id:"\u7ed3\u8bba"},"\u7ed3\u8bba"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null}),(0,r.yg)("th",{parentName:"tr",align:null},"\u540c\u6b65"),(0,r.yg)("th",{parentName:"tr",align:null},"\u5f02\u6b65"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"\u542f\u52a8\u5de5\u4f5c\u7ebf\u7a0b"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://doc.rust-lang.org/std/thread/fn.spawn.html"},(0,r.yg)("inlineCode",{parentName:"a"},"std::thread::spawn"))),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://docs.rs/tokio/latest/tokio/task/fn.spawn.html"},(0,r.yg)("inlineCode",{parentName:"a"},"tokio::task::spawn")))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"\u5e76\u53d1"),(0,r.yg)("td",{parentName:"tr",align:null},"\u591a\u7ebf\u7a0b"),(0,r.yg)("td",{parentName:"tr",align:null},"\u53ef\u4ee5\u662f\u591a\u7ebf\u7a0b\u6216\u5355\u7ebf\u7a0b")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"\u5de5\u4f5c\u7ebf\u7a0b\u662f"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"FnOnce")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"Future"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"\u53d1\u9001\u6d88\u606f\u4f7f\u7528"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"send")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"send"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"\u63a5\u6536\u6d88\u606f\u4f7f\u7528"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"recv")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"recv_async"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"\u7b49\u5f85\u6d88\u606f"),(0,r.yg)("td",{parentName:"tr",align:null},"\u963b\u585e"),(0,r.yg)("td",{parentName:"tr",align:null},"\u8ba9\u6e21\u7ed9\u8fd0\u884c\u65f6")))),(0,r.yg)("p",null,"\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\uff1a"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"\u540c\u6b65\u9886\u57df\u4e2d\u7684\u591a\u7ebf\u7a0b\u5e76\u884c\u6027"),(0,r.yg)("li",{parentName:"ol"},"\u5f02\u6b65\u9886\u57df\u7684\u5e76\u53d1 - \u4f7f\u7528 ",(0,r.yg)("inlineCode",{parentName:"li"},"tokio")," \u548c ",(0,r.yg)("inlineCode",{parentName:"li"},"flume")),(0,r.yg)("li",{parentName:"ol"},"\u4f7f\u7528 ",(0,r.yg)("inlineCode",{parentName:"li"},"flume")," \u6865\u63a5\u540c\u6b65\u548c\u5f02\u6b65\u4ee3\u7801")),(0,r.yg)("p",null,"\u73b0\u5728\u4f60\u5df2\u4e86\u89e3 ",(0,r.yg)("inlineCode",{parentName:"p"},"flume")," \u7684\u5f3a\u5927\u529f\u80fd\uff0c\u4f46\u8fd8\u6709\u66f4\u591a\u5185\u5bb9\uff01"),(0,r.yg)("p",null,"\u5728\u4e0b\u4e00\u96c6\uff0c\u5e0c\u671b\u6211\u4eec\u80fd\u8ba8\u8bba ",(0,r.yg)("inlineCode",{parentName:"p"},"flume")," \u7684\u5176\u4ed6\u6709\u8da3\u7279\u6027\u2014\u2014\u6709\u754c\u901a\u9053\u548c\u201c\u4f1a\u9762\u901a\u9053\u201d\u3002"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://firedbg.sea-ql.org/blog/2024-06-30-fizzbuzz-multithread/"},"FizzBuzz \u591a\u7ebf\u7a0b - \u4f7f\u7528\u4f1a\u9762\u901a\u9053\u7684\u540c\u6b65"))),(0,r.yg)("h2",{id:"rustacean-\u8d34\u7eb8\u5305-"},"Rustacean \u8d34\u7eb8\u5305 \ud83e\udd80"),(0,r.yg)("p",null,"Rustacean \u8d34\u7eb8\u5305\u662f\u5c55\u793a\u4f60\u5bf9 Rust \u70ed\u60c5\u7684\u5b8c\u7f8e\u65b9\u5f0f\u3002\n\u6211\u4eec\u7684\u8d34\u7eb8\u91c7\u7528\u4f18\u8d28\u9632\u6c34\u4e59\u70ef\u57fa\uff0c\u5177\u6709\u72ec\u7279\u7684\u54d1\u5149\u6548\u679c\u3002\n\u628a\u5b83\u4eec\u8d34\u5728\u4f60\u7684\u7b14\u8bb0\u672c\u7535\u8111\u3001\u7b14\u8bb0\u672c\u6216\u4efb\u4f55\u8bbe\u5907\u4e0a\uff0c\u663e\u793a\u4f60\u5bf9 Rust \u7684\u70ed\u7231\uff01"),(0,r.yg)("p",null,"\u6b64\u5916\uff0c\u6240\u6709\u5229\u6da6\u5c06\u76f4\u63a5\u8d21\u732e\u4e8e SeaQL \u9879\u76ee\u7684\u6301\u7eed\u5f00\u53d1\u3002"),(0,r.yg)("p",null,"\u8d34\u7eb8\u5305\u5185\u5bb9\uff1a"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"SeaQL \u9879\u76ee\u7684 Logo\uff1aSeaQL, SeaORM, SeaQuery, Seaography, FireDBG"),(0,r.yg)("li",{parentName:"ul"},"SeaQL \u7684\u5409\u7965\u7269\uff1aTerres the Hermit Crab"),(0,r.yg)("li",{parentName:"ul"},"Rust \u7684\u5409\u7965\u7269\uff1aFerris the Crab"),(0,r.yg)("li",{parentName:"ul"},"Rustacean \u8fd9\u4e2a\u8bcd")),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://www.sea-ql.org/sticker-pack/"},"\u652f\u6301 SeaQL \u5e76\u83b7\u5f97\u8d34\u7eb8\u5305\uff01")),(0,r.yg)("a",{href:"https://www.sea-ql.org/sticker-pack/"},(0,r.yg)("img",{style:{borderRadius:"25px"},alt:"Rustacean Sticker Pack by SeaQL",src:"https://www.sea-ql.org/static/sticker-pack-1s.jpg"})))}u.isMDXComponent=!0}}]);