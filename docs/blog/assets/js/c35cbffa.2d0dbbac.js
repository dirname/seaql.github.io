"use strict";(self.webpackChunksea_ql_blog=self.webpackChunksea_ql_blog||[]).push([[1834],{5680:(e,a,r)=>{r.d(a,{xA:()=>o,yg:()=>h});var t=r(6540);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function l(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?l(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function u(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},l=Object.keys(e);for(t=0;t<l.length;t++)r=l[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)r=l[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=t.createContext({}),p=function(e){var a=t.useContext(s),r=a;return e&&(r="function"==typeof e?e(a):i(i({},a),e)),r},o=function(e){var a=p(e.components);return t.createElement(s.Provider,{value:a},e.children)},g="mdxType",y={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var r=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,o=u(e,["components","mdxType","originalType","parentName"]),g=p(r),m=n,h=g["".concat(s,".").concat(m)]||g[m]||y[m]||l;return r?t.createElement(h,i(i({ref:a},o),{},{components:r})):t.createElement(h,i({ref:a},o))}));function h(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=m;var u={};for(var s in a)hasOwnProperty.call(a,s)&&(u[s]=a[s]);u.originalType=e,u[g]="string"==typeof e?e:n,i[1]=u;for(var p=2;p<l;p++)i[p]=r[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9403:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>y,frontMatter:()=>l,metadata:()=>u,toc:()=>p});var t=r(8168),n=(r(6540),r(5680));const l={slug:"2022-08-05-whats-new-in-seaquery-0.26.0",title:"SeaQuery 0.26.0 \u4e2d\u7684\u65b0\u529f\u80fd",author:"SeaQL \u56e2\u961f",author_title:"Ivan Krivosheev",author_url:"https://github.com/SeaQL",author_image_url:"https://www.sea-ql.org/SeaORM/img/SeaQL.png",tags:["news"]},i=void 0,u={permalink:"/blog/2022-08-05-whats-new-in-seaquery-0.26.0",editUrl:"https://github.com/SeaQL/seaql.github.io/edit/master/Blog/blog/2022-08-05-whats-new-in-seaquery-0.26.0.md",source:"@site/blog/2022-08-05-whats-new-in-seaquery-0.26.0.md",title:"SeaQuery 0.26.0 \u4e2d\u7684\u65b0\u529f\u80fd",description:"\ud83c\udf89 \u6211\u4eec\u5f88\u9ad8\u5174\u53d1\u5e03 SeaQuery 0.26.0! \u4ee5\u4e0b\u662f\u4e00\u4e9b\u529f\u80fd\u4eae\u70b9 \ud83c\udf1f:",date:"2022-08-05T00:00:00.000Z",formattedDate:"August 5, 2022",tags:[{label:"news",permalink:"/blog/tags/news"}],readingTime:3.235,hasTruncateMarker:!1,authors:[{name:"SeaQL \u56e2\u961f",title:"Ivan Krivosheev",url:"https://github.com/SeaQL",imageURL:"https://www.sea-ql.org/SeaORM/img/SeaQL.png"}],frontMatter:{slug:"2022-08-05-whats-new-in-seaquery-0.26.0",title:"SeaQuery 0.26.0 \u4e2d\u7684\u65b0\u529f\u80fd",author:"SeaQL \u56e2\u961f",author_title:"Ivan Krivosheev",author_url:"https://github.com/SeaQL",author_image_url:"https://www.sea-ql.org/SeaORM/img/SeaQL.png",tags:["news"]},prevItem:{title:"\u5e86\u795d\u8d85\u8fc7 3,000 \u4e2a GitHub Stars \ud83c\udf89",permalink:"/blog/2022-08-12-3k-github-stars"},nextItem:{title:"SeaQL.org \u7684\u5de5\u7a0b",permalink:"/blog/2022-07-30-engineering"}},s={authorsImageUrls:[void 0]},p=[{value:"\u4f9d\u8d56\u9879\u5347\u7ea7",id:"\u4f9d\u8d56\u9879\u5347\u7ea7",level:2},{value:"VALUES \u5217\u8868",id:"values-\u5217\u8868",level:2},{value:"\u5f15\u5165 sea-query-binder",id:"\u5f15\u5165-sea-query-binder",level:2},{value:"\u652f\u6301 CASE WHEN \u8bed\u53e5",id:"\u652f\u6301-case-when-\u8bed\u53e5",level:2},{value:"\u6dfb\u52a0\u5bf9 Ip(4,6)Network \u548c MacAddress \u7684\u652f\u6301",id:"\u6dfb\u52a0\u5bf9-ip46network-\u548c-macaddress-\u7684\u652f\u6301",level:2},{value:"\u5f15\u5165 sea-query-attr",id:"\u5f15\u5165-sea-query-attr",level:2},{value:"\u6dfb\u52a0\u4fee\u6539\u5916\u952e\u7684\u80fd\u529b",id:"\u6dfb\u52a0\u4fee\u6539\u5916\u952e\u7684\u80fd\u529b",level:2},{value:"\u9009\u62e9 DISTINCT ON",id:"\u9009\u62e9-distinct-on",level:2},{value:"\u5176\u4ed6\u589e\u5f3a\u529f\u80fd",id:"\u5176\u4ed6\u589e\u5f3a\u529f\u80fd",level:2},{value:"\u96c6\u6210\u793a\u4f8b",id:"\u96c6\u6210\u793a\u4f8b",level:2},{value:"\u793e\u533a",id:"\u793e\u533a",level:2}],o={toc:p},g="wrapper";function y(e){let{components:a,...r}=e;return(0,n.yg)(g,(0,t.A)({},o,r,{components:a,mdxType:"MDXLayout"}),(0,n.yg)("p",null,"\ud83c\udf89 \u6211\u4eec\u5f88\u9ad8\u5174\u53d1\u5e03 SeaQuery ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query/releases/tag/0.26.0"},(0,n.yg)("inlineCode",{parentName:"a"},"0.26.0")),"! \u4ee5\u4e0b\u662f\u4e00\u4e9b\u529f\u80fd\u4eae\u70b9 \ud83c\udf1f:"),(0,n.yg)("h2",{id:"\u4f9d\u8d56\u9879\u5347\u7ea7"},"\u4f9d\u8d56\u9879\u5347\u7ea7"),(0,n.yg)("p",null,"[",(0,n.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query/issues/356"},"#356"),"] \u6211\u4eec\u5347\u7ea7\u4e86\u4e00\u4e9b\u4e3b\u8981\u4f9d\u8d56\u9879\uff1a"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"\u5c06 ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/launchbadge/sqlx"},(0,n.yg)("inlineCode",{parentName:"a"},"sqlx"))," \u5347\u7ea7\u5230 0.6"),(0,n.yg)("li",{parentName:"ul"},"\u5c06 ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/time-rs/time"},(0,n.yg)("inlineCode",{parentName:"a"},"time"))," \u5347\u7ea7\u5230 0.3"),(0,n.yg)("li",{parentName:"ul"},"\u5c06 ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/uuid-rs/uuid"},(0,n.yg)("inlineCode",{parentName:"a"},"uuid"))," \u5347\u7ea7\u5230 1.0"),(0,n.yg)("li",{parentName:"ul"},"\u5c06 ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/akubera/bigdecimal-rs"},(0,n.yg)("inlineCode",{parentName:"a"},"bigdecimal"))," \u5347\u7ea7\u5230 0.3"),(0,n.yg)("li",{parentName:"ul"},"\u5c06 ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/achanda/ipnetwork"},(0,n.yg)("inlineCode",{parentName:"a"},"ipnetwork"))," \u5347\u7ea7\u5230 0.19")),(0,n.yg)("p",null,"\u8bf7\u6ce8\u610f\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u5728\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4e5f\u5347\u7ea7\u76f8\u5e94\u7684\u4f9d\u8d56\u9879\u3002"),(0,n.yg)("h2",{id:"values-\u5217\u8868"},"VALUES \u5217\u8868"),(0,n.yg)("p",null,"[",(0,n.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query/issues/350"},"#351"),"] \u6dfb\u52a0\u5bf9 VALUES \u5217\u8868\u7684\u652f\u6301"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-rust"},'// SELECT * FROM (VALUES (1, \'hello\'), (2, \'world\')) AS "x"\nlet query = SelectStatement::new()\n    .expr(Expr::asterisk())\n    .from_values(vec![(1i32, "hello"), (2, "world")], Alias::new("x"))\n    .to_owned();\n\n assert_eq!(\n     query.to_string(PostgresQueryBuilder), \n     r#"SELECT * FROM (VALUES (1, \'hello\'), (2, \'world\')) AS "x""#\n );\n')),(0,n.yg)("h2",{id:"\u5f15\u5165-sea-query-binder"},"\u5f15\u5165 sea-query-binder"),(0,n.yg)("p",null,"[",(0,n.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query/issues/273"},"#273"),"] \u5bf9 SQLx \u7684\u539f\u751f\u652f\u6301\uff0c\u65e0\u9700\u5b8f"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-rust"},'use sea_query_binder::SqlxBinder;\n\n// \u521b\u5efa\u5e26\u6709\u51c6\u5907 SQLx \u7684 SeaQuery \u67e5\u8be2\nlet (sql, values) = Query::select()\n    .columns([\n        Character::Id,\n        Character::Uuid,\n        Character::Character,\n        Character::FontSize,\n        Character::Meta,\n        Character::Decimal,\n        Character::BigDecimal,\n        Character::Created,\n        Character::Inet,\n        Character::MacAddress,\n    ])\n    .from(Character::Table)\n    .order_by(Character::Id, Order::Desc)\n    .build_sqlx(PostgresQueryBuilder);\n\n// \u6267\u884c\u67e5\u8be2\nlet rows = sqlx::query_as_with::<_, CharacterStructChrono, _>(&sql, values)\n    .fetch_all(&mut pool)\n    .await?;\n\n// \u6253\u5370\u884c\nfor row in rows.iter() {\n    println!("{:?}", row);\n}\n')),(0,n.yg)("h2",{id:"\u652f\u6301-case-when-\u8bed\u53e5"},"\u652f\u6301 CASE WHEN \u8bed\u53e5"),(0,n.yg)("p",null,"[",(0,n.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query/pull/304"},"#304"),"] \u6dfb\u52a0\u5bf9 ",(0,n.yg)("inlineCode",{parentName:"p"},"CASE WHEN")," \u8bed\u53e5\u7684\u652f\u6301"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-rust"},'let query = Query::select()\n    .expr_as(\n        CaseStatement::new()\n            .case(Expr::tbl(Glyph::Table, Glyph::Aspect).is_in(vec![2, 4]), Expr::val(true))\n            .finally(Expr::val(false)),\n        Alias::new("is_even")\n    )\n    .from(Glyph::Table)\n    .to_owned();\n    \nassert_eq!(\n    query.to_string(PostgresQueryBuilder),\n    r#"SELECT (CASE WHEN ("glyph"."aspect" IN (2, 4)) THEN TRUE ELSE FALSE END) AS "is_even" FROM "glyph""#\n);\n')),(0,n.yg)("h2",{id:"\u6dfb\u52a0\u5bf9-ip46network-\u548c-macaddress-\u7684\u652f\u6301"},"\u6dfb\u52a0\u5bf9 Ip(4,6)Network \u548c MacAddress \u7684\u652f\u6301"),(0,n.yg)("p",null,"[",(0,n.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query/pull/309"},"#309"),"] \u5728 PostgreSQL \u540e\u7aef\u6dfb\u52a0\u5bf9\u7f51\u7edc\u7c7b\u578b\u7684\u652f\u6301"),(0,n.yg)("h2",{id:"\u5f15\u5165-sea-query-attr"},"\u5f15\u5165 sea-query-attr"),(0,n.yg)("p",null,"[",(0,n.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query/issues/296"},"#296"),"] \u7528\u4e8e\u4ece\u7ed3\u6784\u4f53\u6d3e\u751f Iden \u679a\u4e3e\u7684 Proc-macro"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-rust"},'use sea_query::gen_type_def;\n\n#[gen_type_def]\npub struct Hello {\n    pub name: String\n}\n\nprintln!("{:?}", HelloTypeDef::Name);\n')),(0,n.yg)("h2",{id:"\u6dfb\u52a0\u4fee\u6539\u5916\u952e\u7684\u80fd\u529b"},"\u6dfb\u52a0\u4fee\u6539\u5916\u952e\u7684\u80fd\u529b"),(0,n.yg)("p",null,"[",(0,n.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query/pull/299"},"#299"),"] \u6dfb\u52a0\u5bf9 ",(0,n.yg)("inlineCode",{parentName:"p"},"ALTER")," \u5916\u952e\u7684\u652f\u6301"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-rust"},'let foreign_key_char = TableForeignKey::new()\n    .name("FK_character_glyph")\n    .from_tbl(Char::Table)\n    .from_col(Char::FontId)\n    .from_col(Char::Id)\n    .to_tbl(Glyph::Table)\n    .to_col(Char::FontId)\n    .to_col(Char::Id)\n    .to_owned();\n\nlet table = Table::alter()\n    .table(Character::Table)\n    .add_foreign_key(&foreign_key_char)\n    .to_owned();\n\nassert_eq!(\n    table.to_string(PostgresQueryBuilder),\n    vec![\n        r#"ALTER TABLE "character""#,\n        r#"ADD CONSTRAINT "FK_character_glyph""#,\n        r#"FOREIGN KEY ("font_id", "id") REFERENCES "glyph" ("font_id", "id")"#,\n        r#"ON DELETE CASCADE ON UPDATE CASCADE,"#,\n    ]\n    .join(" ")\n);\n')),(0,n.yg)("h2",{id:"\u9009\u62e9-distinct-on"},"\u9009\u62e9 DISTINCT ON"),(0,n.yg)("p",null,"[",(0,n.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query/issues/250"},"#250"),"]"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-rust"},'let query = Query::select()\n    .from(Char::Table)\n    .distinct_on(vec![Char::Character])\n    .column(Char::Character)\n    .column(Char::SizeW)\n    .column(Char::SizeH)\n    .to_owned();\n    \n assert_eq!(\n     query.to_string(PostgresQueryBuilder),\n     r#"SELECT DISTINCT ON ("character") "character", "size_w", "size_h" FROM "character""#\n );\n')),(0,n.yg)("h2",{id:"\u5176\u4ed6\u589e\u5f3a\u529f\u80fd"},"\u5176\u4ed6\u589e\u5f3a\u529f\u80fd"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"[",(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/353"},"#353"),"] \u652f\u6301 ",(0,n.yg)("inlineCode",{parentName:"li"},"LIKE ... ESCAPE ...")," \u8868\u8fbe\u5f0f  "),(0,n.yg)("li",{parentName:"ul"},"[",(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/306"},"#306"),"] \u5c06 ",(0,n.yg)("inlineCode",{parentName:"li"},"escape")," \u548c ",(0,n.yg)("inlineCode",{parentName:"li"},"unescape")," \u5b57\u7b26\u4e32\u79fb\u52a8\u5230\u540e\u7aef"),(0,n.yg)("li",{parentName:"ul"},"[",(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/365"},"#365"),"] \u6dfb\u52a0\u4f7f\u5217\u53ef\u4e3a null \u7684\u65b9\u6cd5"),(0,n.yg)("li",{parentName:"ul"},"[",(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/348"},"#348"),"] \u5411 Expr \u6dfb\u52a0 ",(0,n.yg)("inlineCode",{parentName:"li"},"is")," \u548c ",(0,n.yg)("inlineCode",{parentName:"li"},"is_not")),(0,n.yg)("li",{parentName:"ul"},"[",(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/349"},"#349"),"] \u6dfb\u52a0 ",(0,n.yg)("inlineCode",{parentName:"li"},"CURRENT_TIMESTAMP")," \u51fd\u6570"),(0,n.yg)("li",{parentName:"ul"},"[",(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/345"},"#345"),"] \u5411 Expr \u6dfb\u52a0 ",(0,n.yg)("inlineCode",{parentName:"li"},"in_tuple")," \u65b9\u6cd5"),(0,n.yg)("li",{parentName:"ul"},"[",(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/266"},"#266"),"] \u63d2\u5165\u9ed8\u8ba4\u503c"),(0,n.yg)("li",{parentName:"ul"},"[",(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/324"},"#324"),"] \u5c06 ",(0,n.yg)("inlineCode",{parentName:"li"},"sea-query-driver")," \u8bbe\u4e3a\u53ef\u9009\u4f9d\u8d56"),(0,n.yg)("li",{parentName:"ul"},"[",(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/334"},"#334"),"] \u6dfb\u52a0 ",(0,n.yg)("inlineCode",{parentName:"li"},"ABS")," \u51fd\u6570"),(0,n.yg)("li",{parentName:"ul"},"[",(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/332"},"#332"),"] \u521b\u5efa\u7d22\u5f15\u65f6\u652f\u6301 ",(0,n.yg)("inlineCode",{parentName:"li"},"IF NOT EXISTS")),(0,n.yg)("li",{parentName:"ul"},"[",(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/314"},"#314"),"] \u652f\u6301 MySQL \u4e2d\u7684\u4e0d\u540c ",(0,n.yg)("inlineCode",{parentName:"li"},"blob")," \u7c7b\u578b"),(0,n.yg)("li",{parentName:"ul"},"[",(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/331"},"#331"),"] \u6dfb\u52a0 ",(0,n.yg)("inlineCode",{parentName:"li"},"VarBinary")," \u5217\u7c7b\u578b"),(0,n.yg)("li",{parentName:"ul"},"[",(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/335"},"#335"),"] ",(0,n.yg)("inlineCode",{parentName:"li"},"RETURNING")," \u8868\u8fbe\u5f0f\u652f\u6301 ",(0,n.yg)("inlineCode",{parentName:"li"},"SimpleExpr"))),(0,n.yg)("h2",{id:"\u96c6\u6210\u793a\u4f8b"},"\u96c6\u6210\u793a\u4f8b"),(0,n.yg)("p",null,"SeaQuery \u4e0e Rust \u751f\u6001\u7cfb\u7edf\u4e2d\u7684\u5176\u4ed6 crate \u517c\u5bb9\u826f\u597d\u3002 "),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/tree/master/examples/postgres"},"Postgres \u793a\u4f8b")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/tree/master/examples/rusqlite"},"Rusqlite \u793a\u4f8b")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/tree/master/examples/sqlx_any"},"SQLx \u4efb\u610f\u793a\u4f8b")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/tree/master/examples/sqlx_postgres"},"SQLx Postgres \u793a\u4f8b")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/tree/master/examples/sqlx_mysql"},"SQLx MySql \u793a\u4f8b")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/tree/master/examples/sqlx_sqlite"},"SQLx Sqlite \u793a\u4f8b"))),(0,n.yg)("h2",{id:"\u793e\u533a"},"\u793e\u533a"),(0,n.yg)("p",null,"SeaQL \u662f\u4e00\u4e2a\u793e\u533a\u9a71\u52a8\u7684\u9879\u76ee\u3002\u6211\u4eec\u6b22\u8fce\u60a8\u53c2\u4e0e\u3001\u8d21\u732e\uff0c\u4e00\u8d77\u4e3a Rust \u7684\u672a\u6765\u800c\u52aa\u529b\u3002"))}y.isMDXComponent=!0}}]);