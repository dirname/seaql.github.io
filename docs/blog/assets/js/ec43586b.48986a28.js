"use strict";(self.webpackChunksea_ql_blog=self.webpackChunksea_ql_blog||[]).push([[263],{5680:(e,a,n)=>{n.d(a,{xA:()=>s,yg:()=>d});var t=n(6540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function l(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?l(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function p(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=t.createContext({}),u=function(e){var a=t.useContext(o),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},s=function(e){var a=u(e.components);return t.createElement(o.Provider,{value:a},e.children)},y="mdxType",g={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),y=u(n),m=r,d=y["".concat(o,".").concat(m)]||y[m]||g[m]||l;return n?t.createElement(d,i(i({ref:a},s),{},{components:n})):t.createElement(d,i({ref:a},s))}));function d(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var p={};for(var o in a)hasOwnProperty.call(a,o)&&(p[o]=a[o]);p.originalType=e,p[y]="string"==typeof e?e:r,i[1]=p;for(var u=2;u<l;u++)i[u]=n[u];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},616:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>g,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var t=n(8168),r=(n(6540),n(5680));const l={slug:"2022-10-31-whats-new-in-seaquery-0.27.0",title:"SeaQuery 0.27.0 \u7684\u65b0\u7279\u6027",author:"SeaQL Team",author_title:"Ivan Krivosheev",author_url:"https://github.com/SeaQL",author_image_url:"https://www.sea-ql.org/SeaORM/img/SeaQL.png",tags:["news"]},i=void 0,p={permalink:"/blog/2022-10-31-whats-new-in-seaquery-0.27.0",editUrl:"https://github.com/SeaQL/seaql.github.io/edit/master/Blog/blog/2022-10-31-whats-new-in-seaquery-0.27.0.md",source:"@site/blog/2022-10-31-whats-new-in-seaquery-0.27.0.md",title:"SeaQuery 0.27.0 \u7684\u65b0\u7279\u6027",description:"\ud83c\udf89 \u6211\u4eec\u5f88\u9ad8\u5174\u53d1\u5e03 SeaQuery 0.27.0\uff01\u4ee5\u4e0b\u662f\u4e00\u4e9b\u529f\u80fd\u4eae\u70b9 \ud83c\udf1f\uff1a",date:"2022-10-31T00:00:00.000Z",formattedDate:"October 31, 2022",tags:[{label:"news",permalink:"/blog/tags/news"}],readingTime:5.285,hasTruncateMarker:!1,authors:[{name:"SeaQL Team",title:"Ivan Krivosheev",url:"https://github.com/SeaQL",imageURL:"https://www.sea-ql.org/SeaORM/img/SeaQL.png"}],frontMatter:{slug:"2022-10-31-whats-new-in-seaquery-0.27.0",title:"SeaQuery 0.27.0 \u7684\u65b0\u7279\u6027",author:"SeaQL Team",author_title:"Ivan Krivosheev",author_url:"https://github.com/SeaQL",author_image_url:"https://www.sea-ql.org/SeaORM/img/SeaQL.png",tags:["news"]},prevItem:{title:"\u5728 crates.io \u4e2d\u5207\u6362\u5806\u53e0\u4e0b\u8f7d\u56fe",permalink:"/blog/2022-11-09-toggle-stacked-download-graph-in-crates-io"},nextItem:{title:"\u5f00\u59cb\u4f7f\u7528 Seaography",permalink:"/blog/2022-09-27-getting-started-with-seaography"}},o={authorsImageUrls:[void 0]},u=[{value:"\u4f9d\u8d56\u5347\u7ea7",id:"\u4f9d\u8d56\u5347\u7ea7",level:2},{value:"\u9a71\u52a8\u652f\u6301",id:"\u9a71\u52a8\u652f\u6301",level:2},{value:"\u652f\u6301\u5b50\u67e5\u8be2\u8fd0\u7b97\u7b26\uff1a<code>EXISTS</code>\u3001<code>ALL</code>\u3001<code>ANY</code>\u3001<code>SOME</code>",id:"\u652f\u6301\u5b50\u67e5\u8be2\u8fd0\u7b97\u7b26existsallanysome",level:2},{value:"\u652f\u6301 <code>ON CONFLICT WHERE</code>",id:"\u652f\u6301-on-conflict-where",level:2},{value:"\u66f4\u6539\u4e86 <code>cond_where</code> \u94fe\u5f0f\u8bed\u4e49",id:"\u66f4\u6539\u4e86-cond_where-\u94fe\u5f0f\u8bed\u4e49",level:2},{value:"\u6dfb\u52a0 <code>OnConflict::value</code> \u548c <code>OnConflict::values</code>",id:"\u6dfb\u52a0-onconflictvalue-\u548c-onconflictvalues",level:2},{value:"\u6539\u8fdb <code>ColumnDef::default</code>",id:"\u6539\u8fdb-columndefdefault",level:2},{value:"\u7834\u574f\u6027\u66f4\u6539",id:"\u7834\u574f\u6027\u66f4\u6539",level:2},{value:"\u5176\u4ed6\u589e\u5f3a\u529f\u80fd",id:"\u5176\u4ed6\u589e\u5f3a\u529f\u80fd",level:2},{value:"\u9519\u8bef\u4fee\u590d",id:"\u9519\u8bef\u4fee\u590d",level:2},{value:"\u96c6\u6210\u793a\u4f8b",id:"\u96c6\u6210\u793a\u4f8b",level:2},{value:"\u793e\u533a",id:"\u793e\u533a",level:2}],s={toc:u},y="wrapper";function g(e){let{components:a,...n}=e;return(0,r.yg)(y,(0,t.A)({},s,n,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"\ud83c\udf89 \u6211\u4eec\u5f88\u9ad8\u5174\u53d1\u5e03 SeaQuery ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query/releases/tag/0.27.0"},(0,r.yg)("inlineCode",{parentName:"a"},"0.27.0")),"\uff01\u4ee5\u4e0b\u662f\u4e00\u4e9b\u529f\u80fd\u4eae\u70b9 \ud83c\udf1f\uff1a"),(0,r.yg)("h2",{id:"\u4f9d\u8d56\u5347\u7ea7"},"\u4f9d\u8d56\u5347\u7ea7"),(0,r.yg)("p",null,"[",(0,r.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query/issues/356"},"#356"),"] \u6211\u4eec\u5347\u7ea7\u4e86\u4e00\u4e2a\u4e3b\u8981\u4f9d\u8d56\uff1a"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"\u5347\u7ea7 ",(0,r.yg)("a",{parentName:"li",href:"https://github.com/launchbadge/sqlx"},(0,r.yg)("inlineCode",{parentName:"a"},"sqlx"))," \u5230 0.6.1")),(0,r.yg)("p",null,"\u60a8\u53ef\u80fd\u8fd8\u9700\u8981\u5728\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5347\u7ea7\u76f8\u5e94\u7684\u4f9d\u8d56\u3002"),(0,r.yg)("h2",{id:"\u9a71\u52a8\u652f\u6301"},"\u9a71\u52a8\u652f\u6301"),(0,r.yg)("p",null,"\u6211\u4eec\u91cd\u65b0\u8bbe\u8ba1\u4e86 SeaQuery \u4e2d\u9a71\u52a8\u7684\u5de5\u4f5c\u65b9\u5f0f\uff1a\u5728 ",(0,r.yg)("inlineCode",{parentName:"p"},"0.27.0")," \u4e4b\u524d\uff0c\u7528\u6237\u5fc5\u987b\u8c03\u7528 ",(0,r.yg)("inlineCode",{parentName:"p"},"sea_query_driver_*")," \u5b8f\u3002\u73b0\u5728\u6bcf\u4e2a\u9a71\u52a8 ",(0,r.yg)("inlineCode",{parentName:"p"},"sqlx"),"\u3001",(0,r.yg)("inlineCode",{parentName:"p"},"postgres")," \u548c ",(0,r.yg)("inlineCode",{parentName:"p"},"rusqlite")," \u6709\u81ea\u5df1\u7684\u652f\u6301\u5e93\uff0c\u4e0e\u76f8\u5e94\u7684\u5e93\u7d27\u5bc6\u96c6\u6210\u3002\u6709\u5173\u66f4\u591a\u7ec6\u8282\uff0c\u8bf7\u67e5\u770b\u6211\u4eec\u4e0b\u9762\u7684\u96c6\u6210\u793a\u4f8b\u3002"),(0,r.yg)("p",null,"[",(0,r.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query/issues/383"},"#383"),"] \u63a8\u5f03 ",(0,r.yg)("inlineCode",{parentName:"p"},"sea-query-driver"),"\uff0c\u6539\u7528 ",(0,r.yg)("inlineCode",{parentName:"p"},"sea-query-binder")),(0,r.yg)("p",null,"[",(0,r.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query/pull/422"},"#422"),"] Rusqlite \u652f\u6301\u5df2\u8fc1\u79fb\u81f3 ",(0,r.yg)("inlineCode",{parentName:"p"},"sea-query-rusqlite")),(0,r.yg)("p",null,"[",(0,r.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query/pull/433"},"#433"),"] Postgres \u652f\u6301\u5df2\u8fc1\u79fb\u81f3 ",(0,r.yg)("inlineCode",{parentName:"p"},"sea-query-postgres")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"// \u4e4b\u524d\nsea_query::sea_query_driver_postgres!();\nuse sea_query_driver_postgres::{bind_query, bind_query_as};\n\nlet (sql, values) = Query::select()\n    .from(Character::Table)\n    .expr(Func::count(Expr::col(Character::Id)))\n    .build(PostgresQueryBuilder);\n\nlet row = bind_query(sqlx::query(&sql), &values)\n    .fetch_one(&mut pool)\n    .await\n    .unwrap();\n\n// \u73b0\u5728\nuse sea_query_binder::SqlxBinder;\n\nlet (sql, values) = Query::select()\n    .from(Character::Table)\n    .expr(Func::count(Expr::col(Character::Id)))\n    .build_sqlx(PostgresQueryBuilder);\n\nlet row = sqlx::query_with(&sql, values)\n    .fetch_one(&mut pool)\n    .await\n    .unwrap();\n\n// \u73b0\u5728\u53ef\u4ee5\u5f88\u597d\u5730\u4f7f\u7528 SQLx \u7684 `query_as_with`\uff1a\nlet rows = sqlx::query_as_with::<_, StructWithFromRow, _>(&sql, values)\n    .fetch_all(&mut pool)\n    .await\n    .unwrap();\n")),(0,r.yg)("h2",{id:"\u652f\u6301\u5b50\u67e5\u8be2\u8fd0\u7b97\u7b26existsallanysome"},"\u652f\u6301\u5b50\u67e5\u8be2\u8fd0\u7b97\u7b26\uff1a",(0,r.yg)("inlineCode",{parentName:"h2"},"EXISTS"),"\u3001",(0,r.yg)("inlineCode",{parentName:"h2"},"ALL"),"\u3001",(0,r.yg)("inlineCode",{parentName:"h2"},"ANY"),"\u3001",(0,r.yg)("inlineCode",{parentName:"h2"},"SOME")),(0,r.yg)("p",null,"[",(0,r.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query/issues/118"},"#118"),"] \u65b0\u589e\u5b50\u67e5\u8be2\u8fd0\u7b97\u7b26\uff1a",(0,r.yg)("inlineCode",{parentName:"p"},"EXISTS"),"\u3001",(0,r.yg)("inlineCode",{parentName:"p"},"ALL"),"\u3001",(0,r.yg)("inlineCode",{parentName:"p"},"ANY"),"\u3001",(0,r.yg)("inlineCode",{parentName:"p"},"SOME")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'let query = Query::select()\n    .column(Char::Id)\n    .from(Char::Table)\n    .and_where(\n        Expr::col(Char::Id)\n            .eq(\n                Expr::any(\n                    Query::select().column(Char::Id).from(Char::Table).take()\n                )\n            )\n    )\n    .to_owned();\n\nassert_eq!(\n    query.to_string(MysqlQueryBuilder),\n    r#"SELECT `id` FROM `character` WHERE `id` = ANY(SELECT `id` FROM `character`)"#\n);\nassert_eq!(\n    query.to_string(PostgresQueryBuilder),\n    r#"SELECT "id" FROM "character" WHERE "id" = ANY(SELECT "id" FROM "character")"#\n);\n')),(0,r.yg)("h2",{id:"\u652f\u6301-on-conflict-where"},"\u652f\u6301 ",(0,r.yg)("inlineCode",{parentName:"h2"},"ON CONFLICT WHERE")),(0,r.yg)("p",null,"[",(0,r.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query/issues/366"},"#366"),"] \u6dfb\u52a0\u5bf9 ",(0,r.yg)("inlineCode",{parentName:"p"},"ON CONFLICT WHERE")," \u7684\u652f\u6301"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'let query = Query::insert()\n    .into_table(Glyph::Table)\n    .columns([Glyph::Aspect, Glyph::Image])\n    .values_panic(vec![\n        2.into(),\n        3.into(),\n    ])\n    .on_conflict(\n        OnConflict::column(Glyph::Id)\n            .update_expr((Glyph::Image, Expr::val(1).add(2)))\n            .target_and_where(Expr::tbl(Glyph::Table, Glyph::Aspect).is_null())\n            .to_owned()\n    )\n    .to_owned();\n\nassert_eq!(\n    query.to_string(MysqlQueryBuilder),\n    r#"INSERT INTO `glyph` (`aspect`, `image`) VALUES (2, 3) ON DUPLICATE KEY UPDATE `image` = 1 + 2"#\n);\nassert_eq!(\n    query.to_string(PostgresQueryBuilder),\n    r#"INSERT INTO "glyph" ("aspect", "image") VALUES (2, 3) ON CONFLICT ("id") WHERE "glyph"."aspect" IS NULL DO UPDATE SET "image" = 1 + 2"#\n);\nassert_eq!(\n    query.to_string(SqliteQueryBuilder),\n    r#"INSERT INTO "glyph" ("aspect", "image") VALUES (2, 3) ON CONFLICT ("id") WHERE "glyph"."aspect" IS NULL DO UPDATE SET "image" = 1 + 2"#\n);\n')),(0,r.yg)("h2",{id:"\u66f4\u6539\u4e86-cond_where-\u94fe\u5f0f\u8bed\u4e49"},"\u66f4\u6539\u4e86 ",(0,r.yg)("inlineCode",{parentName:"h2"},"cond_where")," \u94fe\u5f0f\u8bed\u4e49"),(0,r.yg)("p",null,"[",(0,r.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query/issues/414"},"#414"),"] \u66f4\u6539\u4e86 ",(0,r.yg)("inlineCode",{parentName:"p"},"cond_where")," \u94fe\u5f0f\u8bed\u4e49"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'// \u4e4b\u524d\uff1a\u5c06\u6269\u5c55\u5f53\u524d\u6761\u4ef6\nassert_eq!(\n    Query::select()\n        .cond_where(any![Expr::col(Glyph::Id).eq(1), Expr::col(Glyph::Id).eq(2)])\n        .cond_where(Expr::col(Glyph::Id).eq(3))\n        .to_owned()\n        .to_string(PostgresQueryBuilder),\n    r#"SELECT WHERE "id" = 1 OR "id" = 2 OR "id" = 3"#\n);\n// \u4e4b\u524d\uff1a\u4ee4\u4eba\u56f0\u60d1\uff0c\u56e0\u4e3a\u5b83\u4f9d\u8d56\u4e8e\u8c03\u7528\u987a\u5e8f\uff1a\nassert_eq!(\n    Query::select()\n        .cond_where(Expr::col(Glyph::Id).eq(3))\n        .cond_where(any![Expr::col(Glyph::Id).eq(1), Expr::col(Glyph::Id).eq(2)])\n        .to_owned()\n        .to_string(PostgresQueryBuilder),\n    r#"SELECT WHERE "id" = 3 AND ("id" = 1 OR "id" = 2)"#\n);\n// \u73b0\u5728\uff1a\u5c06\u59cb\u7ec8\u4e0e `AND` \u8fde\u63a5\nassert_eq!(\n    Query::select()\n        .cond_where(Expr::col(Glyph::Id).eq(1))\n        .cond_where(any![Expr::col(Glyph::Id).eq(2), Expr::col(Glyph::Id).eq(3)])\n        .to_owned()\n        .to_string(PostgresQueryBuilder),\n    r#"SELECT WHERE "id" = 1 AND ("id" = 2 OR "id" = 3)"#\n);\n// \u73b0\u5728\uff1a\u5b83\u4eec\u73b0\u5728\u662f\u7b49\u6548\u7684\nassert_eq!(\n    Query::select()\n        .cond_where(any![Expr::col(Glyph::Id).eq(2), Expr::col(Glyph::Id).eq(3)])\n        .cond_where(Expr::col(Glyph::Id).eq(1))\n        .to_owned()\n        .to_string(PostgresQueryBuilder),\n    r#"SELECT WHERE ("id" = 2 OR "id" = 3) AND "id" = 1"#\n);\n')),(0,r.yg)("h2",{id:"\u6dfb\u52a0-onconflictvalue-\u548c-onconflictvalues"},"\u6dfb\u52a0 ",(0,r.yg)("inlineCode",{parentName:"h2"},"OnConflict::value")," \u548c ",(0,r.yg)("inlineCode",{parentName:"h2"},"OnConflict::values")),(0,r.yg)("p",null,"[",(0,r.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query/issues/451"},"#451"),"] \u4e3a\u4efb\u4f55 ",(0,r.yg)("inlineCode",{parentName:"p"},"Into<Value>")," \u5b9e\u73b0 ",(0,r.yg)("inlineCode",{parentName:"p"},"From<T>")," \u5230 ",(0,r.yg)("inlineCode",{parentName:"p"},"SimpleExpr")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"// \u4e4b\u524d\uff1a\u6ce8\u610f\u5143\u7ec4\nOnConflict::column(Glyph::Id).update_expr((Glyph::Image, Expr::val(1).add(2)))\n// \u73b0\u5728\uff1a\u5b83\u63a5\u53d7 `Value` \u4ee5\u53ca `SimpleExpr`\nOnConflict::column(Glyph::Id).value(Glyph::Image, Expr::val(1).add(2))\n")),(0,r.yg)("h2",{id:"\u6539\u8fdb-columndefdefault"},"\u6539\u8fdb ",(0,r.yg)("inlineCode",{parentName:"h2"},"ColumnDef::default")),(0,r.yg)("p",null,"[",(0,r.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query/issues/347"},"#347"),"] ",(0,r.yg)("inlineCode",{parentName:"p"},"ColumnDef::default")," \u73b0\u5728\u63a5\u53d7 ",(0,r.yg)("inlineCode",{parentName:"p"},"Into<SimpleExpr>")," \u800c\u4e0d\u662f ",(0,r.yg)("inlineCode",{parentName:"p"},"Into<Value>")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"// \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5199\uff1a\nColumnDef::new(Char::FontId)\n    .timestamp()\n    .default(Expr::current_timestamp())\n")),(0,r.yg)("h2",{id:"\u7834\u574f\u6027\u66f4\u6539"},"\u7834\u574f\u6027\u66f4\u6539"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/386"},"#386"),"] \u66f4\u6539 ",(0,r.yg)("inlineCode",{parentName:"li"},"in_tuples")," \u63a5\u53e3\u4ee5\u63a5\u53d7 ",(0,r.yg)("inlineCode",{parentName:"li"},"IntoValueTuple")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/issues/320"},"#320"),"] \u79fb\u9664\u4e86\u5df2\u5f03\u7528\u7684\u65b9\u6cd5"),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/issues/440"},"#440"),"] ",(0,r.yg)("inlineCode",{parentName:"li"},"CURRENT_TIMESTAMP")," \u4ece\u51fd\u6570\u66f4\u6539\u4e3a\u5173\u952e\u5b57"),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/issues/375"},"#375"),"] \u5c06 SQLite \u7684 ",(0,r.yg)("inlineCode",{parentName:"li"},"boolean")," \u7c7b\u578b\u4ece ",(0,r.yg)("inlineCode",{parentName:"li"},"integer")," \u66f4\u6539\u4e3a ",(0,r.yg)("inlineCode",{parentName:"li"},"boolean")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/issues/451"},"#451"),"] \u5f03\u7528\u4e86 ",(0,r.yg)("inlineCode",{parentName:"li"},"OnConflict::update_value"),"\u3001",(0,r.yg)("inlineCode",{parentName:"li"},"OnConflict::update_values"),"\u3001",(0,r.yg)("inlineCode",{parentName:"li"},"OnConflict::update_expr"),"\u3001",(0,r.yg)("inlineCode",{parentName:"li"},"OnConflict::update_exprs")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/issues/451"},"#451"),"] \u5f03\u7528\u4e86 ",(0,r.yg)("inlineCode",{parentName:"li"},"InsertStatement::exprs"),"\u3001",(0,r.yg)("inlineCode",{parentName:"li"},"InsertStatement::exprs_panic")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/issues/451"},"#451"),"] \u5f03\u7528\u4e86 ",(0,r.yg)("inlineCode",{parentName:"li"},"UpdateStatement::col_expr"),"\u3001",(0,r.yg)("inlineCode",{parentName:"li"},"UpdateStatement::value_expr"),"\u3001",(0,r.yg)("inlineCode",{parentName:"li"},"UpdateStatement::exprs")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/issues/451"},"#451"),"] ",(0,r.yg)("inlineCode",{parentName:"li"},"UpdateStatement::value")," \u73b0\u5728\u63a5\u53d7 ",(0,r.yg)("inlineCode",{parentName:"li"},"Into<SimpleExpr>")," \u800c\u4e0d\u662f ",(0,r.yg)("inlineCode",{parentName:"li"},"Into<Value>")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/issues/451"},"#451"),"] ",(0,r.yg)("inlineCode",{parentName:"li"},"Expr::case"),"\u3001",(0,r.yg)("inlineCode",{parentName:"li"},"CaseStatement::case")," \u548c ",(0,r.yg)("inlineCode",{parentName:"li"},"CaseStatement::finally")," \u73b0\u5728\u63a5\u53d7 ",(0,r.yg)("inlineCode",{parentName:"li"},"Into<SimpleExpr>")," \u800c\u4e0d\u662f ",(0,r.yg)("inlineCode",{parentName:"li"},"Into<Expr>")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/460"},"#460"),"] ",(0,r.yg)("inlineCode",{parentName:"li"},"InsertStatement::values"),"\u3001",(0,r.yg)("inlineCode",{parentName:"li"},"UpdateStatement::values")," \u73b0\u5728\u63a5\u53d7 ",(0,r.yg)("inlineCode",{parentName:"li"},"IntoIterator<Item = SimpleExpr>")," \u800c\u4e0d\u662f ",(0,r.yg)("inlineCode",{parentName:"li"},"IntoIterator<Item = Value>")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/issues/409"},"#409"),"] \u5bf9\u4e8e SQLite \u4f7f\u7528 SQLx \u7684\u539f\u751f API \u6765\u5904\u7406\u65f6\u95f4"),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/435"},"#435"),"] \u5c06 ",(0,r.yg)("inlineCode",{parentName:"li"},"ColumnType::Enum")," \u7684\u7c7b\u578b\u4ece ",(0,r.yg)("inlineCode",{parentName:"li"},"(String, Vec<String>)")," \u66f4\u6539\u4e3a ",(0,r.yg)("inlineCode",{parentName:"li"},"Enum { name: DynIden, variants: Vec<DynIden>}"))),(0,r.yg)("h2",{id:"\u5176\u4ed6\u589e\u5f3a\u529f\u80fd"},"\u5176\u4ed6\u589e\u5f3a\u529f\u80fd"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/issues/336"},"#336"),"] \u4e3a SQLx \u6dfb\u52a0\u4e00\u7ef4 Postgres \u6570\u7ec4\u652f\u6301"),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/issues/373"},"#373"),"] \u652f\u6301 CROSS JOIN"),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/issues/457"},"#457"),"] \u4e3a SQLite \u6dfb\u52a0 ",(0,r.yg)("inlineCode",{parentName:"li"},"DROP COLUMN")," \u652f\u6301"),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/466"},"#466"),"] \u6dfb\u52a0 ",(0,r.yg)("inlineCode",{parentName:"li"},"YEAR"),"\u3001",(0,r.yg)("inlineCode",{parentName:"li"},"BIT")," \u548c ",(0,r.yg)("inlineCode",{parentName:"li"},"VARBIT")," \u7c7b\u578b"),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/issues/338"},"#338"),"] \u5904\u7406 Postgres \u7684\u6a21\u5f0f\u540d\u79f0\u7528\u4e8e\u6a21\u5f0f\u8bed\u53e5"),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/issues/418"},"#418"),"] \u6dfb\u52a0 ",(0,r.yg)("inlineCode",{parentName:"li"},"%"),"\u3001",(0,r.yg)("inlineCode",{parentName:"li"},"<<")," \u548c ",(0,r.yg)("inlineCode",{parentName:"li"},">>")," \u4e8c\u8fdb\u5236\u8fd0\u7b97\u7b26"),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/430"},"#329"),"] \u6dfb\u52a0 RAND \u51fd\u6570"),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/425"},"#425"),"] \u4e3a ",(0,r.yg)("inlineCode",{parentName:"li"},"Value")," \u5b9e\u73b0 ",(0,r.yg)("inlineCode",{parentName:"li"},"Display")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/issues/427"},"#427"),"] \u5411 UnionType \u6dfb\u52a0 ",(0,r.yg)("inlineCode",{parentName:"li"},"INTERSECT")," \u548c ",(0,r.yg)("inlineCode",{parentName:"li"},"EXCEPT")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/448"},"#448"),"] ",(0,r.yg)("inlineCode",{parentName:"li"},"OrderedStatement::order_by_customs"),"\u3001",(0,r.yg)("inlineCode",{parentName:"li"},"OrderedStatement::order_by_columns"),"\u3001",(0,r.yg)("inlineCode",{parentName:"li"},"OverStatement::partition_by_customs"),"\u3001",(0,r.yg)("inlineCode",{parentName:"li"},"OverStatement::partition_by_columns")," \u73b0\u5728\u63a5\u53d7 ",(0,r.yg)("inlineCode",{parentName:"li"},"IntoIterator<Item = T>")," \u800c\u4e0d\u662f ",(0,r.yg)("inlineCode",{parentName:"li"},"Vec<T>")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/452"},"#452"),"] ",(0,r.yg)("inlineCode",{parentName:"li"},"TableAlterStatement::rename_column"),"\u3001",(0,r.yg)("inlineCode",{parentName:"li"},"TableAlterStatement::drop_column"),"\u3001",(0,r.yg)("inlineCode",{parentName:"li"},"ColumnDef::new"),"\u3001",(0,r.yg)("inlineCode",{parentName:"li"},"ColumnDef::new_with_type")," \u73b0\u5728\u63a5\u53d7 ",(0,r.yg)("inlineCode",{parentName:"li"},"IntoIden")," \u800c\u4e0d\u662f ",(0,r.yg)("inlineCode",{parentName:"li"},"Iden")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/426"},"#426"),"] \u6e05\u7406 ",(0,r.yg)("inlineCode",{parentName:"li"},"IndexBuilder")," \u7279\u6027\u65b9\u6cd5"),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/436"},"#436"),"] \u5f15\u5165 ",(0,r.yg)("inlineCode",{parentName:"li"},"SqlWriter")," \u7279\u6027"),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/448"},"#448"),"] \u4ece\u793a\u4f8b\u4e2d\u79fb\u9664\u4e0d\u9700\u8981\u7684 ",(0,r.yg)("inlineCode",{parentName:"li"},"vec!"))),(0,r.yg)("h2",{id:"\u9519\u8bef\u4fee\u590d"},"\u9519\u8bef\u4fee\u590d"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/issues/449"},"#449"),"] ",(0,r.yg)("inlineCode",{parentName:"li"},"distinct_on")," \u6b63\u786e\u5904\u7406 ",(0,r.yg)("inlineCode",{parentName:"li"},"ColumnRef")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/issues/461"},"#461"),"] \u4e3a SQLite \u79fb\u9664\u4e86 ",(0,r.yg)("inlineCode",{parentName:"li"},"DROP INDEX")," \u7684 ",(0,r.yg)("inlineCode",{parentName:"li"},"ON")),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/pull/468"},"#468"),"] \u66f4\u6539\u65e5\u671f\u65f6\u95f4\u5b57\u7b26\u4e32\u683c\u5f0f\u4ee5\u5305\u542b\u5fae\u79d2"),(0,r.yg)("li",{parentName:"ul"},"[",(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/issues/452"},"#452"),"] \u5bf9 PostgreSQL \u8fdb\u884c\u7684 ",(0,r.yg)("inlineCode",{parentName:"li"},"ALTER TABLE")," \u6709 ",(0,r.yg)("inlineCode",{parentName:"li"},"UNIQUE")," \u7ea6\u675f")),(0,r.yg)("h2",{id:"\u96c6\u6210\u793a\u4f8b"},"\u96c6\u6210\u793a\u4f8b"),(0,r.yg)("p",null,"SeaQuery \u4e0e Rust \u751f\u6001\u7cfb\u7edf\u4e2d\u7684\u5176\u4ed6 crate \u826f\u597d\u517c\u5bb9\u3002"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/tree/master/examples/postgres"},"Postgres \u793a\u4f8b")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/tree/master/examples/rusqlite"},"Rusqlite \u793a\u4f8b")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/tree/master/examples/sqlx_any"},"SQLx \u4efb\u610f\u793a\u4f8b")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/tree/master/examples/sqlx_postgres"},"SQLx Postgres \u793a\u4f8b")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/tree/master/examples/sqlx_mysql"},"SQLx MySql \u793a\u4f8b")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-query/tree/master/examples/sqlx_sqlite"},"SQLx Sqlite \u793a\u4f8b"))),(0,r.yg)("h2",{id:"\u793e\u533a"},"\u793e\u533a"),(0,r.yg)("p",null,"SeaQL \u662f\u4e00\u4e2a\u793e\u533a\u9a71\u52a8\u7684\u9879\u76ee\u3002\u6211\u4eec\u6b22\u8fce\u60a8\u53c2\u4e0e\u3001\u8d21\u732e\u5e76\u5171\u540c\u4e3a Rust \u7684\u672a\u6765\u800c\u52aa\u529b\u3002"))}g.isMDXComponent=!0}}]);