"use strict";(self.webpackChunksea_ql_blog=self.webpackChunksea_ql_blog||[]).push([[3602],{5680:(e,a,t)=>{t.d(a,{xA:()=>p,yg:()=>y});var r=t(6540);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var m=r.createContext({}),i=function(e){var a=r.useContext(m),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},p=function(e){var a=i(e.components);return r.createElement(m.Provider,{value:a},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},c=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,s=e.originalType,m=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=i(t),c=n,y=u["".concat(m,".").concat(c)]||u[c]||g[c]||s;return t?r.createElement(y,l(l({ref:a},p),{},{components:t})):r.createElement(y,l({ref:a},p))}));function y(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var s=t.length,l=new Array(s);l[0]=c;var o={};for(var m in a)hasOwnProperty.call(a,m)&&(o[m]=a[m]);o.originalType=e,o[u]="string"==typeof e?e:n,l[1]=o;for(var i=2;i<s;i++)l[i]=t[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},6117:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>m,contentTitle:()=>l,default:()=>g,frontMatter:()=>s,metadata:()=>o,toc:()=>i});var r=t(8168),n=(t(6540),t(5680));const s={slug:"2023-04-03-intro-sea-streamer",title:"\u4ecb\u7ecd SeaStreamer \ud83c\udf0a",author:"Chris Tsang",author_title:"SeaQL \u56e2\u961f",author_url:"https://github.com/tyt2y3",author_image_url:"https://avatars.githubusercontent.com/u/1782664?v=4",image:"https://www.sea-ql.org/SeaStreamer/img/SeaStreamer%20banner.png",tags:["news"]},l=void 0,o={permalink:"/blog/2023-04-03-intro-sea-streamer",editUrl:"https://github.com/SeaQL/seaql.github.io/edit/master/Blog/blog/2023-04-03-intro-sea-streamer.md",source:"@site/blog/2023-04-03-intro-sea-streamer.md",title:"\u4ecb\u7ecd SeaStreamer \ud83c\udf0a",description:"\u6211\u4eec\u5f88\u9ad8\u5174\u4eca\u5929\u5411 Rust \u793e\u533a\u4ecb\u7ecd SeaStreamer\u3002SeaStreamer \u662f\u4e00\u4e2a\u6d41\u5904\u7406\u5de5\u5177\u5305\uff0c\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5728 Rust \u4e2d\u6784\u5efa\u6d41\u5904\u7406\u5668\u3002",date:"2023-04-03T00:00:00.000Z",formattedDate:"April 3, 2023",tags:[{label:"news",permalink:"/blog/tags/news"}],readingTime:7.01,hasTruncateMarker:!1,authors:[{name:"Chris Tsang",title:"SeaQL \u56e2\u961f",url:"https://github.com/tyt2y3",imageURL:"https://avatars.githubusercontent.com/u/1782664?v=4"}],frontMatter:{slug:"2023-04-03-intro-sea-streamer",title:"\u4ecb\u7ecd SeaStreamer \ud83c\udf0a",author:"Chris Tsang",author_title:"SeaQL \u56e2\u961f",author_url:"https://github.com/tyt2y3",author_image_url:"https://avatars.githubusercontent.com/u/1782664?v=4",image:"https://www.sea-ql.org/SeaStreamer/img/SeaStreamer%20banner.png",tags:["news"]},prevItem:{title:"\u5ba3\u5e03 SeaORM 0.12",permalink:"/blog/2023-08-12-announcing-seaorm-0.12"},nextItem:{title:"SeaORM 0.11.0 \u7684\u65b0\u529f\u80fd",permalink:"/blog/2023-02-08-whats-new-in-seaorm-0.11.0"}},m={authorsImageUrls:[void 0]},i=[{value:"\u9ad8\u7ea7\u5f02\u6b65 API",id:"\u9ad8\u7ea7\u5f02\u6b65-api",level:2},{value:"\u57fa\u4e8e\u7279\u5f81\u7684\u62bd\u8c61\u63a5\u53e3",id:"\u57fa\u4e8e\u7279\u5f81\u7684\u62bd\u8c61\u63a5\u53e3",level:2},{value:"Redis Streams \u652f\u6301",id:"redis-streams-\u652f\u6301",level:2},{value:"\u57fa\u4e8e\u679a\u4e3e\u7684\u901a\u7528\u63a5\u53e3",id:"\u57fa\u4e8e\u679a\u4e3e\u7684\u901a\u7528\u63a5\u53e3",level:2},{value:"\u7ecf\u5178\u7684 Unix \u7ba1\u9053",id:"\u7ecf\u5178\u7684-unix-\u7ba1\u9053",level:2},{value:"\u53ef\u6d4b\u8bd5",id:"\u53ef\u6d4b\u8bd5",level:2},{value:"\u5f00\u59cb\u4f7f\u7528",id:"\u5f00\u59cb\u4f7f\u7528",level:2},{value:"\u8def\u7ebf\u56fe",id:"\u8def\u7ebf\u56fe",level:2},{value:"\u4eba\u5458",id:"\u4eba\u5458",level:2},{value:"\u793e\u533a",id:"\u793e\u533a",level:2}],p={toc:i},u="wrapper";function g(e){let{components:a,...t}=e;return(0,n.yg)(u,(0,r.A)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,n.yg)("a",{href:"https://www.sea-ql.org/SeaStreamer/"},(0,n.yg)("img",{src:"https://www.sea-ql.org/SeaStreamer/img/SeaStreamer%20banner.png"})),(0,n.yg)("p",null,"\u6211\u4eec\u5f88\u9ad8\u5174\u4eca\u5929\u5411 Rust \u793e\u533a\u4ecb\u7ecd ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-streamer/"},"SeaStreamer"),"\u3002SeaStreamer \u662f\u4e00\u4e2a\u6d41\u5904\u7406\u5de5\u5177\u5305\uff0c\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5728 Rust \u4e2d\u6784\u5efa\u6d41\u5904\u7406\u5668\u3002"),(0,n.yg)("p",null,"\u5728 SeaQL\uff0c\u6211\u4eec\u5e0c\u671b\u8ba9 Rust \u6210\u4e3a\u6570\u636e\u5de5\u7a0b\u7684\u6700\u4f73\u7f16\u7a0b\u5e73\u53f0\u3002SeaORM \u662f\u5904\u7406 SQL \u6570\u636e\u5e93\u7684\u57fa\u672c\u5de5\u5177\uff0c\u800c SeaStreamer \u5219\u65e8\u5728\u6210\u4e3a\u5904\u7406\u6d41\u7684\u5fc5\u5907\u5de5\u5177\u5305\u3002"),(0,n.yg)("p",null,"\u76ee\u524d\uff0cSeaStreamer \u63d0\u4f9b\u4e0e Kafka \u548c Redis \u7684\u96c6\u6210\u3002"),(0,n.yg)("p",null,"\u8ba9\u6211\u4eec\u5feb\u901f\u4e86\u89e3\u4e00\u4e0b SeaStreamer\u3002"),(0,n.yg)("h2",{id:"\u9ad8\u7ea7\u5f02\u6b65-api"},"\u9ad8\u7ea7\u5f02\u6b65 API"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"\u9ad8\u7ea7\u5f02\u6b65 API\uff0c\u652f\u6301 ",(0,n.yg)("inlineCode",{parentName:"li"},"async-std")," \u548c ",(0,n.yg)("inlineCode",{parentName:"li"},"tokio")),(0,n.yg)("li",{parentName:"ul"},"\u65e0\u4e92\u65a5\u9501\u5b9e\u73b0",(0,n.yg)("sup",{parentName:"li",id:"fnref-1-b523e8"},(0,n.yg)("a",{parentName:"sup",href:"#fn-1-b523e8",className:"footnote-ref"},"1")),"\uff1a\u901a\u8fc7\u6d88\u606f\u4f20\u9012\u5b9e\u73b0\u5e76\u53d1"),(0,n.yg)("li",{parentName:"ul"},"\u8be6\u5c3d\u7684\u7c7b\u578b\u7cfb\u7edf\uff0c\u901a\u8fc7 API \u6307\u5bfc/\u9650\u5236\u4f60")),(0,n.yg)("p",null,"\u4ee5\u4e0b\u662f\u4e00\u4e2a ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-streamer/blob/main/sea-streamer-kafka/src/bin/consumer.rs"},"\u57fa\u672c\u7684 Kafka \u6d88\u8d39\u8005")," \u793a\u4f8b\uff1a"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-rust"},'#[tokio::main]\nasync fn main() -> Result<()> {\n    env_logger::init();\n\n    let stream: StreamUrl = "kafka://streamer.sea-ql.org:9092/my_stream".parse()?;\n    let streamer = KafkaStreamer::connect(stream.streamer(), Default::default()).await?;\n    let mut options = KafkaConsumerOptions::new(ConsumerMode::RealTime);\n    options.set_auto_offset_reset(AutoOffsetReset::Earliest);\n    let consumer = streamer\n        .create_consumer(stream.stream_keys(), options)\n        .await?;\n\n    loop {\n        let mess = consumer.next().await?;\n        println!("{}", mess.message().as_str()?);\n    }\n}\n')),(0,n.yg)("p",null,(0,n.yg)("a",{parentName:"p",href:"https://docs.rs/sea-streamer/latest/sea_streamer/trait.Consumer.html#tymethod.stream"},(0,n.yg)("inlineCode",{parentName:"a"},"Consumer::stream()"))," \u8fd4\u56de\u4e00\u4e2a\u5b9e\u73b0\u4e86 ",(0,n.yg)("a",{parentName:"p",href:"https://docs.rs/futures-core/latest/futures_core/stream/trait.Stream.html"},(0,n.yg)("inlineCode",{parentName:"a"},"Stream"))," \u7279\u5f81\u7684\u5bf9\u8c61\uff0c\u8fd9\u5141\u8bb8\u4f60\u505a\u4e00\u4e9b\u6709\u8da3\u7684\u4e8b\u60c5\uff1a"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-rust"},"let items = consumer\n    .stream()\n    .take(num)\n    .map(process_message)\n    .collect::<Vec<_>>()\n    .await\n")),(0,n.yg)("h2",{id:"\u57fa\u4e8e\u7279\u5f81\u7684\u62bd\u8c61\u63a5\u53e3"},"\u57fa\u4e8e\u7279\u5f81\u7684\u62bd\u8c61\u63a5\u53e3"),(0,n.yg)("p",null,"\u6240\u6709 SeaStreamer \u540e\u7aef\u5b9e\u73b0\u4e86\u4e00\u4e2a\u901a\u7528\u7684\u62bd\u8c61\u63a5\u53e3\uff0c\u4e3a\u4f60\u63d0\u4f9b\u719f\u6089\u7684 API\u3002\u4e0b\u9762\u662f\u4e00\u4e2a ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-streamer/blob/main/sea-streamer-redis/src/bin/consumer.rs"},"\u57fa\u672c\u7684 Redis \u6d88\u8d39\u8005"),"\uff0c\u51e0\u4e4e\u4e0e\u4e4b\u524d\u7684\u793a\u4f8b\u76f8\u540c\uff1a"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-rust"},'#[tokio::main]\nasync fn main() -> Result<()> {\n    env_logger::init();\n\n    let stream: StreamUrl = "redis://localhost:6379/my_stream".parse()?;\n    let streamer = RedisStreamer::connect(stream.streamer(), Default::default()).await?;\n    let mut options = RedisConsumerOptions::new(ConsumerMode::RealTime);\n    options.set_auto_stream_reset(AutoStreamReset::Earliest);\n    let consumer = streamer\n        .create_consumer(stream.stream_keys(), options)\n        .await?;\n\n    loop {\n        let mess = consumer.next().await?;\n        println!("{}", mess.message().as_str()?);\n    }\n}\n')),(0,n.yg)("h2",{id:"redis-streams-\u652f\u6301"},"Redis Streams \u652f\u6301"),(0,n.yg)("p",null,"SeaStreamer Redis \u63d0\u4f9b\u7c7b\u4f3c Kafka \u7684\u6d41\u8bed\u4e49\uff1a"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"\u975e\u7ec4\u6d41\uff0c\u914d\u6709 AutoStreamReset \u9009\u9879"),(0,n.yg)("li",{parentName:"ul"},"\u57fa\u4e8e\u6d88\u8d39\u8005\u7ec4\u7684\u6d41\uff0c\u914d\u6709\u81ea\u52a8\u786e\u8ba4\u548c/\u6216\u81ea\u52a8\u63d0\u4ea4"),(0,n.yg)("li",{parentName:"ul"},"\u6d88\u8d39\u8005\u4e4b\u95f4\u7684\u8d1f\u8f7d\u5747\u8861\uff0c\u5177\u5907\u81ea\u52a8\u6545\u969c\u8f6c\u79fb"),(0,n.yg)("li",{parentName:"ul"},"\u5230\u65f6\u95f4\u70b9\u7684\u968f\u673a\u8bbf\u95ee/\u56de\u6eaf")),(0,n.yg)("p",null,"\u4f60\u4e0d\u518d\u9700\u8981\u8c03\u7528 ",(0,n.yg)("inlineCode",{parentName:"p"},"XADD"),"\u3001",(0,n.yg)("inlineCode",{parentName:"p"},"XREAD"),"\u3001",(0,n.yg)("inlineCode",{parentName:"p"},"XACK")," \u7b49\u7b49\uff01"),(0,n.yg)("h2",{id:"\u57fa\u4e8e\u679a\u4e3e\u7684\u901a\u7528\u63a5\u53e3"},"\u57fa\u4e8e\u679a\u4e3e\u7684\u901a\u7528\u63a5\u53e3"),(0,n.yg)("p",null,"\u57fa\u4e8e\u7279\u5f81\u7684 API \u9700\u8981\u4f60\u6307\u5b9a\u5177\u4f53\u7684 ",(0,n.yg)("inlineCode",{parentName:"p"},"Streamer")," \u7c7b\u578b\u8fdb\u884c\u5355\u6001\u5316\uff0c\u5426\u5219\u4ee3\u7801\u65e0\u6cd5\u7f16\u8bd1\u3002"),(0,n.yg)("p",null,"\u7c7b\u4f3c\u4e8e SeaORM \u5b9e\u73b0\u7684\u8fd0\u884c\u65f6\u591a\u6001\uff0cSeaStreamer \u63d0\u4f9b\u57fa\u4e8e\u679a\u4e3e\u7684\u901a\u7528\u6d41\u5904\u7406\u5668\uff0c\u5728\u6b64\u540e\u7aef\u5c06\u5728 ",(0,n.yg)("strong",{parentName:"p"},(0,n.yg)("em",{parentName:"strong"},"\u8fd0\u884c\u65f6"))," \u9009\u62e9\u3002"),(0,n.yg)("p",null,"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b (",(0,n.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-streamer/blob/main/examples/src/bin/resumable.rs"},"\u5b8c\u6574\u793a\u4f8b"),")\uff1a"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-rust"},'// sea-streamer-socket\npub struct SeaConsumer {\n    backend: SeaConsumerBackend,\n}\n\nenum SeaConsumerBackend {\n    #[cfg(feature = "backend-kafka")]\n    Kafka(KafkaConsumer),\n    #[cfg(feature = "backend-redis")]\n    Redis(RedisConsumer),\n    #[cfg(feature = "backend-stdio")]\n    Stdio(StdioConsumer),\n}\n\n// \u4f60\u7684\u4ee3\u7801\nlet uri: StreamerUri = "kafka://localhost:9092".parse()?; // \u6216\nlet uri: StreamerUri = "redis://localhost:6379".parse()?; // \u6216\nlet uri: StreamerUri = "stdio://".parse()?;\n\n// SeaStreamer \u5c06\u6839\u636e URI \u652f\u6301 Kafka\u3001Redis \u6216 Stdio\nlet streamer = SeaStreamer::connect(uri, Default::default()).await?;\n\n// \u8bbe\u7f6e\u540e\u7aef\u7279\u5b9a\u7684\u9009\u9879\nlet mut options = SeaConsumerOptions::new(ConsumerMode::Resumable);\noptions.set_kafka_consumer_options(|options: &mut KafkaConsumerOptions| { .. });\noptions.set_redis_consumer_options(|options: &mut RedisConsumerOptions| { .. });\nlet mut consumer: SeaConsumer = streamer.create_consumer(stream_keys, options).await?;\n\n// \u4f60\u4ecd\u7136\u53ef\u4ee5\u68c0\u7d22\u5177\u4f53\u7c7b\u578b\nlet kafka: Option<&mut KafkaConsumer> = consumer.get_kafka();\nlet redis: Option<&mut RedisConsumer> = consumer.get_redis();\n')),(0,n.yg)("p",null,"\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u201c\u4e00\u6b21\u7f16\u5199\uff0c\u5230\u5904\u6d41\u201d\uff01"),(0,n.yg)("h2",{id:"\u7ecf\u5178\u7684-unix-\u7ba1\u9053"},"\u7ecf\u5178\u7684 Unix \u7ba1\u9053"),(0,n.yg)("p",null,"\u5728 SeaStreamer \u4e2d\uff0c",(0,n.yg)("inlineCode",{parentName:"p"},"stdin")," \u548c ",(0,n.yg)("inlineCode",{parentName:"p"},"stdout")," \u53ef\u4ee5\u4f5c\u4e3a\u6d41\u6e90\u548c\u6d41\u53bb\u3002"),(0,n.yg)("p",null,"\u5047\u8bbe\u4f60\u6b63\u5728\u5f00\u53d1\u4e00\u4e9b\u591a\u4e2a\u9636\u6bb5\u7684\u5904\u7406\u5668\u6765\u8f6c\u6362\u4e00\u4e2a\u6d41\uff1a"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-shell"},"./processor_1 --input kafka://localhost:9092/input --output kafka://localhost:9092/stage_1 &\n./processor_2 --input kafka://localhost:9092/stage_1 --output kafka://localhost:9092/stage_2 &\n./processor_3 --input kafka://localhost:9092/stage_2 --output kafka://localhost:9092/output &\n")),(0,n.yg)("p",null,"\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730 ",(0,n.yg)("strong",{parentName:"p"},(0,n.yg)("em",{parentName:"strong"},"\u7ba1\u9053"))," \u8fde\u63a5\u5904\u7406\u5668\uff0c\u90a3\u5c31\u592a\u597d\u4e86\uff0c\u5bf9\u5427\uff1f"),(0,n.yg)("p",null,"\u4f7f\u7528 SeaStreamer\uff0c\u4f60\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-shell"},"./processor_1 --input kafka://localhost:9092/input --output stdio:///stream |\n./processor_2 --input stdio:///stream --output stdio:///stream |\n./processor_3 --input stdio:///stream --output kafka://localhost:9092/output\n")),(0,n.yg)("p",null,"\u6240\u6709\u8fd9\u4e00\u5207 ",(0,n.yg)("strong",{parentName:"p"},(0,n.yg)("em",{parentName:"strong"},"\u65e0\u9700\u91cd\u65b0\u7f16\u8bd1"))," \u6d41\u5904\u7406\u5668\uff01\u73b0\u5728\uff0c\u4f60\u53ef\u4ee5\u65b9\u4fbf\u5730\u4f7f\u7528 ",(0,n.yg)("inlineCode",{parentName:"p"},"|"),"\u3001",(0,n.yg)("inlineCode",{parentName:"p"},">"),"\u3001",(0,n.yg)("inlineCode",{parentName:"p"},"<")," \u548c\u4f60\u559c\u7231\u7684 Unix \u7a0b\u5e8f\u5728 shell \u4e2d\u8fdb\u884c\u672c\u5730\u5f00\u53d1\u3002"),(0,n.yg)("h2",{id:"\u53ef\u6d4b\u8bd5"},"\u53ef\u6d4b\u8bd5"),(0,n.yg)("p",null,"SeaStreamer \u9f13\u52b1\u4f60\u5728\u5404\u4e2a\u5c42\u9762\u7f16\u5199\u6d4b\u8bd5\uff1a"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"\u4f60\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a ",(0,n.yg)("em",{parentName:"li"},"\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u7a0b")," \u4e2d\u6267\u884c\u6d89\u53ca\u591a\u4e2a ",(0,n.yg)("em",{parentName:"li"},"\u6d41\u5904\u7406\u5668")," \u7684\u6d4b\u8bd5"),(0,n.yg)("li",{parentName:"ul"},"\u4f60\u53ef\u4ee5\u901a\u8fc7\u7ba1\u9053\u8fde\u63a5\u6267\u884c\u6d89\u53ca\u591a\u4e2a ",(0,n.yg)("em",{parentName:"li"},"\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u7a0b")," \u7684\u6d4b\u8bd5"),(0,n.yg)("li",{parentName:"ul"},"\u4f60\u53ef\u4ee5\u6267\u884c\u6d89\u53ca\u591a\u4e2a ",(0,n.yg)("em",{parentName:"li"},"\u6d41\u5904\u7406\u5668")," \u4e0e Redis / Kafka \u7684\u6d4b\u8bd5")),(0,n.yg)("p",null,"\u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u57fa\u4e8e\u540c\u4e00\u6bb5\u4ee3\u7801\uff01\u8ba9 SeaStreamer \u5e2e\u4f60\u6d88\u9664\u4ee3\u7801\u4e2d\u7684\u6837\u677f\u548c\u6a21\u62df\u5de5\u4f5c\u3002"),(0,n.yg)("p",null,"\u4ee5\u4e0b\u662f\u4e00\u4e2a ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-streamer/blob/main/sea-streamer-stdio/tests/loopback.rs"},"\u8fdb\u7a0b\u5185\u90e8\u6d4b\u8bd5")," \u7684\u793a\u4f8b\uff0c\u53ef\u4ee5\u901a\u8fc7 ",(0,n.yg)("inlineCode",{parentName:"p"},"cargo test")," \u8fd0\u884c\uff0c\u65e0\u9700\u4efb\u4f55\u4f9d\u8d56\u6216\u526f\u4f5c\u7528\uff1a"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-rust"},'let stream = StreamKey::new("test")?;\nlet mut options = StdioConnectOptions::default();\noptions.set_loopback(true); // \u4ea7\u751f\u7684\u6d88\u606f\u5c06\u53cd\u9988\u7ed9\u6d88\u8d39\u8005\nlet streamer = StdioStreamer::connect(StreamerUri::zero(), options).await?;\nlet producer = streamer.create_producer(stream.clone(), Default::default()).await?;\nlet mut consumer = streamer.create_consumer(&[stream.clone()], Default::default()).await?;\n\nfor i in 0..5 {\n    let mess = format!("{}", i);\n    producer.send(mess)?;\n}\n\nlet seq = collect(&mut consumer, 5).await;\nassert_eq!(seq, [0, 1, 2, 3, 4]);\n')),(0,n.yg)("h2",{id:"\u5f00\u59cb\u4f7f\u7528"},"\u5f00\u59cb\u4f7f\u7528"),(0,n.yg)("p",null,"\u5982\u679c\u4f60\u8feb\u4e0d\u53ca\u5f85\u60f3\u5f00\u59cb\u4f7f\u7528 SeaStreamer\uff0c\u53ef\u4ee5\u67e5\u770b\u6211\u4eec\u7684 ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-streamer/tree/main/examples"},"\u793a\u4f8b\u96c6\u5408"),"\uff1a"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-streamer/blob/main/examples/src/bin/consumer.rs"},(0,n.yg)("inlineCode",{parentName:"a"},"consumer")),": \u4e00\u4e2a\u57fa\u672c\u7684\u6d88\u8d39\u8005"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-streamer/blob/main/examples/src/bin/producer.rs"},(0,n.yg)("inlineCode",{parentName:"a"},"producer")),": \u4e00\u4e2a\u57fa\u672c\u7684\u751f\u4ea7\u8005"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-streamer/blob/main/examples/src/bin/processor.rs"},(0,n.yg)("inlineCode",{parentName:"a"},"processor")),": \u4e00\u4e2a\u57fa\u672c\u7684\u6d41\u5904\u7406\u5668"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-streamer/blob/main/examples/src/bin/resumable.rs"},(0,n.yg)("inlineCode",{parentName:"a"},"resumable")),": \u4e00\u4e2a\u53ef\u6062\u590d\u7684\u6d41\u5904\u7406\u5668\uff0c\u53ef\u4ee5\u4ece\u4e0a\u6b21\u4e2d\u65ad\u7684\u4f4d\u7f6e\u7ee7\u7eed"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-streamer/blob/main/examples/src/bin/buffered.rs"},(0,n.yg)("inlineCode",{parentName:"a"},"buffered")),": \u4e00\u4e2a\u5177\u5907\u5185\u90e8\u7f13\u51b2\u548c\u6279\u5904\u7406\u7684\u9ad8\u7ea7\u6d41\u5904\u7406\u5668"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/SeaQL/sea-streamer/blob/main/examples/src/bin/blocking.rs"},(0,n.yg)("inlineCode",{parentName:"a"},"blocking")),": \u4e00\u4e2a\u7528\u4e8e\u5904\u7406\u963b\u585e/CPU \u5bc6\u96c6\u578b\u4efb\u52a1\u7684\u9ad8\u7ea7\u6d41\u5904\u7406\u5668")),(0,n.yg)("p",null,"\u9605\u8bfb\u5b98\u65b9 ",(0,n.yg)("a",{parentName:"p",href:"https://www.sea-ql.org/SeaStreamer/docs/index/"},"\u6587\u6863")," \u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002"),(0,n.yg)("h2",{id:"\u8def\u7ebf\u56fe"},"\u8def\u7ebf\u56fe"),(0,n.yg)("p",null,"\u6211\u4eec ",(0,n.yg)("a",{parentName:"p",href:"https://www.sea-ql.org/SeaStreamer/docs/whats-next/roadmap/"},"\u8ba1\u5212\u5f00\u53d1")," \u7684\u4e00\u4e9b\u4e3b\u8981\u7ec4\u4ef6\uff1a"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"\u6587\u4ef6\u540e\u7aef"),(0,n.yg)("li",{parentName:"ul"},"Redis \u96c6\u7fa4")),(0,n.yg)("p",null,"\u5982\u679c\u4f60\u6709\u60f3\u6cd5\u6216\u5efa\u8bae\uff0c\u6b22\u8fce\u52a0\u5165\u6211\u4eec\u7684 ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-streamer/discussions"},"\u8ba8\u8bba"),"\uff01"),(0,n.yg)("h2",{id:"\u4eba\u5458"},"\u4eba\u5458"),(0,n.yg)("p",null,"SeaStreamer \u662f\u7531\u540c\u6837\u4e3a\u4f60\u5e26\u6765 ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-orm/"},"SeaORM")," \u7684\u5f00\u53d1\u8005\u8bbe\u8ba1\u548c\u5f00\u53d1\u7684\uff1a"),(0,n.yg)("div",{class:"container"},(0,n.yg)("div",{class:"row"},(0,n.yg)("div",{class:"col col--12 margin-bottom--md"},(0,n.yg)("div",{class:"avatar"},(0,n.yg)("a",{class:"avatar__photo-link avatar__photo avatar__photo--sm",href:"https://github.com/tyt2y3"},(0,n.yg)("img",{src:"https://avatars.githubusercontent.com/u/1782664?v=4"})),(0,n.yg)("div",{class:"avatar__intro"},(0,n.yg)("div",{class:"avatar__name"},"Chris Tsang")))))),(0,n.yg)("h2",{id:"\u793e\u533a"},"\u793e\u533a"),(0,n.yg)("p",null,"SeaQL.org \u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u5f00\u6e90\u7ec4\u7ec7\uff0c\u7531\u70ed\u60c5\u7684\u5f00\u53d1\u8005\u7ba1\u7406\u3002\u5982\u679c\u4f60\u559c\u6b22\u6211\u4eec\u7684\u9879\u76ee\uff0c\u8bf7\u7ed9\u6211\u4eec\u7684\u4ed3\u5e93\u52a0\u661f \u2b50 \u5e76\u5206\u4eab\u3002\u5982\u679c\u4f60\u613f\u610f\uff0c\u901a\u8fc7 ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/sponsors/SeaQL"},"GitHub Sponsor")," \u8fdb\u884c\u5c0f\u989d\u6350\u8d60\u5c06\u4e0d\u80dc\u611f\u6fc0\uff0c\u8fd9\u5c06\u6709\u52a9\u4e8e\u652f\u6301\u7ec4\u7ec7\u7684\u53d1\u5c55 \ud83d\udea2\u3002"),(0,n.yg)("p",null,"SeaStreamer \u662f\u4e00\u4e2a\u793e\u533a\u9a71\u52a8\u7684\u9879\u76ee\u3002\u6b22\u8fce\u4f60\u53c2\u4e0e\u3001\u8d21\u732e\uff0c\u5171\u540c\u4e3a Rust \u7684\u672a\u6765\u800c\u52aa\u529b \ud83e\udd80\u3002"),(0,n.yg)("div",{className:"footnotes"},(0,n.yg)("hr",{parentName:"div"}),(0,n.yg)("ol",{parentName:"div"},(0,n.yg)("li",{parentName:"ol",id:"fn-1-b523e8"},"\u9664\u4e86 ",(0,n.yg)("inlineCode",{parentName:"li"},"sea-streamer-stdio"),"\uff0c\u4f46\u53ea\u6d89\u53ca\u6d88\u8d39\u8005\u7684\u6dfb\u52a0/\u79fb\u9664",(0,n.yg)("a",{parentName:"li",href:"#fnref-1-b523e8",className:"footnote-backref"},"\u21a9")))))}g.isMDXComponent=!0}}]);