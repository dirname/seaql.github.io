"use strict";(self.webpackChunksea_ql_blog=self.webpackChunksea_ql_blog||[]).push([[283],{5680:(e,t,n)=>{n.d(t,{xA:()=>s,yg:()=>y});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=u(n),m=a,y=c["".concat(p,".").concat(m)]||c[m]||g[m]||l;return n?r.createElement(y,o(o({ref:t},s),{},{components:n})):r.createElement(y,o({ref:t},s))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7424:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>g,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var r=n(8168),a=(n(6540),n(5680));const l={slug:"2023-02-05-faq-02",title:"SeaORM FAQ.02",author:"Chris Tsang",author_title:"SeaQL Team",author_url:"https://github.com/tyt2y3",author_image_url:"https://avatars.githubusercontent.com/u/1782664?v=4",tags:["news"]},o=void 0,i={permalink:"/blog/2023-02-05-faq-02",editUrl:"https://github.com/SeaQL/seaql.github.io/edit/master/Blog/blog/2023-02-05-faq-02.md",source:"@site/blog/2023-02-05-faq-02.md",title:"SeaORM FAQ.02",description:"FAQ.02 \u4e3a\u4ec0\u4e48\u5373\u4f7f\u4e00\u4e2a Entity \u6ca1\u6709\u5173\u8054\uff0c\u7a7a\u7684\u679a\u4e3e Relation {} \u4e5f\u662f\u5fc5\u9700\u7684\uff1f",date:"2023-02-05T00:00:00.000Z",formattedDate:"February 5, 2023",tags:[{label:"news",permalink:"/blog/tags/news"}],readingTime:1.615,hasTruncateMarker:!1,authors:[{name:"Chris Tsang",title:"SeaQL Team",url:"https://github.com/tyt2y3",imageURL:"https://avatars.githubusercontent.com/u/1782664?v=4"}],frontMatter:{slug:"2023-02-05-faq-02",title:"SeaORM FAQ.02",author:"Chris Tsang",author_title:"SeaQL Team",author_url:"https://github.com/tyt2y3",author_image_url:"https://avatars.githubusercontent.com/u/1782664?v=4",tags:["news"]},prevItem:{title:"SeaORM 0.11.0 \u7684\u65b0\u529f\u80fd",permalink:"/blog/2023-02-08-whats-new-in-seaorm-0.11.0"},nextItem:{title:"\u5b9e\u4e60 @ SeaQL",permalink:"/blog/2023-01-28-internship-at-seaql"}},p={authorsImageUrls:[void 0]},u=[{value:"FAQ.02 \u4e3a\u4ec0\u4e48\u5373\u4f7f\u4e00\u4e2a Entity \u6ca1\u6709\u5173\u8054\uff0c\u7a7a\u7684\u679a\u4e3e <code>Relation {}</code> \u4e5f\u662f\u5fc5\u9700\u7684\uff1f",id:"faq02-\u4e3a\u4ec0\u4e48\u5373\u4f7f\u4e00\u4e2a-entity-\u6ca1\u6709\u5173\u8054\u7a7a\u7684\u679a\u4e3e-relation--\u4e5f\u662f\u5fc5\u9700\u7684",level:2}],s={toc:u},c="wrapper";function g(e){let{components:t,...n}=e;return(0,a.yg)(c,(0,r.A)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"faq02-\u4e3a\u4ec0\u4e48\u5373\u4f7f\u4e00\u4e2a-entity-\u6ca1\u6709\u5173\u8054\u7a7a\u7684\u679a\u4e3e-relation--\u4e5f\u662f\u5fc5\u9700\u7684"},"FAQ.02 \u4e3a\u4ec0\u4e48\u5373\u4f7f\u4e00\u4e2a Entity \u6ca1\u6709\u5173\u8054\uff0c\u7a7a\u7684\u679a\u4e3e ",(0,a.yg)("inlineCode",{parentName:"h2"},"Relation {}")," \u4e5f\u662f\u5fc5\u9700\u7684\uff1f"),(0,a.yg)("p",null,"\u8003\u8651\u4ee5\u4e0b\u793a\u4f8b ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-orm/blob/master/examples/actix_example/entity/src/post.rs"},"Post")," \u5b9e\u4f53\uff1a"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},'use sea_orm::entity::prelude::*;\n\n#[derive(Clone, Debug, PartialEq, Eq, DeriveEntityModel)]\n#[sea_orm(table_name = "posts")]\npub struct Model {\n    #[sea_orm(primary_key)]\n    pub id: i32,\n    pub title: String,\n    pub text: String,\n}\n\n#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]\npub enum Relation {}\n\nimpl ActiveModelBehavior for ActiveModel {}\n')),(0,a.yg)("p",null,"\u5b9a\u4e49 ",(0,a.yg)("inlineCode",{parentName:"p"},"Relation")," \u7684\u4e24\u884c\u4ee3\u7801\u4f3c\u4e4e\u76f8\u5f53\u591a\u4f59\uff0c\u5bf9\u5427\uff1f"),(0,a.yg)("p",null,"\u4e3a\u4e86\u8bf4\u660e\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u7a0d\u5fae\u6df1\u5165\u4e00\u4e0b\u5b8f\u6269\u5c55\u7684\u5b9e\u4f53\uff1a"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"DeriveRelation")," \u5b8f\u7b80\u5355\u5730\u5b9e\u73b0\u4e86 ",(0,a.yg)("inlineCode",{parentName:"p"},"RelationTrait"),"\uff1a"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},"impl RelationTrait for Relation {\n    fn def(&self) -> RelationDef {\n        match self {\n            _ => unreachable!()\n        }\n    }\n}\n")),(0,a.yg)("p",null,"\u8fd9\u53c8\u662f ",(0,a.yg)("inlineCode",{parentName:"p"},"EntityTrait")," \u4f5c\u4e3a\u5173\u8054\u7c7b\u578b\u6240\u9700\u7684\uff1a"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},"impl EntityTrait for Entity {\n    type Relation = Relation;\n    ...\n}\n")),(0,a.yg)("p",null,"\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u7528\u6237\u6ca1\u6709\u6307\u5b9a\u8fd9\u4e2a\u5173\u8054\u7c7b\u578b\uff0c\u5e93\u4f1a\u81ea\u52a8\u586b\u5145\u4e00\u4e2a\u5360\u4f4d\u7b26\u4ee5\u6ee1\u8db3\u7c7b\u578b\u7cfb\u7edf\uff1f"),(0,a.yg)("p",null,"\u4e8b\u5b9e\u8bc1\u660e\uff0cRust \u4e2d\u786e\u5b9e\u6709\u8fd9\u6837\u7684\u529f\u80fd\uff01\u8fd9\u662f\u4e00\u4e2a\u4e0d\u7a33\u5b9a\u7279\u6027\uff0c\u79f0\u4e3a ",(0,a.yg)("a",{parentName:"p",href:"https://rust-lang.github.io/rfcs/2532-associated-type-defaults.html"},(0,a.yg)("inlineCode",{parentName:"a"},"associated_type_defaults")),"\u3002"),(0,a.yg)("p",null,"\u57fa\u672c\u4e0a\uff0c\u5b83\u5141\u8bb8trait\u5b9a\u4e49\u6307\u5b9a\u9ed8\u8ba4\u5173\u8054\u7c7b\u578b\uff0c\u4ece\u800c\u53ef\u4ee5\u7701\u7565\uff1a"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},"// \u4ec5\u5728 nightly \u4e2d\u7f16\u8bd1\ntrait EntityTrait {\n    type Relation: Relation = EmptyRelation;\n}\n")),(0,a.yg)("p",null,"\u7531\u4e8e\u6211\u4eec\u5bf9\u7a33\u5b9a Rust \u7684\u627f\u8bfa\uff0c\u8fd9\u4e2a\u7279\u6027\u53ef\u80fd\u4e0d\u4f1a\u5f88\u5feb\u5728 SeaORM \u4e2d\u5b9e\u73b0\u3002\u5f53\u5b83\u7a33\u5b9a\u540e\uff0c\u8bf7\u63d0\u9192\u6211\u4eec\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u4ee5\u53bb\u6389\u90a3\u4e24\u884c\u4ee3\u7801\uff01"))}g.isMDXComponent=!0}}]);