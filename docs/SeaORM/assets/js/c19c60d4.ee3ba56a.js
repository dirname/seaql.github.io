"use strict";(self.webpackChunksea_orm=self.webpackChunksea_orm||[]).push([[24085],{15680:(e,n,r)=>{r.d(n,{xA:()=>d,yg:()=>m});var t=r(96540);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=t.createContext({}),s=function(e){var n=t.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},d=function(e){var n=s(e.components);return t.createElement(u.Provider,{value:n},e.children)},l="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},y=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),l=s(r),y=a,m=l["".concat(u,".").concat(y)]||l[y]||p[y]||o;return r?t.createElement(m,i(i({ref:n},d),{},{components:r})):t.createElement(m,i({ref:n},d))}));function m(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=y;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c[l]="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=r[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}y.displayName="MDXCreateElement"},53293:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var t=r(58168),a=(r(96540),r(15680));const o={},i="\u5b50\u67e5\u8be2",c={unversionedId:"advanced-query/subquery",id:"version-0.4.x/advanced-query/subquery",title:"\u5b50\u67e5\u8be2",description:"\u4f7f\u7528\u5b50\u67e5\u8be2\u7684\u6761\u4ef6\u8868\u8fbe\u5f0f",source:"@site/versioned_docs/version-0.4.x/08-advanced-query/05-subquery.md",sourceDirName:"08-advanced-query",slug:"/advanced-query/subquery",permalink:"/SeaORM/docs/0.4.x/advanced-query/subquery",draft:!1,editUrl:"https://github.com/SeaQL/seaql.github.io/edit/master/SeaORM/versioned_docs/version-0.4.x/08-advanced-query/05-subquery.md",tags:[],version:"0.4.x",lastUpdatedBy:"Billy Chan",lastUpdatedAt:1640968085,formattedLastUpdatedAt:"Dec 31, 2021",sidebarPosition:5,frontMatter:{},sidebar:"version-0.4.x/tutorialSidebar",previous:{title:"\u81ea\u5b9a\u4e49\u8fde\u63a5",permalink:"/SeaORM/docs/0.4.x/advanced-query/custom-joins"},next:{title:"\u4e8b\u52a1",permalink:"/SeaORM/docs/0.4.x/advanced-query/transaction"}},u={},s=[{value:"\u4f7f\u7528\u5b50\u67e5\u8be2\u7684\u6761\u4ef6\u8868\u8fbe\u5f0f",id:"\u4f7f\u7528\u5b50\u67e5\u8be2\u7684\u6761\u4ef6\u8868\u8fbe\u5f0f",level:2}],d={toc:s},l="wrapper";function p(e){let{components:n,...r}=e;return(0,a.yg)(l,(0,t.A)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"\u5b50\u67e5\u8be2"},"\u5b50\u67e5\u8be2"),(0,a.yg)("h2",{id:"\u4f7f\u7528\u5b50\u67e5\u8be2\u7684\u6761\u4ef6\u8868\u8fbe\u5f0f"},"\u4f7f\u7528\u5b50\u67e5\u8be2\u7684\u6761\u4ef6\u8868\u8fbe\u5f0f"),(0,a.yg)("p",null,"\u4f7f\u7528 ",(0,a.yg)("inlineCode",{parentName:"p"},"in_subquery")," \u6216 ",(0,a.yg)("inlineCode",{parentName:"p"},"not_in_subquery")," \u65b9\u6cd5\u6784\u5efa\u5e26\u6709\u5b50\u67e5\u8be2\u7684\u6761\u4ef6\u8868\u8fbe\u5f0f\u3002"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},'use sea_orm::Condition;\nuse sea_query::Query;\n\nassert_eq!(\n    cake::Entity::find()\n        .filter(\n            Condition::any().add(\n                cake::Column::Id.in_subquery(\n                    Query::select()\n                        .expr(cake::Column::Id.max()) // \u9009\u62e9 cake \u8868\u4e2d\u7684\u6700\u5927 id\n                        .from(cake::Entity)\n                        .to_owned()\n                )\n            )\n        )\n        .build(DbBackend::MySql)\n        .to_string(),\n    [\n        "SELECT `cake`.`id`, `cake`.`name` FROM `cake`",\n        "WHERE `cake`.`id` IN (SELECT MAX(`cake`.`id`) FROM `cake`)",\n    ]\n    .join(" ")\n);\n')))}p.isMDXComponent=!0}}]);