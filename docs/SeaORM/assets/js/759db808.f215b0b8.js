"use strict";(self.webpackChunksea_orm=self.webpackChunksea_orm||[]).push([[22378],{15680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>y});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,y=d["".concat(c,".").concat(m)]||d[m]||p[m]||l;return n?r.createElement(y,i(i({ref:t},u),{},{components:n})):r.createElement(y,i({ref:t},u))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[d]="string"==typeof e?e:a,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},17333:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=n(58168),a=(n(96540),n(15680));const l={},i="\u63d2\u5165",o={unversionedId:"basic-crud/insert",id:"version-0.5.x/basic-crud/insert",title:"\u63d2\u5165",description:"\u5728\u6df1\u5165 SeaORM \u7684\u63d2\u5165\u64cd\u4f5c\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4ecb\u7ecd ActiveValue \u548c ActiveModel\u3002",source:"@site/versioned_docs/version-0.5.x/05-basic-crud/02-insert.md",sourceDirName:"05-basic-crud",slug:"/basic-crud/insert",permalink:"/SeaORM/docs/0.5.x/basic-crud/insert",draft:!1,editUrl:"https://github.com/SeaQL/seaql.github.io/edit/master/SeaORM/versioned_docs/version-0.5.x/05-basic-crud/02-insert.md",tags:[],version:"0.5.x",lastUpdatedBy:"Chris Tsang",lastUpdatedAt:1640968558,formattedLastUpdatedAt:"Dec 31, 2021",sidebarPosition:2,frontMatter:{},sidebar:"version-0.5.x/tutorialSidebar",previous:{title:"\u9009\u62e9",permalink:"/SeaORM/docs/0.5.x/basic-crud/select"},next:{title:"\u66f4\u65b0",permalink:"/SeaORM/docs/0.5.x/basic-crud/update"}},c={},s=[{value:"ActiveValue",id:"activevalue",level:2},{value:"\u6a21\u578b\u4e0e ActiveModel",id:"\u6a21\u578b\u4e0e-activemodel",level:2},{value:"\u63d2\u5165\u4e00\u4e2a",id:"\u63d2\u5165\u4e00\u4e2a",level:2},{value:"\u63d2\u5165\u591a\u4e2a",id:"\u63d2\u5165\u591a\u4e2a",level:2}],u={toc:s},d="wrapper";function p(e){let{components:t,...n}=e;return(0,a.yg)(d,(0,r.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"\u63d2\u5165"},"\u63d2\u5165"),(0,a.yg)("p",null,"\u5728\u6df1\u5165 SeaORM \u7684\u63d2\u5165\u64cd\u4f5c\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4ecb\u7ecd ",(0,a.yg)("inlineCode",{parentName:"p"},"ActiveValue")," \u548c ",(0,a.yg)("inlineCode",{parentName:"p"},"ActiveModel"),"\u3002"),(0,a.yg)("h2",{id:"activevalue"},"ActiveValue"),(0,a.yg)("p",null,"\u4e00\u4e2a\u7528\u4e8e\u6355\u83b7\u5bf9 ",(0,a.yg)("inlineCode",{parentName:"p"},"ActiveModel")," \u5c5e\u6027\u6240\u505a\u66f4\u6539\u7684\u5305\u88c5\u7ed3\u6784\u3002"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},"use sea_orm::ActiveValue::NotSet;\n\n// \u8bbe\u7f6e\u503c\nlet _: ActiveValue<i32> = Set(10);\n\n// \u672a\u8bbe\u7f6e\u503c\nlet _: ActiveValue<i32> = NotSet;\n")),(0,a.yg)("h2",{id:"\u6a21\u578b\u4e0e-activemodel"},"\u6a21\u578b\u4e0e ActiveModel"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"ActiveModel")," \u5305\u542b\u4e86 ",(0,a.yg)("inlineCode",{parentName:"p"},"Model")," \u7684\u6240\u6709\u5c5e\u6027\uff0c\u5c01\u88c5\u5728 ",(0,a.yg)("inlineCode",{parentName:"p"},"ActiveValue")," \u4e2d\u3002"),(0,a.yg)("p",null,"\u60a8\u53ef\u4ee5\u4f7f\u7528 ",(0,a.yg)("inlineCode",{parentName:"p"},"ActiveModel")," \u63d2\u5165\u4e00\u884c\uff0c\u53ea\u8bbe\u7f6e\u90e8\u5206\u5217\u3002"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},'let cheese: Option<cake::Model> = Cake::find_by_id(1).one(db).await?;\n\n// \u83b7\u53d6\u6a21\u578b\nlet model: cake::Model = cheese.unwrap();\nassert_eq!(model.name, "Cheese Cake".to_owned());\n\n// \u8f6c\u6362\u4e3a ActiveModel\nlet active_model: cake::ActiveModel = model.into();\nassert_eq!(active_model.name, ActiveValue::unchanged("Cheese Cake".to_owned()));\n')),(0,a.yg)("h2",{id:"\u63d2\u5165\u4e00\u4e2a"},"\u63d2\u5165\u4e00\u4e2a"),(0,a.yg)("p",null,"\u63d2\u5165\u4e00\u4e2a\u6d3b\u52a8\u6a21\u578b\u5e76\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 ",(0,a.yg)("inlineCode",{parentName:"p"},"Model"),"\u3002\u5176\u503c\u662f\u4ece\u6570\u636e\u5e93\u4e2d\u68c0\u7d22\u7684\uff0c\u56e0\u6b64\u4efb\u4f55\u81ea\u52a8\u751f\u6210\u7684\u5b57\u6bb5\u90fd\u5c06\u88ab\u586b\u5145\u3002"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},'let pear = fruit::ActiveModel {\n    name: Set("Pear".to_owned()),\n    ..Default::default() // \u5176\u4ed6\u6240\u6709\u5c5e\u6027\u5747\u4e3a `NotSet`\n};\n\nlet pear: fruit::Model = pear.insert(db).await?;\n')),(0,a.yg)("p",null,"\u63d2\u5165\u4e00\u4e2a\u6d3b\u52a8\u6a21\u578b\u5e76\u8fd4\u56de\u6700\u540e\u63d2\u5165\u7684 ID\u3002\u5176\u7c7b\u578b\u4e0e\u6a21\u578b\u7684\u4e3b\u952e\u7c7b\u578b\u5339\u914d\uff0c\u56e0\u6b64\u5982\u679c\u6a21\u578b\u6709\u590d\u5408\u4e3b\u952e\uff0c\u5b83\u53ef\u4ee5\u662f\u4e00\u4e2a\u5143\u7ec4\u3002"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},'let pear = fruit::ActiveModel {\n    name: Set("Pear".to_owned()),\n    ..Default::default() // \u5176\u4ed6\u6240\u6709\u5c5e\u6027\u5747\u4e3a `NotSet`\n};\n\nlet res: InsertResult = fruit::Entity::insert(pear).exec(db).await?;\nassert_eq!(res.last_insert_id, 28)\n')),(0,a.yg)("h2",{id:"\u63d2\u5165\u591a\u4e2a"},"\u63d2\u5165\u591a\u4e2a"),(0,a.yg)("p",null,"\u63d2\u5165\u591a\u4e2a\u6d3b\u52a8\u6a21\u578b\u5e76\u8fd4\u56de\u6700\u540e\u63d2\u5165\u7684 ID\u3002"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},'let apple = fruit::ActiveModel {\n    name: Set("Apple".to_owned()),\n    ..Default::default()\n};\n\nlet orange = fruit::ActiveModel {\n    name: Set("Orange".to_owned()),\n    ..Default::default()\n};\n\nlet res: InsertResult = Fruit::insert_many(vec![apple, orange]).exec(db).await?;\nassert_eq!(res.last_insert_id, 30)\n')))}p.isMDXComponent=!0}}]);