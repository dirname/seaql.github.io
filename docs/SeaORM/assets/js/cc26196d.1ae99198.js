"use strict";(self.webpackChunksea_orm=self.webpackChunksea_orm||[]).push([[46929],{15680:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>f});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(r),m=a,f=d["".concat(p,".").concat(m)]||d[m]||s[m]||i;return r?n.createElement(f,o(o({ref:t},c),{},{components:r})):n.createElement(f,o({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},26388:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>s,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var n=r(58168),a=(r(96540),r(15680));const i={},o="\u66f4\u65b0",l={unversionedId:"basic-crud/update",id:"basic-crud/update",title:"\u66f4\u65b0",description:"\u66f4\u65b0\u5355\u4e2a\u8bb0\u5f55",source:"@site/docs/05-basic-crud/04-update.md",sourceDirName:"05-basic-crud",slug:"/basic-crud/update",permalink:"/SeaORM/docs/next/basic-crud/update",draft:!1,editUrl:"https://github.com/SeaQL/seaql.github.io/edit/master/SeaORM/docs/05-basic-crud/04-update.md",tags:[],version:"current",lastUpdatedBy:"Chris Tsang",lastUpdatedAt:1690399695,formattedLastUpdatedAt:"Jul 26, 2023",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u63d2\u5165",permalink:"/SeaORM/docs/next/basic-crud/insert"},next:{title:"\u4fdd\u5b58",permalink:"/SeaORM/docs/next/basic-crud/save"}},p={},u=[{value:"\u66f4\u65b0\u5355\u4e2a\u8bb0\u5f55",id:"\u66f4\u65b0\u5355\u4e2a\u8bb0\u5f55",level:2},{value:"\u6279\u91cf\u66f4\u65b0",id:"\u6279\u91cf\u66f4\u65b0",level:2},{value:"\u4f7f\u7528\u8fd4\u56de\u503c\u66f4\u65b0\uff08\u4ec5\u9650 Postgres\uff09",id:"\u4f7f\u7528\u8fd4\u56de\u503c\u66f4\u65b0\u4ec5\u9650-postgres",level:3}],c={toc:u},d="wrapper";function s(e){let{components:t,...r}=e;return(0,a.yg)(d,(0,n.A)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"\u66f4\u65b0"},"\u66f4\u65b0"),(0,a.yg)("h2",{id:"\u66f4\u65b0\u5355\u4e2a\u8bb0\u5f55"},"\u66f4\u65b0\u5355\u4e2a\u8bb0\u5f55"),(0,a.yg)("p",null,"\u60a8\u5c06\u4ece\u67e5\u8be2\u7ed3\u679c\u4e2d\u83b7\u53d6 ",(0,a.yg)("inlineCode",{parentName:"p"},"Model"),"\u3002\u5982\u679c\u60a8\u60f3\u5c06\u6a21\u578b\u4fdd\u5b58\u56de\u6570\u636e\u5e93\uff0c\u60a8\u9700\u8981\u5148\u5c06\u5176\u8f6c\u6362\u4e3a ",(0,a.yg)("inlineCode",{parentName:"p"},"ActiveModel"),"\u3002\u751f\u6210\u7684\u67e5\u8be2\u5c06\u4ec5\u5305\u542b\u5df2\u8bbe\u7f6e\u7684\u5c5e\u6027\u3002"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},'let pear: Option<fruit::Model> = Fruit::find_by_id(28).one(db).await?;\n\n// \u8f6c\u6362\u4e3a ActiveModel\nlet mut pear: fruit::ActiveModel = pear.unwrap().into();\n\n// \u66f4\u65b0\u540d\u79f0\u5c5e\u6027\npear.name = Set("\u751c\u68a8".to_owned()); // Sweet pear\n\n// SQL: `UPDATE "fruit" SET "name" = \'\u751c\u68a8\' WHERE "id" = 28`\nlet pear: fruit::Model = pear.update(db).await?;\n')),(0,a.yg)("p",null,"\u8981\u66f4\u65b0\u6240\u6709\u5c5e\u6027\uff0c\u60a8\u53ef\u4ee5\u5c06 ",(0,a.yg)("inlineCode",{parentName:"p"},"Unchanged")," \u8f6c\u6362\u4e3a ",(0,a.yg)("inlineCode",{parentName:"p"},"Set"),"\u3002"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},'// \u8f6c\u6362\u4e3a ActiveModel\nlet mut pear: fruit::ActiveModel = pear.into();\n\n// \u66f4\u65b0\u540d\u79f0\u5c5e\u6027\npear.name = Set("\u751c\u68a8".to_owned()); // Sweet pear\n\n// \u5c06\u7279\u5b9a\u5c5e\u6027\u6807\u8bb0\u4e3a\u201c\u810f\u201d\u72b6\u6001\uff08\u5f3a\u5236\u66f4\u65b0\uff09\npear.reset(fruit::Column::CakeId);\n// \u6216\uff0c\u5c06\u6240\u6709\u5c5e\u6027\u6807\u8bb0\u4e3a\u201c\u810f\u201d\u72b6\u6001\uff08\u5f3a\u5236\u66f4\u65b0\uff09\npear.reset_all();\n\n// SQL: `UPDATE "fruit" SET "name" = \'\u751c\u68a8\', "cake_id" = 10 WHERE "id" = 28`\nlet pear: fruit::Model = pear.update(db).await?;\n')),(0,a.yg)("h2",{id:"\u6279\u91cf\u66f4\u65b0"},"\u6279\u91cf\u66f4\u65b0"),(0,a.yg)("p",null,"\u60a8\u8fd8\u53ef\u4ee5\u5728\u6570\u636e\u5e93\u4e2d\u66f4\u65b0\u591a\u4e2a\u884c\uff0c\u800c\u65e0\u9700\u5355\u72ec\u67e5\u627e\u6bcf\u4e2a ",(0,a.yg)("inlineCode",{parentName:"p"},"Model"),"\u3002"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},"// \u4f7f\u7528 ActiveModel \u6279\u91cf\u8bbe\u7f6e\u5c5e\u6027\nlet update_result: UpdateResult = Fruit::update_many()\n    .set(pear)\n    .filter(fruit::Column::Id.eq(1))\n    .exec(db)\n    .await?;\n\n// \u66f4\u65b0 `fruit` SET `cake_id` = 1 WHERE `fruit`.`name` LIKE '%Apple%'\nFruit::update_many()\n    .col_expr(fruit::Column::CakeId, Expr::value(1))\n    .filter(fruit::Column::Name.contains(\"Apple\"))\n    .exec(db)\n    .await?;\n")),(0,a.yg)("h3",{id:"\u4f7f\u7528\u8fd4\u56de\u503c\u66f4\u65b0\u4ec5\u9650-postgres"},"\u4f7f\u7528\u8fd4\u56de\u503c\u66f4\u65b0\uff08\u4ec5\u9650 Postgres\uff09"),(0,a.yg)("p",null,"\u4f7f\u7528 ",(0,a.yg)("inlineCode",{parentName:"p"},"exec_with_returning")," \u8fd4\u56de\u5df2\u4fee\u6539\u7684\u6a21\u578b\uff1a"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},'let fruits: Vec<fruit::Model> = Fruit::update_many()\n    .col_expr(fruit::Column::CakeId, Expr::value(1))\n    .filter(fruit::Column::Name.contains("Apple"))\n    .exec_with_returning(db)\n    .await?;\n')))}s.isMDXComponent=!0}}]);