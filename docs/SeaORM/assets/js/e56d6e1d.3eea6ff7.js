"use strict";(self.webpackChunksea_orm=self.webpackChunksea_orm||[]).push([[31915],{15680:(e,r,n)=>{n.d(r,{xA:()=>s,yg:()=>y});var t=n(96540);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=t.createContext({}),d=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},s=function(e){var r=d(e.components);return t.createElement(l.Provider,{value:r},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=d(n),m=a,y=p["".concat(l,".").concat(m)]||p[m]||u[m]||o;return n?t.createElement(y,i(i({ref:r},s),{},{components:n})):t.createElement(y,i({ref:r},s))}));function y(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c[p]="string"==typeof e?e:a,i[1]=c;for(var d=2;d<o;d++)i[d]=n[d];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},69745:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var t=n(58168),a=(n(96540),n(15680));const o={},i="\u9519\u8bef\u5904\u7406",c={unversionedId:"advanced-query/error-handling",id:"version-0.11.x/advanced-query/error-handling",title:"\u9519\u8bef\u5904\u7406",description:"SeaORM \u4e2d\u7684\u6240\u6709\u8fd0\u884c\u65f6\u9519\u8bef\u90fd\u7531 DbErr \u8868\u793a\u3002",source:"@site/versioned_docs/version-0.11.x/08-advanced-query/09-error-handling.md",sourceDirName:"08-advanced-query",slug:"/advanced-query/error-handling",permalink:"/SeaORM/docs/0.11.x/advanced-query/error-handling",draft:!1,editUrl:"https://github.com/SeaQL/seaql.github.io/edit/master/SeaORM/versioned_docs/version-0.11.x/08-advanced-query/09-error-handling.md",tags:[],version:"0.11.x",lastUpdatedBy:"Chris Tsang",lastUpdatedAt:1675423514,formattedLastUpdatedAt:"Feb 3, 2023",sidebarPosition:9,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u81ea\u5b9a\u4e49\u6d3b\u52a8\u6a21\u578b",permalink:"/SeaORM/docs/0.11.x/advanced-query/custom-active-model"},next:{title:"\u521b\u5efa\u8868",permalink:"/SeaORM/docs/0.11.x/schema-statement/create-table"}},l={},d=[{value:"\u89e3\u6790\u6570\u636e\u5e93\u7279\u5b9a\u9519\u8bef",id:"\u89e3\u6790\u6570\u636e\u5e93\u7279\u5b9a\u9519\u8bef",level:2}],s={toc:d},p="wrapper";function u(e){let{components:r,...n}=e;return(0,a.yg)(p,(0,t.A)({},s,n,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"\u9519\u8bef\u5904\u7406"},"\u9519\u8bef\u5904\u7406"),(0,a.yg)("p",null,"SeaORM \u4e2d\u7684\u6240\u6709\u8fd0\u884c\u65f6\u9519\u8bef\u90fd\u7531 ",(0,a.yg)("a",{parentName:"p",href:"https://docs.rs/sea-orm/*/sea_orm/error/enum.DbErr.html"},(0,a.yg)("inlineCode",{parentName:"a"},"DbErr"))," \u8868\u793a\u3002"),(0,a.yg)("h2",{id:"\u89e3\u6790\u6570\u636e\u5e93\u7279\u5b9a\u9519\u8bef"},"\u89e3\u6790\u6570\u636e\u5e93\u7279\u5b9a\u9519\u8bef"),(0,a.yg)("p",null,"\u60a8\u53ef\u4ee5\u4ece ",(0,a.yg)("inlineCode",{parentName:"p"},"DbErr::Conn"),"\u3001",(0,a.yg)("inlineCode",{parentName:"p"},"DbErr::Exec")," \u6216 ",(0,a.yg)("inlineCode",{parentName:"p"},"DbErr::Query")," \u4e2d\u83b7\u53d6\u6570\u636e\u5e93\u7279\u5b9a\u7684\u9519\u8bef\u4ee3\u7801\u3002"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},'let mud_cake = cake::ActiveModel {\n    id: Set(1),\n    name: Set("Moldy Cake".to_owned()),\n    price: Set(dec!(10.25)),\n    gluten_free: Set(false),\n    serial: Set(Uuid::new_v4()),\n    bakery_id: Set(None),\n};\n\n// \u4f7f\u7528\u4e3b\u952e\uff08`id` \u5217\uff09\u8bbe\u7f6e\u4e3a 1 \u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u86cb\u7cd5\u3002\nlet cake = mud_cake.save(db).await.expect("\u65e0\u6cd5\u63d2\u5165\u86cb\u7cd5");\n\n// \u518d\u6b21\u63d2\u5165\u76f8\u540c\u7684\u884c\u5e76\u5931\u8d25\n// \u56e0\u4e3a\u6bcf\u884c\u7684\u4e3b\u952e\u5e94\u8be5\u662f\u552f\u4e00\u7684\u3002\nlet error: DbErr = cake\n    .into_active_model()\n    .insert(db)\n    .await\n    .expect_err("\u63d2\u5165\u5e94\u8be5\u56e0\u4e3b\u952e\u91cd\u590d\u800c\u5931\u8d25");\n\nmatch error {\n    DbErr::Exec(RuntimeErr::SqlxError(error)) => match error {\n        Error::Database(e) => {\n            // \u6211\u4eec\u68c0\u67e5\u6570\u636e\u5e93\uff08\u5728\u6b64\u60c5\u51b5\u4e0b\u662f MySQL\uff09\u629b\u51fa\u7684\u9519\u8bef\u4ee3\u7801\uff0c\n            // `23000` \u8868\u793a `ER_DUP_KEY`\uff1a\u8868\u4e2d\u5b58\u5728\u91cd\u590d\u952e\u3002\n            assert_eq!(e.code().unwrap(), "23000");\n        }\n        _ => panic!("\u610f\u5916\u7684 sqlx \u9519\u8bef\u7c7b\u578b"),\n    },\n    _ => panic!("\u610f\u5916\u7684\u9519\u8bef\u7c7b\u578b"),\n}\n')))}u.isMDXComponent=!0}}]);