"use strict";(self.webpackChunksea_orm=self.webpackChunksea_orm||[]).push([[19910],{15680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>m});var r=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(t),d=i,m=p["".concat(c,".").concat(d)]||p[d]||f[d]||o;return t?r.createElement(m,a(a({ref:n},u),{},{components:t})):r.createElement(m,a({ref:n},u))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[p]="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},47202:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=t(58168),i=(t(96540),t(15680));const o={},a="\u81ea\u5f15\u7528",l={unversionedId:"relation/self-referencing",id:"version-0.8.x/relation/self-referencing",title:"\u81ea\u5f15\u7528",description:"\u5728\u524d\u9762\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86 Linked \u7279\u6027\u3002\u5b83\u8fd8\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5b9a\u4e49\u81ea\u5f15\u7528\u5173\u7cfb\u3002",source:"@site/versioned_docs/version-0.8.x/07-relation/05-self-referencing.md",sourceDirName:"07-relation",slug:"/relation/self-referencing",permalink:"/SeaORM/docs/0.8.x/relation/self-referencing",draft:!1,editUrl:"https://github.com/SeaQL/seaql.github.io/edit/master/SeaORM/versioned_docs/version-0.8.x/07-relation/05-self-referencing.md",tags:[],version:"0.8.x",lastUpdatedBy:"Billy Chan",lastUpdatedAt:1658132004,formattedLastUpdatedAt:"Jul 18, 2022",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u94fe\u63a5\u5173\u7cfb",permalink:"/SeaORM/docs/0.8.x/relation/chained-relations"},next:{title:"Bakery Schema",permalink:"/SeaORM/docs/0.8.x/relation/bakery-schema"}},c={},s=[],u={toc:s},p="wrapper";function f(e){let{components:n,...t}=e;return(0,i.yg)(p,(0,r.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"\u81ea\u5f15\u7528"},"\u81ea\u5f15\u7528"),(0,i.yg)("p",null,"\u5728\u524d\u9762\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86 ",(0,i.yg)("a",{parentName:"p",href:"https://docs.rs/sea-orm/0.8/sea_orm/entity/trait.Linked.html"},(0,i.yg)("inlineCode",{parentName:"a"},"Linked"))," \u7279\u6027\u3002\u5b83\u8fd8\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5b9a\u4e49\u81ea\u5f15\u7528\u5173\u7cfb\u3002"),(0,i.yg)("p",null,"\u4ee5\u4e0b\u793a\u4f8b\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5f15\u7528\u81ea\u8eab\u7684\u5b9e\u4f53\u3002"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-rust"},'use sea_orm::entity::prelude::*;\n\n#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]\n#[sea_orm(table_name = "self_join")]\npub struct Model {\n    #[sea_orm(primary_key, auto_increment = false)] // \u4e3b\u952e\uff0c\u4e0d\u81ea\u52a8\u9012\u589e\n    pub uuid: Uuid,\n    pub uuid_ref: Option<Uuid>, // \u53ef\u9009\u7684\u5f15\u7528\n    pub time: Option<Time>, // \u53ef\u9009\u7684\u65f6\u95f4\n}\n\n#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]\npub enum Relation {\n    #[sea_orm(belongs_to = "Entity", from = "Column::UuidRef", to = "Column::Uuid")] // \u81ea\u5f15\u7528\u5173\u7cfb\n    SelfReferencing,\n}\n\npub struct SelfReferencingLink;\n\nimpl Linked for SelfReferencingLink {\n    type FromEntity = Entity;\n\n    type ToEntity = Entity;\n\n    fn link(&self) -> Vec<RelationDef> {\n        vec![Relation::SelfReferencing.def()] // \u8fd4\u56de\u81ea\u5f15\u7528\u5173\u7cfb\u5b9a\u4e49\n    }\n}\n')))}f.isMDXComponent=!0}}]);