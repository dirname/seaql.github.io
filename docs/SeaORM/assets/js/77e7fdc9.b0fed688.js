"use strict";(self.webpackChunksea_orm=self.webpackChunksea_orm||[]).push([[60075],{15680:(e,a,n)=>{n.d(a,{xA:()=>s,yg:()=>y});var t=n(96540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function o(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var g=t.createContext({}),m=function(e){var a=t.useContext(g),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},s=function(e){var a=m(e.components);return t.createElement(g.Provider,{value:a},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},c=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,i=e.originalType,g=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=m(n),c=r,y=p["".concat(g,".").concat(c)]||p[c]||u[c]||i;return n?t.createElement(y,l(l({ref:a},s),{},{components:n})):t.createElement(y,l({ref:a},s))}));function y(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=c;var o={};for(var g in a)hasOwnProperty.call(a,g)&&(o[g]=a[g]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var m=2;m<i;m++)l[m]=n[m];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}c.displayName="MDXCreateElement"},13062:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>g,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var t=n(58168),r=(n(96540),n(15680));const i={},l="\u7f16\u5199\u8fc1\u79fb",o={unversionedId:"migration/writing-migration",id:"version-0.7.x/migration/writing-migration",title:"\u7f16\u5199\u8fc1\u79fb",description:"\u6bcf\u4e2a\u8fc1\u79fb\u5305\u542b\u4e24\u4e2a\u65b9\u6cd5\uff1aup \u548c down\u3002up \u65b9\u6cd5\u7528\u4e8e\u4fee\u6539\u6570\u636e\u5e93\u6a21\u5f0f\uff0c\u4f8b\u5982\u6dfb\u52a0\u65b0\u8868\u3001\u5217\u6216\u7d22\u5f15\uff0c\u800c down \u65b9\u6cd5\u5219\u64a4\u9500\u5728 up \u65b9\u6cd5\u4e2d\u6267\u884c\u7684\u64cd\u4f5c\u3002",source:"@site/versioned_docs/version-0.7.x/05-migration/02-writing-migration.md",sourceDirName:"05-migration",slug:"/migration/writing-migration",permalink:"/SeaORM/docs/0.7.x/migration/writing-migration",draft:!1,editUrl:"https://github.com/SeaQL/seaql.github.io/edit/master/SeaORM/versioned_docs/version-0.7.x/05-migration/02-writing-migration.md",tags:[],version:"0.7.x",lastUpdatedBy:"Chris Tsang",lastUpdatedAt:1697098869,formattedLastUpdatedAt:"Oct 12, 2023",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u8bbe\u7f6e\u8fc1\u79fb",permalink:"/SeaORM/docs/0.7.x/migration/setting-up-migration"},next:{title:"\u8fd0\u884c\u8fc1\u79fb",permalink:"/SeaORM/docs/0.7.x/migration/running-migration"}},g={},m=[{value:"\u521b\u5efa\u8fc1\u79fb\u6587\u4ef6",id:"\u521b\u5efa\u8fc1\u79fb\u6587\u4ef6",level:2},{value:"\u5b9a\u4e49\u8fc1\u79fb",id:"\u5b9a\u4e49\u8fc1\u79fb",level:2},{value:"SeaQuery",id:"seaquery",level:3},{value:"\u6a21\u5f0f\u521b\u5efa\u65b9\u6cd5",id:"\u6a21\u5f0f\u521b\u5efa\u65b9\u6cd5",level:4},{value:"\u6a21\u5f0f\u4fee\u6539\u65b9\u6cd5",id:"\u6a21\u5f0f\u4fee\u6539\u65b9\u6cd5",level:4},{value:"\u6a21\u5f0f\u68c0\u67e5\u65b9\u6cd5",id:"\u6a21\u5f0f\u68c0\u67e5\u65b9\u6cd5",level:4},{value:"\u539f\u59cb SQL",id:"\u539f\u59cb-sql",level:3}],s={toc:m},p="wrapper";function u(e){let{components:a,...n}=e;return(0,r.yg)(p,(0,t.A)({},s,n,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"\u7f16\u5199\u8fc1\u79fb"},"\u7f16\u5199\u8fc1\u79fb"),(0,r.yg)("p",null,"\u6bcf\u4e2a\u8fc1\u79fb\u5305\u542b\u4e24\u4e2a\u65b9\u6cd5\uff1a",(0,r.yg)("inlineCode",{parentName:"p"},"up")," \u548c ",(0,r.yg)("inlineCode",{parentName:"p"},"down"),"\u3002",(0,r.yg)("inlineCode",{parentName:"p"},"up")," \u65b9\u6cd5\u7528\u4e8e\u4fee\u6539\u6570\u636e\u5e93\u6a21\u5f0f\uff0c\u4f8b\u5982\u6dfb\u52a0\u65b0\u8868\u3001\u5217\u6216\u7d22\u5f15\uff0c\u800c ",(0,r.yg)("inlineCode",{parentName:"p"},"down")," \u65b9\u6cd5\u5219\u64a4\u9500\u5728 ",(0,r.yg)("inlineCode",{parentName:"p"},"up")," \u65b9\u6cd5\u4e2d\u6267\u884c\u7684\u64cd\u4f5c\u3002"),(0,r.yg)("h2",{id:"\u521b\u5efa\u8fc1\u79fb\u6587\u4ef6"},"\u521b\u5efa\u8fc1\u79fb\u6587\u4ef6"),(0,r.yg)("p",null,"\u60a8\u53ef\u4ee5\u901a\u8fc7\u590d\u5236\u73b0\u6709\u7684\u8fc1\u79fb\u6587\u4ef6\u6216\u4f7f\u7528\u4e0b\u9762\u7684\u6a21\u677f\u6765\u521b\u5efa\u8fc1\u79fb\u3002\u8bf7\u8bb0\u5f97\u6309\u7167\u547d\u540d\u7ea6\u5b9a\u5c06\u6587\u4ef6\u547d\u540d\u4e3a ",(0,r.yg)("inlineCode",{parentName:"p"},"mYYYYMMDD_HHMMSS_migration_name.rs"),"\uff0c\u5e76\u76f8\u5e94\u5730\u66f4\u65b0 ",(0,r.yg)("a",{parentName:"p",href:"https://docs.rs/sea-schema/0.5/sea_schema/migration/trait.MigrationName.html#tymethod.name"},(0,r.yg)("inlineCode",{parentName:"a"},"MigrationName::name"))," \u65b9\u6cd5\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust",metastring:'title="migration/src/m20220101_000001_create_table.rs"',title:'"migration/src/m20220101_000001_create_table.rs"'},'use sea_schema::migration::prelude::*;\n\npub struct Migration;\n\nimpl MigrationName for Migration {\n    fn name(&self) -> &str {\n        "m20220101_000001_create_table"\n    }\n}\n\n#[async_trait::async_trait]\nimpl MigrationTrait for Migration {\n    async fn up(&self, manager: &SchemaManager) -> Result<(), DbErr> {\n        manager\n            .create_table( ... ) // \u521b\u5efa\u8868\n            .await\n    }\n\n    async fn down(&self, manager: &SchemaManager) -> Result<(), DbErr> {\n        manager\n            .drop_table( ... ) // \u5220\u9664\u8868\n            .await\n    }\n}\n')),(0,r.yg)("p",null,"\u53e6\u5916\uff0c\u60a8\u8fd8\u5fc5\u987b\u5728 ",(0,r.yg)("a",{parentName:"p",href:"https://docs.rs/sea-schema/0.5/sea_schema/migration/migrator/trait.MigratorTrait.html#tymethod.migrations"},(0,r.yg)("inlineCode",{parentName:"a"},"MigratorTrait::migrations"))," \u65b9\u6cd5\u4e2d\u5305\u542b\u65b0\u7684\u8fc1\u79fb\u3002\u8bf7\u6ce8\u610f\uff0c\u8fc1\u79fb\u5e94\u6309\u65f6\u95f4\u987a\u5e8f\u6392\u5e8f\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust",metastring:'title="migration/src/lib.rs"',title:'"migration/src/lib.rs"'},"pub use sea_schema::migration::*;\n\nmod m20220101_000001_create_table;\n\npub struct Migrator;\n\n#[async_trait::async_trait]\nimpl MigratorTrait for Migrator {\n    fn migrations() -> Vec<Box<dyn MigrationTrait>> {\n        vec![\n            Box::new(m20220101_000001_create_table::Migration), // \u6dfb\u52a0\u8fc1\u79fb\n        ]\n    }\n}\n")),(0,r.yg)("h2",{id:"\u5b9a\u4e49\u8fc1\u79fb"},"\u5b9a\u4e49\u8fc1\u79fb"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://docs.rs/sea-schema/0.5/sea_schema/migration/manager/struct.SchemaManager.html"},(0,r.yg)("inlineCode",{parentName:"a"},"SchemaManager"))," \u5e2e\u52a9\u60a8\u4f7f\u7528 SeaQuery \u6216\u539f\u59cb SQL \u5b9a\u4e49\u8fc1\u79fb\u3002"),(0,r.yg)("h3",{id:"seaquery"},"SeaQuery"),(0,r.yg)("p",null,"\u70b9\u51fb ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/SeaQL/sea-query#usage"},"\u8fd9\u91cc")," \u5feb\u901f\u4e86\u89e3 SeaQuery\u3002"),(0,r.yg)("h4",{id:"\u6a21\u5f0f\u521b\u5efa\u65b9\u6cd5"},"\u6a21\u5f0f\u521b\u5efa\u65b9\u6cd5"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"\u521b\u5efa\u8868"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"use entity::post;\n\nmanager\n    .create_table(\n        sea_query::Table::create()\n            .table(post::Entity)\n            .if_not_exists() // \u5982\u679c\u4e0d\u5b58\u5728\u5219\u521b\u5efa\n            .col(\n                ColumnDef::new(post::Column::Id)\n                    .integer()\n                    .not_null() // \u975e\u7a7a\n                    .auto_increment() // \u81ea\u589e\n                    .primary_key(), // \u4e3b\u952e\n            )\n            .col(ColumnDef::new(post::Column::Title).string().not_null())\n            .col(ColumnDef::new(post::Column::Text).string().not_null())\n            .to_owned()\n    )\n")),(0,r.yg)("details",null,(0,r.yg)("summary",null,"\u5982\u679c\u6ca1\u6709\u5b9a\u4e49 SeaORM \u5b9e\u4f53\u5462\uff1f"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"manager\n    .create_table(\n        Table::create()\n            .table(Post::Table)\n            .if_not_exists() // \u5982\u679c\u4e0d\u5b58\u5728\u5219\u521b\u5efa\n            .col(\n                ColumnDef::new(Post::Id)\n                    .integer()\n                    .not_null() // \u975e\u7a7a\n                    .auto_increment() // \u81ea\u589e\n                    .primary_key(), // \u4e3b\u952e\n            )\n            .col(ColumnDef::new(Post::Title).string().not_null())\n            .col(ColumnDef::new(Post::Text).string().not_null())\n            .to_owned()\n    )\n\n// \u4f7f\u7528 SeaQuery \u7684 `Iden` \u5b8f\u5b9a\u4e49\u6807\u8bc6\u7b26\n#[derive(Iden)]\npub enum Post {\n    Table, // \u8868\n    Id, // ID\n    Title, // \u6807\u9898\n    Text, // \u5185\u5bb9\n}\n")))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"\u521b\u5efa\u7d22\u5f15"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"manager.create_index(sea_query::Index::create())\n"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"\u521b\u5efa\u5916\u952e"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"manager.create_foreign_key(sea_query::ForeignKey::create())\n"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"\u521b\u5efa\u6570\u636e\u7c7b\u578b\uff08\u4ec5\u9650 PostgreSQL\uff09"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"manager.create_type(sea_query::Type::create())\n")))),(0,r.yg)("h4",{id:"\u6a21\u5f0f\u4fee\u6539\u65b9\u6cd5"},"\u6a21\u5f0f\u4fee\u6539\u65b9\u6cd5"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"\u5220\u9664\u8868"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"use entity::post;\n\nmanager\n    .drop_table(\n        sea_query::Table::drop()\n            .table(post::Entity)\n            .to_owned()\n    )\n")),(0,r.yg)("details",null,(0,r.yg)("summary",null,"\u5982\u679c\u6ca1\u6709\u5b9a\u4e49 SeaORM \u5b9e\u4f53\u5462\uff1f"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"manager\n    .drop_table(\n        sea_query::Table::drop()\n            .table(Post::Table)\n            .to_owned()\n    )\n\n// \u4f7f\u7528 SeaQuery \u7684 `Iden` \u5b8f\u5b9a\u4e49\u6807\u8bc6\u7b26\n#[derive(Iden)]\npub enum Post {\n    Table, // \u8868\n    Id, // ID\n    Title, // \u6807\u9898\n    Text, // \u5185\u5bb9\n}\n")))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"\u4fee\u6539\u8868"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"manager.alter_table(sea_query::Table::alter())\n"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"\u91cd\u547d\u540d\u8868"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"manager.rename_table(sea_query::Table::rename())\n"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"\u6e05\u7a7a\u8868"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"manager.truncate_table(sea_query::Table::truncate())\n"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"\u5220\u9664\u7d22\u5f15"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"manager.drop_index(sea_query::Index::drop())\n"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"\u5220\u9664\u5916\u952e"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"manager.drop_foreign_key(sea_query::ForeignKey::drop())\n"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"\u4fee\u6539\u6570\u636e\u7c7b\u578b\uff08\u4ec5\u9650 PostgreSQL\uff09"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"manager.alter_type(sea_query::Type::alter())\n"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"\u5220\u9664\u6570\u636e\u7c7b\u578b\uff08\u4ec5\u9650 PostgreSQL\uff09"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"manager.drop_type(sea_query::extension::postgres::Type())\n")))),(0,r.yg)("h4",{id:"\u6a21\u5f0f\u68c0\u67e5\u65b9\u6cd5"},"\u6a21\u5f0f\u68c0\u67e5\u65b9\u6cd5"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"\u662f\u5426\u5b58\u5728\u8868",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"manager.has_table(table_name)\n"))),(0,r.yg)("li",{parentName:"ul"},"\u662f\u5426\u5b58\u5728\u5217",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"manager.has_column(table_name, column_name)\n")))),(0,r.yg)("h3",{id:"\u539f\u59cb-sql"},"\u539f\u59cb SQL"),(0,r.yg)("p",null,"\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u539f\u59cb SQL \u5b9a\u4e49\u8fc1\u79fb\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'use sea_orm::Statement;\nuse sea_schema::migration::prelude::*;\n\npub struct Migration;\n\nimpl MigrationName for Migration {\n    fn name(&self) -> &str {\n        "m20220101_000001_create_table"\n    }\n}\n\n#[async_trait::async_trait]\nimpl MigrationTrait for Migration {\n    async fn up(&self, manager: &SchemaManager) -> Result<(), DbErr> {\n        let sql = "CREATE TABLE `cake` ( `id` int NOT NULL AUTO_INCREMENT PRIMARY KEY, `name` varchar(255) NOT NULL )";\n        let stmt = Statement::from_string(manager.get_database_backend(), sql.to_owned());\n        manager.get_connection().execute(stmt).await.map(|_| ())\n    }\n\n    async fn down(&self, manager: &SchemaManager) -> Result<(), DbErr> {\n        let sql = "DROP TABLE `cake`";\n        let stmt = Statement::from_string(manager.get_database_backend(), sql.to_owned());\n        manager.get_connection().execute(stmt).await.map(|_| ())\n    }\n}\n')))}u.isMDXComponent=!0}}]);