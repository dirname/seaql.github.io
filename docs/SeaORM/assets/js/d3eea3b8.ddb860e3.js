"use strict";(self.webpackChunksea_orm=self.webpackChunksea_orm||[]).push([[42256],{15680:(e,t,n)=>{n.d(t,{xA:()=>s,yg:()=>g});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),d=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=d(n),m=r,g=u["".concat(c,".").concat(m)]||u[m]||p[m]||i;return n?a.createElement(g,l(l({ref:t},s),{},{components:n})):a.createElement(g,l({ref:t},s))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},79744:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var a=n(58168),r=(n(96540),n(15680));const i={},l="\u63d2\u5165",o={unversionedId:"basic-crud/insert",id:"version-0.7.x/basic-crud/insert",title:"\u63d2\u5165",description:"\u5728\u6df1\u5165 SeaORM \u63d2\u5165\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4ecb\u7ecd ActiveValue \u548c ActiveModel\u3002",source:"@site/versioned_docs/version-0.7.x/06-basic-crud/02-insert.md",sourceDirName:"06-basic-crud",slug:"/basic-crud/insert",permalink:"/SeaORM/docs/0.7.x/basic-crud/insert",draft:!1,editUrl:"https://github.com/SeaQL/seaql.github.io/edit/master/SeaORM/versioned_docs/version-0.7.x/06-basic-crud/02-insert.md",tags:[],version:"0.7.x",lastUpdatedBy:"Chris Tsang",lastUpdatedAt:1648286882,formattedLastUpdatedAt:"Mar 26, 2022",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u9009\u62e9",permalink:"/SeaORM/docs/0.7.x/basic-crud/select"},next:{title:"\u66f4\u65b0",permalink:"/SeaORM/docs/0.7.x/basic-crud/update"}},c={},d=[{value:"ActiveValue",id:"activevalue",level:2},{value:"\u6a21\u578b\u4e0e ActiveModel",id:"\u6a21\u578b\u4e0e-activemodel",level:2},{value:"\u4ece JSON \u503c\u8bbe\u7f6e ActiveModel",id:"\u4ece-json-\u503c\u8bbe\u7f6e-activemodel",level:3},{value:"\u63d2\u5165\u4e00\u6761\u8bb0\u5f55",id:"\u63d2\u5165\u4e00\u6761\u8bb0\u5f55",level:2},{value:"\u63d2\u5165\u591a\u6761\u8bb0\u5f55",id:"\u63d2\u5165\u591a\u6761\u8bb0\u5f55",level:2}],s={toc:d},u="wrapper";function p(e){let{components:t,...n}=e;return(0,r.yg)(u,(0,a.A)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"\u63d2\u5165"},"\u63d2\u5165"),(0,r.yg)("p",null,"\u5728\u6df1\u5165 SeaORM \u63d2\u5165\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4ecb\u7ecd ",(0,r.yg)("inlineCode",{parentName:"p"},"ActiveValue")," \u548c ",(0,r.yg)("inlineCode",{parentName:"p"},"ActiveModel"),"\u3002"),(0,r.yg)("h2",{id:"activevalue"},"ActiveValue"),(0,r.yg)("p",null,"\u4e00\u4e2a\u5305\u88c5\u7ed3\u6784\u4f53\uff0c\u7528\u4e8e\u6355\u83b7\u5bf9 ",(0,r.yg)("inlineCode",{parentName:"p"},"ActiveModel")," \u5c5e\u6027\u6240\u505a\u7684\u66f4\u6539\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"use sea_orm::ActiveValue::NotSet;\n\n// \u8bbe\u7f6e\u503c\nlet _: ActiveValue<i32> = Set(10);\n\n// NotSet \u503c\nlet _: ActiveValue<i32> = NotSet;\n")),(0,r.yg)("h2",{id:"\u6a21\u578b\u4e0e-activemodel"},"\u6a21\u578b\u4e0e ActiveModel"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"ActiveModel")," \u5305\u542b\u4e86\u6240\u6709 ",(0,r.yg)("inlineCode",{parentName:"p"},"Model")," \u7684\u5c5e\u6027\uff0c\u5e76\u7528 ",(0,r.yg)("inlineCode",{parentName:"p"},"ActiveValue")," \u5305\u88c5\u3002"),(0,r.yg)("p",null,"\u60a8\u53ef\u4ee5\u4f7f\u7528 ",(0,r.yg)("inlineCode",{parentName:"p"},"ActiveModel")," \u63d2\u5165\u4e00\u884c\uff0c\u5176\u4e2d\u8bbe\u7f6e\u4e86\u90e8\u5206\u5217\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'let cheese: Option<cake::Model> = Cake::find_by_id(1).one(db).await?;\n\n// \u83b7\u53d6\u6a21\u578b\nlet model: cake::Model = cheese.unwrap();\nassert_eq!(model.name, "Cheese Cake".to_owned());\n\n// \u8f6c\u6362\u4e3a ActiveModel\nlet active_model: cake::ActiveModel = model.into();\nassert_eq!(active_model.name, ActiveValue::unchanged("Cheese Cake".to_owned()));\n')),(0,r.yg)("h3",{id:"\u4ece-json-\u503c\u8bbe\u7f6e-activemodel"},"\u4ece JSON \u503c\u8bbe\u7f6e ActiveModel"),(0,r.yg)("p",null,"\u5982\u679c\u60a8\u60f3\u5c06\u7528\u6237\u8f93\u5165\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u4e2d\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5c06 JSON \u503c\u8f6c\u6362\u4e3a ",(0,r.yg)("inlineCode",{parentName:"p"},"ActiveModel"),"\u3002\u8bf7\u6ce8\u610f\uff0c\u60a8\u53ef\u80fd\u60f3\u8981 ",(0,r.yg)("a",{parentName:"p",href:"https://serde.rs/attr-skip-serializing.html"},"\u8df3\u8fc7\u53cd\u5e8f\u5217\u5316")," JSON \u7684\u4e3b\u952e\u5c5e\u6027\uff0c\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u8fdb\u884c\u914d\u7f6e\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]\n#[sea_orm(table_name = "fruit")]\npub struct Model {\n    #[sea_orm(primary_key)]\n    #[serde(skip_deserializing)] // \u8df3\u8fc7\u53cd\u5e8f\u5217\u5316\n    pub id: i32,\n    pub name: String,\n    pub cake_id: Option<i32>,\n}\n')),(0,r.yg)("p",null,"\u4f7f\u7528 ",(0,r.yg)("inlineCode",{parentName:"p"},"set_from_json")," \u65b9\u6cd5\u5728 ",(0,r.yg)("inlineCode",{parentName:"p"},"ActiveModel")," \u4e2d\u8bbe\u7f6e\u5c5e\u6027\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'// \u4e00\u4e2a\u4e3b\u952e\u5df2\u8bbe\u7f6e\u7684 ActiveModel\nlet mut fruit = fruit::ActiveModel {\n    id: ActiveValue::Set(1),\n    name: ActiveValue::NotSet,\n    cake_id: ActiveValue::NotSet,\n};\n\n// \u8bf7\u6ce8\u610f\uff0c\u6b64\u65b9\u6cd5\u4e0d\u4f1a\u6539\u53d8 ActiveModel \u4e2d\u7684\u4e3b\u952e\u503c\nfruit.set_from_json(json!({\n    "id": 8,\n    "name": "Apple",\n    "cake_id": 1,\n}))?;\n\nassert_eq!(\n    fruit,\n    fruit::ActiveModel {\n        id: ActiveValue::Set(1),\n        name: ActiveValue::Set("Apple".to_owned()),\n        cake_id: ActiveValue::Set(Some(1)),\n    }\n);\n')),(0,r.yg)("p",null,"\u4f7f\u7528 ",(0,r.yg)("inlineCode",{parentName:"p"},"from_json")," \u65b9\u6cd5\u4ece JSON \u503c\u521b\u5efa\u65b0\u7684 ",(0,r.yg)("inlineCode",{parentName:"p"},"ActiveModel"),"\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'let fruit = fruit::ActiveModel::from_json(json!({\n    "name": "Apple",\n}))?;\n\nassert_eq!(\n    fruit,\n    fruit::ActiveModel {\n        id: ActiveValue::NotSet,\n        name: ActiveValue::Set("Apple".to_owned()),\n        cake_id: ActiveValue::NotSet,\n    }\n);\n')),(0,r.yg)("h2",{id:"\u63d2\u5165\u4e00\u6761\u8bb0\u5f55"},"\u63d2\u5165\u4e00\u6761\u8bb0\u5f55"),(0,r.yg)("p",null,"\u63d2\u5165\u4e00\u4e2a\u6d3b\u52a8\u6a21\u578b\uff0c\u5e76\u83b7\u5f97\u4e00\u4e2a\u65b0\u7684 ",(0,r.yg)("inlineCode",{parentName:"p"},"Model"),"\u3002\u5176\u503c\u662f\u4ece\u6570\u636e\u5e93\u4e2d\u83b7\u53d6\u7684\uff0c\u56e0\u6b64\u4efb\u4f55\u81ea\u52a8\u751f\u6210\u7684\u5b57\u6bb5\u90fd\u5c06\u88ab\u586b\u5145\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'let pear = fruit::ActiveModel {\n    name: Set("Pear".to_owned()),\n    ..Default::default() // \u5176\u4ed6\u6240\u6709\u5c5e\u6027\u5747\u4e3a `NotSet`\n};\n\nlet pear: fruit::Model = pear.insert(db).await?;\n')),(0,r.yg)("p",null,"\u63d2\u5165\u4e00\u4e2a\u6d3b\u52a8\u6a21\u578b\uff0c\u5e76\u8fd4\u56de\u6700\u540e\u63d2\u5165\u7684 ID\u3002\u5176\u7c7b\u578b\u4e0e\u6a21\u578b\u7684\u4e3b\u952e\u7c7b\u578b\u5339\u914d\uff0c\u56e0\u6b64\u5982\u679c\u6a21\u578b\u6709\u590d\u5408\u4e3b\u952e\uff0c\u5219\u53ef\u4ee5\u662f\u4e00\u4e2a\u5143\u7ec4\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'let pear = fruit::ActiveModel {\n    name: Set("Pear".to_owned()),\n    ..Default::default() // \u5176\u4ed6\u6240\u6709\u5c5e\u6027\u5747\u4e3a `NotSet`\n};\n\nlet res: InsertResult = fruit::Entity::insert(pear).exec(db).await?;\nassert_eq!(res.last_insert_id, 28)\n')),(0,r.yg)("h2",{id:"\u63d2\u5165\u591a\u6761\u8bb0\u5f55"},"\u63d2\u5165\u591a\u6761\u8bb0\u5f55"),(0,r.yg)("p",null,"\u63d2\u5165\u591a\u4e2a\u6d3b\u52a8\u6a21\u578b\uff0c\u5e76\u83b7\u5f97\u6700\u540e\u63d2\u5165\u7684 ID\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},'let apple = fruit::ActiveModel {\n    name: Set("Apple".to_owned()),\n    ..Default::default()\n};\n\nlet orange = fruit::ActiveModel {\n    name: Set("Orange".to_owned()),\n    ..Default::default()\n};\n\nlet res: InsertResult = Fruit::insert_many(vec![apple, orange]).exec(db).await?;\nassert_eq!(res.last_insert_id, 30)\n')))}p.isMDXComponent=!0}}]);