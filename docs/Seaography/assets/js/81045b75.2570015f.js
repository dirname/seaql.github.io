"use strict";(self.webpackChunkseaography=self.webpackChunkseaography||[]).push([[159],{5680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>d});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},c="mdxType",y={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=s(t),g=a,d=c["".concat(p,".").concat(g)]||c[g]||y[g]||o;return t?r.createElement(d,l(l({ref:n},u),{},{components:t})):r.createElement(d,l({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=g;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[c]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},6276:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>y,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=t(8168),a=(t(6540),t(5680));const o={},l="\u5b8f\u6587\u6863",i={unversionedId:"macros-documentation",id:"version-0.2.x/macros-documentation",title:"\u5b8f\u6587\u6863",description:"Filter \u6d3e\u751f\u5b8f",source:"@site/versioned_docs/version-0.2.x/05-macros-documentation.md",sourceDirName:".",slug:"/macros-documentation",permalink:"/Seaography/docs/0.2.x/macros-documentation",draft:!1,editUrl:"https://github.com/SeaQL/seaql.github.io/edit/master/Seaography/versioned_docs/version-0.2.x/05-macros-documentation.md",tags:[],version:"0.2.x",lastUpdatedBy:"Billy Chan",lastUpdatedAt:1669888475,formattedLastUpdatedAt:"Dec 1, 2022",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u6269\u5c55\u751f\u6210\u7684\u4ee3\u7801",permalink:"/Seaography/docs/0.2.x/extending-code"},next:{title:"DataLoader",permalink:"/Seaography/docs/0.2.x/data-loader"}},p={},s=[{value:"<code>Filter</code> \u6d3e\u751f\u5b8f",id:"filter-\u6d3e\u751f\u5b8f",level:2},{value:"\u5c5e\u6027",id:"\u5c5e\u6027",level:3},{value:"\u8f93\u5165",id:"\u8f93\u5165",level:3},{value:"\u8f93\u51fa",id:"\u8f93\u51fa",level:3},{value:"<code>RelationsCompact</code> \u6d3e\u751f\u5b8f",id:"relationscompact-\u6d3e\u751f\u5b8f",level:2},{value:"\u8f93\u5165",id:"\u8f93\u5165-1",level:3},{value:"\u8f93\u51fa",id:"\u8f93\u51fa-1",level:3},{value:"<code>relation</code> \u5b8f",id:"relation-\u5b8f",level:2},{value:"\u8f93\u5165",id:"\u8f93\u5165-2",level:3},{value:"\u8f93\u51fa",id:"\u8f93\u51fa-2",level:3},{value:"<code>EnumFilter</code> \u6d3e\u751f\u5b8f",id:"enumfilter-\u6d3e\u751f\u5b8f",level:2},{value:"\u8f93\u5165",id:"\u8f93\u5165-3",level:3},{value:"\u8f93\u51fa",id:"\u8f93\u51fa-3",level:3},{value:"<code>QueryRoot</code> \u5b8f",id:"queryroot-\u5b8f",level:2},{value:"\u5c5e\u6027",id:"\u5c5e\u6027-1",level:3},{value:"\u8f93\u5165",id:"\u8f93\u5165-4",level:3},{value:"\u8f93\u51fa",id:"\u8f93\u51fa-4",level:3}],u={toc:s},c="wrapper";function y(e){let{components:n,...t}=e;return(0,a.yg)(c,(0,r.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"\u5b8f\u6587\u6863"},"\u5b8f\u6587\u6863"),(0,a.yg)("h2",{id:"filter-\u6d3e\u751f\u5b8f"},(0,a.yg)("inlineCode",{parentName:"h2"},"Filter")," \u6d3e\u751f\u5b8f"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"Filter")," \u6d3e\u751f\u5b8f\u9644\u52a0\u5728 Sea ORM \u6a21\u578b\u4e0a\uff0c\u4ee5\u751f\u6210\u7ed3\u6784\u4f53\u548c\u51fd\u6570\uff0c\u8fd9\u4e9b\u7ed3\u6784\u4f53\u548c\u51fd\u6570\u7531 QueryRoot \u4f7f\u7528\uff0c\u4ee5\u63d0\u4f9b\u5b9e\u4f53\u7684\u67e5\u8be2\u529f\u80fd\u3002"),(0,a.yg)("h3",{id:"\u5c5e\u6027"},"\u5c5e\u6027"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},'#[sea_orm(table_name = "film")]\n')),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"table_name\uff1a\u7528\u4e8e\u5411\u5b8f\u63d0\u4f9b\u5c06\u7528\u4e8e\u7ed3\u6784\u4f53\u540d\u79f0\u7684\u5b9e\u4f53\u540d\u79f0")),(0,a.yg)("h3",{id:"\u8f93\u5165"},"\u8f93\u5165"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},'#[derive(\n    Clone,\n    Debug,\n    PartialEq,\n    DeriveModel,\n    DeriveActiveModel,\n    async_graphql::SimpleObject, // \u7531 Async GraphQL \u6240\u9700\n    seaography::macros::Filter, // \u5b8f\n)]\n#[sea_orm(table_name = "film")]\n#[graphql(complex)] // \u7531 Relations \u6d3e\u751f\u6240\u9700\n#[graphql(name = "Film")] // \u7531 Async GraphQL \u6240\u9700\npub struct Model {\n    pub film_id: u16,\n    pub title: String,\n    pub rating: Option<Rating>,\n    pub last_update: DateTimeUtc,\n}\n')),(0,a.yg)("h3",{id:"\u8f93\u51fa"},"\u8f93\u51fa"),(0,a.yg)("p",null,"\u7528\u4e8e\u63cf\u8ff0\u590d\u6742 SQL \u8fc7\u6ee4\u5668"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},'#[derive(Debug, async_graphql::InputObject)]\n#[graphql(name = "FilmFilter")]\npub struct Filter {\n    pub or: Option<Vec<Box<Filter>>>,\n    pub and: Option<Vec<Box<Filter>>>,\n    pub film_id: Option<seaography::TypeFilter<u16>>,\n    pub title: Option<seaography::TypeFilter<String>>,\n    // \u53c2\u89c1\u679a\u4e3e\u6d3e\u751f\n    pub rating: Option<crate::entities::sea_orm_active_enums::RatingEnumFilter>,\n    pub last_update: Option<seaography::TypeFilter<DateTimeUtc>>,\n}\n')),(0,a.yg)("p",null,"\u7528\u4e8e\u63a5\u6536 ",(0,a.yg)("inlineCode",{parentName:"p"},"Filter")," \u7ed3\u6784\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a sea_orm::Condition\uff0c\u4ee5\u5e94\u7528\u4e8e sea_orm \u67e5\u8be2\u8bed\u53e5"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},"pub fn filter_recursive(root_filter: Option<Filter>) -> sea_orm::Condition {\n    ...\n}\n")),(0,a.yg)("p",null,"\u7528\u4e8e\u63cf\u8ff0\u6392\u5e8f"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},'#[derive(Debug, async_graphql::InputObject)]\n#[graphql(name = "FilmOrderBy")]\npub struct OrderBy {\n    pub film_id: Option<seaography::OrderByEnum>,\n    pub title: Option<seaography::OrderByEnum>,\n    pub rating: Option<seaography::OrderByEnum>,\n    pub last_update: Option<seaography::OrderByEnum>,\n}\n')),(0,a.yg)("p",null,"\u7528\u4e8e\u63a5\u6536\u67e5\u8be2\u8bed\u53e5\u548c OrderBy \u7ed3\u6784\uff0c\u5e76\u4f7f\u7528\u6240\u9700\u7684\u6392\u5e8f\u66f4\u65b0\u8bed\u53e5\u3002"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},"pub fn order_by(stmt: sea_orm::Select<Entity>, order_by_struct: Option<OrderBy>) -> sea_orm::Select<Entity> {\n    ...\n}\n")),(0,a.yg)("h2",{id:"relationscompact-\u6d3e\u751f\u5b8f"},(0,a.yg)("inlineCode",{parentName:"h2"},"RelationsCompact")," \u6d3e\u751f\u5b8f"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"RelationsCompact")," \u6d3e\u751f\u5b8f\u9644\u52a0\u5728 Sea ORM Relations \u679a\u4e3e\u4e0a\uff0c\u4ee5\u751f\u6210\u7ed3\u6784\u4f53\u548c\u51fd\u6570\uff0c\u8fd9\u4e9b\u7ed3\u6784\u4f53\u548c\u51fd\u6570\u7531\u5b9e\u4f53\u4f7f\u7528\uff0c\u4ee5\u67e5\u8be2\u76f8\u5173\u5b9e\u4f53\u3002\u6b64\u6d3e\u751f\u9002\u7528\u4e8e\u5b9e\u4f53\u7684\u7d27\u51d1\u5f62\u5f0f\u3002"),(0,a.yg)("h3",{id:"\u8f93\u5165-1"},"\u8f93\u5165"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},'#[derive(\n    Copy,\n    Clone,\n    Debug,\n    EnumIter,\n    DeriveRelation,\n    seaography::macros::RelationsCompact,\n)]\npub enum Relation {\n    #[sea_orm(\n        belongs_to = "super::employees::Entity",\n        from = "Column::SupportRepId",\n        to = "super::employees::Column::EmployeeId",\n        on_update = "NoAction",\n        on_delete = "NoAction"\n    )]\n    Employees,\n    #[sea_orm(has_many = "super::invoices::Entity")]\n    Invoices,\n}\n')),(0,a.yg)("h3",{id:"\u8f93\u51fa-1"},"\u8f93\u51fa"),(0,a.yg)("p",null,"\u4e3a\u5b9e\u4f53\u6a21\u578b\u5b9e\u73b0\u4ee5\u4e0b\u5185\u5bb9\uff1a"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},"// \u9700\u8981\u5728\u6a21\u578b\u4e0a\u542f\u7528 graphql \u590d\u6742\u6807\u5fd7\n#[async_graphql::ComplexObject]\nimpl Model {\n    pub fn employees<'a>(\n        &self,\n        ctx: &async_graphql::Context<'a>,\n    ) -> Option<#return_type>\n    {\n      ...\n    }\n\n    pub fn invoices<'a>(\n        &self,\n        ctx: &async_graphql::Context<'a>,\n    ) -> Option<#return_type>\n    {\n      // \u4f7f\u7528 context.dataloader.load::<InvoicesFK>(...) \u6765\u6d3e\u53d1\u67e5\u8be2\n      ...\n    }\n}\n")),(0,a.yg)("p",null,"\u5bf9\u4e8e\u6bcf\u4e2a\u679a\u4e3e\u53d8\u4f53\uff0c\u751f\u6210\u4ee5\u4e0b\u5185\u5bb9\uff1a"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},"// \u7528\u4e8e\u4e0a\u4e0b\u6587\u52a0\u8f7d\u5668\n#[derive(Clone, Debug)]\npub struct EmployeesFK(...);\n\n// \u4e3a\u5916\u952e\u5b9e\u73b0\u52a0\u8f7d\u51fd\u6570\n#[async_trait::async_trait]\nimpl async_graphql::dataloader::Loader<EmployeesFK> for crate::OrmDataloader {\n    type Value = #return_type;\n    type Error = std::sync::Arc<sea_orm::error::DbErr>;\n\n    async fn load(\n        &self,\n        keys: &[#EmployeesFK],\n    ) -> Result<\n        std::collections::HashMap<#EmployeesFK, Self::Value>,\n        Self::Error\n    >\n    {\n        ...\n    }\n}\n")),(0,a.yg)("h2",{id:"relation-\u5b8f"},(0,a.yg)("inlineCode",{parentName:"h2"},"relation")," \u5b8f"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"relation")," \u5b8f\u9644\u52a0\u5728 Sea ORM RelationTrait \u5b9e\u73b0\u4e0a\uff0c\u4ee5\u751f\u6210\u7ed3\u6784\u4f53\u548c\u51fd\u6570\uff0c\u8fd9\u4e9b\u7ed3\u6784\u4f53\u548c\u51fd\u6570\u7531\u5b9e\u4f53\u4f7f\u7528\uff0c\u4ee5\u67e5\u8be2\u76f8\u5173\u5b9e\u4f53\u3002\u6b64\u6d3e\u751f\u9002\u7528\u4e8e\u5b9e\u4f53\u7684\u6269\u5c55\u5f62\u5f0f\u3002"),(0,a.yg)("h3",{id:"\u8f93\u5165-2"},"\u8f93\u5165"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},"#[seaography::macros::relation]\nimpl RelationTrait for Relation {\n    fn def(&self) -> RelationDef {\n        match self {\n            Self::Employees => Entity::belongs_to(super::employees::Entity)\n                .from(Column::SupportRepId)\n                .to(super::employees::Column::EmployeeId)\n                .into(),\n            Self::Invoices => Entity::has_many(super::invoices::Entity).into(),\n        }\n    }\n}\n")),(0,a.yg)("h3",{id:"\u8f93\u51fa-2"},"\u8f93\u51fa"),(0,a.yg)("p",null,"\u5b83\u4ea7\u751f\u4e0e ",(0,a.yg)("inlineCode",{parentName:"p"},"RelationsCompact")," \u76f8\u540c\u7684\u7ed3\u679c\u3002"),(0,a.yg)("h2",{id:"enumfilter-\u6d3e\u751f\u5b8f"},(0,a.yg)("inlineCode",{parentName:"h2"},"EnumFilter")," \u6d3e\u751f\u5b8f"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"EnumFilter")," \u5b8f\u9644\u52a0\u5728 Sea ORM Enum \u4e0a\uff0c\u4ee5\u751f\u6210\u5176\u7528\u4e8e\u5b9e\u4f53\u8fc7\u6ee4\u7684 GraphQL \u8fc7\u6ee4\u7ed3\u6784\u3002"),(0,a.yg)("h3",{id:"\u8f93\u5165-3"},"\u8f93\u5165"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},'#![doc = "SeaORM \u5b9e\u4f53\u3002\u7531 sea-orm-codegen 0.9.1 \u751f\u6210"]\nuse sea_orm::entity::prelude::*;\n#[derive(\n    Debug,\n    Clone,\n    PartialEq,\n    EnumIter,\n    DeriveActiveEnum,\n    Eq,\n    Copy,\n    async_graphql::Enum, // \u7531 GraphQL \u6240\u9700\n    seaography::macros::EnumFilter, // \u5b8f\n)]\n#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "rating")]\npub enum Rating {\n    #[sea_orm(string_value = "G")]\n    G,\n    #[sea_orm(string_value = "PG")]\n    Pg,\n    #[sea_orm(string_value = "PG-13")]\n    Pg13,\n    #[sea_orm(string_value = "R")]\n    R,\n    #[sea_orm(string_value = "NC-17")]\n    Nc17,\n}\n')),(0,a.yg)("h3",{id:"\u8f93\u51fa-3"},"\u8f93\u51fa"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},"#[derive(Debug, async_graphql::InputObject)]\npub struct RatingEnumFilter {\n    pub eq: Option<Rating>,\n    pub ne: Option<Rating>,\n    pub gt: Option<Rating>,\n    pub gte: Option<Rating>,\n    pub lt: Option<Rating>,\n    pub lte: Option<Rating>,\n    pub is_in: Option<Vec<Rating>>,\n    pub is_not_in: Option<Vec<Rating>>,\n    pub is_null: Option<bool>,\n}\n")),(0,a.yg)("h2",{id:"queryroot-\u5b8f"},(0,a.yg)("inlineCode",{parentName:"h2"},"QueryRoot")," \u5b8f"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"QueryRoot")," \u6d3e\u751f\u5b8f\u7528\u4e8e\u751f\u6210\u6bcf\u4e2a\u901a\u8fc7\u5c5e\u6027\u5b9a\u4e49\u7684\u5b9e\u4f53\u7684\u67e5\u8be2\u3002\u8be5\u67e5\u8be2\u652f\u6301\u8fc7\u6ee4\u3001\u5206\u9875\u548c\u6392\u5e8f\u3002"),(0,a.yg)("h3",{id:"\u5c5e\u6027-1"},"\u5c5e\u6027"),(0,a.yg)("p",null,"\u5b83\u542f\u7528\u6307\u5b9a\u8def\u5f84 ",(0,a.yg)("inlineCode",{parentName:"p"},"Entity")," \u7684\u67e5\u8be2\uff0c\u5e76\u6307\u793a ",(0,a.yg)("inlineCode",{parentName:"p"},"QueryRoot")," \u6d3e\u751f\u5728\u751f\u6210\u7684\u4ee3\u7801\u4e2d\u67e5\u627e\u6240\u9700\u7684\u5de5\u5177\u7ed3\u6784\u548c\u51fd\u6570\u3002"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},'#[seaography(entity = "crate::entities::artists")]\n')),(0,a.yg)("h3",{id:"\u8f93\u5165-4"},"\u8f93\u5165"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},'#[derive(Debug, seaography :: macros :: QueryRoot)]\n#[seaography(entity = "crate::entities::artists")]\n#[seaography(entity = "crate::entities::employees")]\npub struct QueryRoot;\n')),(0,a.yg)("h3",{id:"\u8f93\u51fa-4"},"\u8f93\u51fa"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},"#[derive(Debug, async_graphql::InputObject)]\npub struct PageInput {\n    pub limit: usize,\n    pub page: usize,\n}\n\n#[derive(Debug, async_graphql::InputObject)]\npub struct CursorInput {\n    pub cursor: Option<String>,\n    pub limit: u64,\n}\n\n#[derive(async_graphql::OneofObject)]\npub enum Pagination {\n    Pages(PageInput),\n    Cursor(CursorInput),\n}\n\n/// \u9875\u7801\u5206\u9875\u7684\u989d\u5916\u5b57\u6bb5\n#[derive(async_graphql::SimpleObject)]\npub struct ExtraPaginationFields {\n    pub pages: Option<usize>,\n    pub current: Option<usize>,\n}\n\n/// CursorValues \u7528\u4e8e\u7f16\u7801/\u89e3\u7801\u4efb\u4f55\u6a21\u578b\u7684\u4e3b\u952e\u4ee5\u8fdb\u884c\u6e38\u6807\u5206\u9875\n#[derive(Debug)]\npub struct CursorValues(pub Vec<sea_orm::Value>);\n\nimpl async_graphql::types::connection::CursorType for CursorValues {\n    type Error = String;\n\n    /// \u7528\u4e8e\u5c06\u6e38\u6807\u5b57\u7b26\u4e32\u89e3\u7801\u4e3a\u503c\u7684\u5411\u91cf\n    fn decode_cursor(s: &str) -> Result<Self, Self::Error> {\n        ...\n    }\n\n    /// \u7528\u4e8e\u5c06\u503c\u7684\u5411\u91cf\u7f16\u7801\u4e3a\u6e38\u6807\u5b57\u7b26\u4e32\n    fn encode_cursor(&self) -> String {\n        ...\n    }\n}\n\n/// \u7528\u4e8e\u8ddf\u8e2a\u6e38\u6807\u5b57\u7b26\u4e32\u7684\u89e3\u6790\u72b6\u6001\n#[derive(Debug)]\npub enum DecodeMode {\n    Type,\n    Length,\n    ColonSkip,\n    Data,\n}\n\n/// \u7528\u4e8e\u5c06\u503c\u7684\u5411\u91cf\u89e3\u6790\u4e3a ValueTuple \u679a\u4e3e\npub fn map_cursor_values(values: Vec<sea_orm::Value>) -> sea_orm::sea_query::value::ValueTuple {\n    ...\n}\n\n#[async_graphql::Object]\nimpl QueryRoot {\n    pub async fn actor<'a>(\n        &self,\n        ctx: &async_graphql::Context<'a>,\n        filters: Option<crate::entities::actor::Filter>,\n        pagination: Option<Pagination>,\n        order_by: Option<crate::entities::actor::OrderBy>,\n    ) -> async_graphql::types::connection::Connection<\n        String,\n        crate::entities::actor::Model,\n        ExtraPaginationFields,\n        async_graphql::types::connection::EmptyFields,\n    > {\n        // 1. \u4f7f\u7528\u5b9a\u4e49\n        // 2. \u521d\u59cb\u5316\u6570\u636e\u5e93\u8fde\u63a5\n        // 3. \u521b\u5efa SQL \u8bed\u53e5\n        // 4. \u5e94\u7528\u8fc7\u6ee4\u548c\u6392\u5e8f\n        // 5. \u5e94\u7528\u5206\u9875\n        // 6. \u8fd4\u56de\u7ed3\u679c\n    }\n\n    pub async fn address<'a>(\n        &self,\n        ctx: &async_graphql::Context<'a>,\n        filters: Option<crate::entities::address::Filter>,\n        pagination: Option<Pagination>,\n        order_by: Option<crate::entities::address::OrderBy>,\n    ) -> async_graphql::types::connection::Connection<\n        String,\n        crate::entities::address::Model,\n        ExtraPaginationFields,\n        async_graphql::types::connection::EmptyFields,\n    > {\n        ...\n    }\n}\n")))}y.isMDXComponent=!0}}]);